# -*- mode: makefile-gmake; -*-
#
# Copyright (c) 2006-2017 Microsemi Corporation "Microsemi". All Rights Reserved.
#
# Unpublished rights reserved under the copyright laws of the United States of
# America, other countries and international treaties. Permission to use, copy,
# store and modify, the software and its source code is granted but only in
# connection with products utilizing the Microsemi switch and PHY products.
# Permission is also granted for you to integrate into other products, disclose,
# transmit and distribute the software only in an absolute machine readable
# format (e.g. HEX file) and only in or with products utilizing the Microsemi
# switch and PHY products.  The source code of the software may not be
# disclosed, transmitted or distributed without the prior written permission of
# Microsemi.
#
# This copyright notice must appear in any copy, modification, disclosure,
# transmission or distribution of the software.  Microsemi retains all
# ownership, copyright, trade secret and proprietary rights in the software and
# its source code, including all modifications thereto.
#
# THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
# WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
# ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
# NON-INFRINGEMENT.
#

# @arg $1 is name of variable
# @arg $2 is a path that $1 must be assigned with if $1 is undefined and if $2 exists
define AssignIfUndefinedAndExists
  ifeq ($(origin $1), undefined)
    ifneq (,$(wildcard $2))
        $1 := $2
    endif
  endif
endef

# @arg $1 is variable list to check
define CheckSet
 $(foreach var,$1,$(if $($(var)),,$(error $(var) is not set!)))
endef

# @arg $1 is value to check
# @arg $2 is legal values
# @arg $3 is name of argument $1 (error message)
define CheckOneOf
 $(if $(filter $1,$2),,$(error $3 ($1) is invalid, must be one of ($2)))
endef

# @arg $1 is board name
# @arg $2 are valid board names
define CheckBoard
	$(call CheckOneOf,$1,$2 $(Custom/BoardName),Board Type)
endef

# @arg $1 is product chip
# @arg $2 is board type
define Setup/Switch
	VTSS_PRODUCT_CHIP := $1
	VTSS_PRODUCT_HW   := $2
endef

