
# Copyright (c) 2006-2020 Microsemi Corporation "Microsemi". All Rights Reserved.
#
# Unpublished rights reserved under the copyright laws of the United States of
# America, other countries and international treaties. Permission to use, copy,
# store and modify, the software and its source code is granted but only in
# connection with products utilizing the Microsemi switch and PHY products.
# Permission is also granted for you to integrate into other products, disclose,
# transmit and distribute the software only in an absolute machine readable
# format (e.g. HEX file) and only in or with products utilizing the Microsemi
# switch and PHY products.  The source code of the software may not be
# disclosed, transmitted or distributed without the prior written permission of
# Microsemi.
#
# This copyright notice must appear in any copy, modification, disclosure,
# transmission or distribution of the software.  Microsemi retains all
# ownership, copyright, trade secret and proprietary rights in the software and
# its source code, including all modifications thereto.
#
# THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
# WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
# ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
# NON-INFRINGEMENT.

DIR_frr := $(DIR_APPL)/frr
MODULE_ID_frr := 143 # VTSS_MODULE_ID_FRR

OBJECTS_frr_common := frr.o frr_daemon.o frr_ip_route.o frr_utils.o

OBJECTS_frr_router := frr_router_access.o frr_router.o frr_router_expose.o \
               $(if $(MODULE_JSON_RPC), frr_router_json.o) \
               $(if $(MODULE_ICFG),frr_router_icfg.o) \
               $(if $(MODULE_ICLI),frr_router_icli_functions.o) \
               $(if $(MODULE_PRIVATE_MIB), frr_router_mib.o)


# All objects
OBJECTS_frr := $(OBJECTS_frr_common)

# Compile/dependencies
$(OBJECTS_frr_common): %.o: $(DIR_frr)/%.cxx
	$(call compile_cxx,$(MODULE_ID_frr), $@, $<,)

# Include files
INCLUDES += -I$(DIR_frr)

# Built-in ICLI
$(eval $(call add_icli,$(MODULE_ID_frr),$(DIR_frr)/frr_daemon.icli))

# S/W coding style check
VTSS_CODE_STYLE_CHK_FILES_frr := \
  $(DIR_frr)/*.cxx               \
  $(DIR_frr)/*.hxx

# Clone the FRR package for local building
frr_clone:
	@echo "Fetch FRR (Free Range Routing) Project Repository"
	cd $(DIR_frr) && git clone git@bitbucket.microchip.com:unge/sw-webstax-quagga-layer.git $(FRR_SRC_NAME)

# Build the FRR package locally if available
FRR_SRC_NAME := frr_project_src
FRR_PROJECT_PATH := $(DIR_frr)/$(FRR_SRC_NAME)

ifneq ("$(wildcard $(FRR_PROJECT_PATH))", "")
build_frr_project:
	@echo "Build FRR (dynamic routing) from $(FRR_PROJECT_PATH)"
	cd $(FRR_PROJECT_PATH) && make MSCC_SDK_ARCH=$(MSCC_SDK_ARCH)
else
build_frr_project:
	@echo "Use FRR (dynamic routing) binary package"
endif

