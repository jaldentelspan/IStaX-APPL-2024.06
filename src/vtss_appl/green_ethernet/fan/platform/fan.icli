# Copyright (c) 2006-2023 Microsemi Corporation "Microsemi". All Rights Reserved.
#
# Unpublished rights reserved under the copyright laws of the United States of
# America, other countries and international treaties. Permission to use, copy,
# store and modify, the software and its source code is granted but only in
# connection with products utilizing the Microsemi switch and PHY products.
# Permission is also granted for you to integrate into other products, disclose,
# transmit and distribute the software only in an absolute machine readable
# format (e.g. HEX file) and only in or with products utilizing the Microsemi
# switch and PHY products.  The source code of the software may not be
# disclosed, transmitted or distributed without the prior written permission of
# Microsemi.
#
# This copyright notice must appear in any copy, modification, disclosure,
# transmission or distribution of the software.  Microsemi retains all
# ownership, copyright, trade secret and proprietary rights in the software and
# its source code, including all modifications thereto.
#
# THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
# WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
# ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
# NON-INFRINGEMENT.


INCLUDE_BEGIN
#include "fan_icli_functions.h"
INCLUDE_END

FUNCTION_BEGIN
static BOOL fan_present(u32 session_id, icli_runtime_ask_t ask, icli_runtime_t *runtime)
{
    if (ask == ICLI_ASK_PRESENT) {
        runtime->present = fan_module_enabled();
        return TRUE;
   }
   return FALSE;
}

FUNCTION_END

HELP_GREEN = Power reduction configurations.
HELP_FAN = Configuration of fan speed. 
HELP_TEMP = HELP = Temperature value from -127 degrees Celsius to +127 degrees Celsius.
!==============================================================================
CMD_BEGIN

DOC_CMD_DESC    = Shows Fan status (chip Temperature and fan speed).

DOC_CMD_USAGE   = Use to show fan status.

DOC_CMD_EXAMPLE = show green-ethernet fan

COMMAND =   show green-ethernet fan

PRIVILEGE = ICLI_PRIVILEGE_15

PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE

CMD_MODE = ICLI_CMD_MODE_EXEC

RUNTIME = fan_present

HELP = Shows green Ethernet status for the switch.
HELP = Shows green Ethernet status for the switch.
HELP = Shows green Ethernet fan status.

CODE_BEGIN
    fan_status(session_id);
CODE_END

CMD_END


!==============================================================================
CMD_BEGIN

DOC_CMD_DESC    =

DOC_CMD_USAGE   =

DOC_CMD_EXAMPLE = green-ethernet fan temp-on 30 temp-max 50

COMMAND = green-ethernet fan [ temp-on <-127-127>] [ temp-max <-127-127>]  [ pwm { 20Hz | 40Hz | 60Hz | 80Hz | 100Hz | 120Hz | 25KHz } ]

PRIVILEGE = ICLI_PRIVILEGE_15

PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE

CMD_MODE = ICLI_CMD_MODE_GLOBAL_CONFIG

RUNTIME = fan_present

! green-ethernet
CMD_VAR =
RUNTIME =
HELP    = Configure green Ethernet features
BYWORD =

! fan
CMD_VAR =
RUNTIME =
HELP    = Configure fan parameters
BYWORD =

! temp-on
CMD_VAR = has_temp_on
RUNTIME =
HELP    = Configure temperature at which to turn fan on to the lowest speed.
BYWORD  = temp_on : Option

! <-127 - 127>
CMD_VAR = temp_on_num
RUNTIME =
HELP    = temperature on value
BYWORD = <TempOnNum : -127 - 127>

! temp-max
CMD_VAR = has_temp_max
RUNTIME =
HELP    = Configure temperature where the fan must be running at full speed.
BYWORD  = temp_on : Option

! <-127 - 127>
CMD_VAR = temp_max_num
RUNTIME =
HELP    = temperature max value
BYWORD = <TempMaxNum : -127 - 127>

! pwm
CMD_VAR = has_pwm
RUNTIME =
HELP    = PWM frequency use to control to fan. If not specified, use default value
BYWORD  =

! 20Hz
CMD_VAR = has_20Hz
RUNTIME =
HELP    = PWM frequency 20Hz
BYWORD  =

! 40Hz
CMD_VAR = has_40Hz
RUNTIME =
HELP    = PWM frequency 40Hz
BYWORD  =

! 60Hz
CMD_VAR = has_60Hz
RUNTIME =
HELP    = PWM frequency 60Hz
BYWORD  =

! 80Hz
CMD_VAR = has_80Hz
RUNTIME =
HELP    = PWM frequency 80Hz
BYWORD  =

! 100Hz
CMD_VAR = has_100Hz
RUNTIME =
HELP    = PWM frequency 100Hz
BYWORD  =

! 120Hz
CMD_VAR = has_120Hz
RUNTIME =
HELP    = PWM frequency 120Hz
BYWORD  =

! 25KHz
CMD_VAR = has_25KHz
RUNTIME =
HELP    = PWM frequency 25KHz
BYWORD  =

CODE_BEGIN
   mesa_fan_pwd_freq_t pwm;
   if (has_20Hz) {
       pwm = MESA_FAN_PWM_FREQ_20HZ;
   }
   if (has_40Hz) {
       pwm = MESA_FAN_PWM_FREQ_40HZ;
   }
   if (has_60Hz) {
       pwm = MESA_FAN_PWM_FREQ_60HZ;
   }
   if (has_80Hz) {
       pwm = MESA_FAN_PWM_FREQ_80HZ;
   }
   if (has_100Hz) {
       pwm = MESA_FAN_PWM_FREQ_100HZ;
   }
   if (has_120Hz) {
       pwm = MESA_FAN_PWM_FREQ_120HZ;
   }
   if (has_25KHz) {
       pwm = MESA_FAN_PWM_FREQ_25KHZ;
   }

   VTSS_RC(fan_temp(session_id, has_temp_on, temp_on_num, has_temp_max, temp_max_num, has_pwm, pwm, FALSE));
CODE_END

CMD_END

!==============================================================================
CMD_BEGIN

DOC_CMD_DESC    =

DOC_CMD_USAGE   =

DOC_CMD_EXAMPLE = no green-ethernet fan temp-on 30 temp-max 50

COMMAND = no green-ethernet fan [ temp-on [ <-127-127> ] ] [ temp-max [ <-127-127> ] ]

PRIVILEGE = ICLI_PRIVILEGE_15

PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE

CMD_MODE = ICLI_CMD_MODE_GLOBAL_CONFIG

RUNTIME = fan_present

! no
CMD_VAR =
RUNTIME =
HELP    = Negate a command or set its defaults
BYWORD =

! green-ethernet
CMD_VAR =
RUNTIME =
HELP    = Configure green Ethernet
BYWORD =

! fan
CMD_VAR =
RUNTIME =
HELP    = Configure fan parameters
BYWORD =

! temp-on
CMD_VAR = has_temp_on
RUNTIME =
HELP    = Configure temperature at which to turn fan on to the lowest speed.
BYWORD  = temp_on : Option

! <-127 - 127>
CMD_VAR = temp_on_num
RUNTIME =
HELP    = temperature on value
BYWORD = <TempOnNum : -127 - 127>

! temp-max
CMD_VAR = has_temp_max
RUNTIME =
HELP    = Configure temperature where the fan must be running at full speed.
BYWORD  = temp_max : Option

! <-127 - 127>
CMD_VAR = temp_max_num
RUNTIME =
HELP    = temperature max value
BYWORD = <TempMaxNum : -127 - 127>

CODE_BEGIN
   VTSS_RC(fan_temp(session_id, has_temp_on, temp_on_num, has_temp_max, temp_max_num, FALSE, MESA_FAN_PWM_FREQ_20HZ, TRUE));
CODE_END

CMD_END

