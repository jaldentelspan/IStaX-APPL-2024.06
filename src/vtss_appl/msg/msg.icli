#
# Copyright (c) 2006-2017 Microsemi Corporation "Microsemi". All Rights Reserved.
#
# Unpublished rights reserved under the copyright laws of the United States of
# America, other countries and international treaties. Permission to use, copy,
# store and modify, the software and its source code is granted but only in
# connection with products utilizing the Microsemi switch and PHY products.
# Permission is also granted for you to integrate into other products, disclose,
# transmit and distribute the software only in an absolute machine readable
# format (e.g. HEX file) and only in or with products utilizing the Microsemi
# switch and PHY products.  The source code of the software may not be
# disclosed, transmitted or distributed without the prior written permission of
# Microsemi.
#
# This copyright notice must appear in any copy, modification, disclosure,
# transmission or distribution of the software.  Microsemi retains all
# ownership, copyright, trade secret and proprietary rights in the software and
# its source code, including all modifications thereto.
#
# THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
# WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
# ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
# NON-INFRINGEMENT.
#

MODULE_IF_FLAG =

INCLUDE_BEGIN
#include "msg_api.h"

/*lint -esym(459, _debug_msg_cmd)   */
INCLUDE_END

FUNCTION_BEGIN
FUNCTION_END

!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND   = debug msg cmd [ <1-100> [ parameter-count <0-4> [ <int> [ <int> [ <int> [ <int> ]]]]] ]
PRIVILEGE = ICLI_PRIVILEGE_15
CMD_MODE  = ICLI_CMD_MODE_EXEC

FUNC_NAME = _debug_msg_cmd

! debug
CMD_VAR =
BYWORD  =
HELP    = ##ICLI_HELP_DEBUG
RUNTIME =

! msg
CMD_VAR =
BYWORD  =
HELP    = Message module
RUNTIME =

! cmd
CMD_VAR =
BYWORD  =
HELP    = Display or run debug command
RUNTIME =

! <1-100>
CMD_VAR = cmd_no
BYWORD  =
HELP    = Command number to execute
RUNTIME =

! parameter-count
CMD_VAR =
BYWORD  =
HELP    = Count of parameters to command
RUNTIME =

! <0-4>
CMD_VAR = para_cnt
BYWORD  =
HELP    = Count of parameters
RUNTIME =

! <int>
CMD_VAR = para_1
BYWORD  =
HELP    = Parameter 1
RUNTIME =

! <int>
CMD_VAR = para_2
BYWORD  =
HELP    = Parameter 2
RUNTIME =

! <int>
CMD_VAR = para_3
BYWORD  =
HELP    = Parameter 3
RUNTIME =

! <int>
CMD_VAR = para_4
BYWORD  =
HELP    = Parameter 4
RUNTIME =

VARIABLE_BEGIN
    u32     parms[ 5 ];
VARIABLE_END

CODE_BEGIN
    if ( cmd_no ) {
        parms[0] = cmd_no;

        if ( para_cnt ) {
            parms[1] = (u32)para_1;
            parms[2] = (u32)para_2;
            parms[3] = (u32)para_3;
            parms[4] = (u32)para_4;
        }

        // because of cmd_no
        ++para_cnt;
    }

    msg_dbg((msg_dbg_printf_t)icli_session_self_printf, para_cnt, parms);
CODE_END

CMD_END
