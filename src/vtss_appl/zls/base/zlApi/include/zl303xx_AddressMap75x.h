

/*******************************************************************************
*
*  $Id: 8410f584bd768792a15e60f6157c94bf8acedd47
*  Copyright 2006-2022 Microchip Technology Inc.
*  All rights reserved.
*
*  Module Description:
*     Values and constants for the ZLS3075X device internal address map
*
*******************************************************************************/

#ifndef ZL303XX_ADDRESS_MAP_75X_H_
#define ZL303XX_ADDRESS_MAP_75X_H_

#ifdef __cplusplus
extern "C" {
#endif

/*****************   INCLUDE FILES   ******************************************/

#include "zl303xx_Global.h"
#include "zl303xx_AddressMap.h"

/*****************   DEFINES   ************************************************/

#define ZLS3075X_DPLL_MAX                           4        /* DPLL 0-3 */
#define ZLS3075X_REF_MAX                            10       /* ref 0-9 */
#define ZLS3075X_NUM_SYNTHS                         4        /* synth 0-3 */
#define ZLS3075X_NUM_POST_DIVS                      4        /* post_div A-D */
#define ZLS3075X_STICKY_UPDATE_DELAY_MS             25       /* Delay in ms between sticky register updates */


/*****************   REGISTER ADDRESSES   *************************************/
/* Register size defines */

/* Mask to cover all possible size bits:
   - 6 bits allows a range of 0-63 (corresponds to size of 1-64 bytes) */
#define ZL303XX_MEM_SIZE_MASK_75X                     (Uint32T)0x0003F000
#define ZL303XX_MEM_SIZE_SHIFT_75X                    (Uint16T)12

/* Macro to extract the encoded SIZE (in bytes) from a virtual address */
#define ZL303XX_MEM_SIZE_EXTRACT_75X(addr)   \
      (Uint8T)(((addr & ZL303XX_MEM_SIZE_MASK_75X) >> ZL303XX_MEM_SIZE_SHIFT_75X) + 1)

/* Generic versions of the above defines */
#define ZL303XX_MEM_SIZE_MASK                         (Uint32T)0x0003F000
#define ZL303XX_MEM_SIZE_SHIFT                        (Uint16T)12

/* Macro to extract the encoded SIZE (in bytes) from a virtual address */
#define ZL303XX_MEM_SIZE_EXTRACT(addr)   \
      (Uint8T)(((addr & ZL303XX_MEM_SIZE_MASK) >> ZL303XX_MEM_SIZE_SHIFT) + 1)

/* Macro to encode the register SIZE for insertion into a virtual address */
#define ZL303XX_MEM_SIZE_INSERT_75X(bytes)       \
      (Uint32T)((((Uint32T)(bytes) - 1) << ZL303XX_MEM_SIZE_SHIFT_75X)  \
                                                      & ZL303XX_MEM_SIZE_MASK_75X)


/* Register address defines */

/* address mask, extract & insert definitions */
#define ZL303XX_MEM_ADDR_MASK_75X                     (Uint32T)0x0000007F
#define ZL303XX_MEM_ADDR_AND_PAGE_MASK_75X            (Uint32T)0x00000FFF

/* Macro to get the destination address from a given virtual register address. */
#define ZL303XX_MEM_ADDR_EXTRACT_75X(addr)                           \
      (Uint32T)((addr) & ZL303XX_MEM_ADDR_MASK_75X)

/* Macro to set the virtual register address into a virtual address  */
#define ZL303XX_MEM_ADDR_INSERT_75X(addr)                            \
      (Uint32T)((Uint32T)(addr) & ZL303XX_MEM_ADDR_MASK_75X)


/* Register page defines */

#define ZL303XX_MEM_PAGE_MASK_75X                     (Uint32T)0x00000F80
#define ZL303XX_MEM_PAGE_SHIFT_75X                    (Uint16T)7

/* Macro to extract the encoded PAGE value from a virtual address */
#define ZL303XX_MEM_PAGE_EXTRACT_75X(addr)   \
      (Uint8T)(((addr) & ZL303XX_MEM_PAGE_MASK_75X) >> ZL303XX_MEM_PAGE_SHIFT_75X)

/* Macro to encode the PAGE value for insertion into a virtual address */
#define ZL303XX_MEM_PAGE_INSERT_75X(page)       \
      (Uint32T)(((Uint32T)(page) << ZL303XX_MEM_PAGE_SHIFT_75X) & ZL303XX_MEM_PAGE_MASK_75X)

/* Paged addresses are within the following range */
#define ZL303XX_PAGED_ADDR_MIN_75X                    (Uint32T)0x00
#define ZL303XX_PAGED_ADDR_MAX_75X                    (Uint32T)0x7E


/* Register construction defines */

/* Construct a memory address for a register on a specific device.
   The device field is not filled in by this macro */

/* Page can be ignored, use virtual addresses and decode the page in the driver */
#define ZL303XX_MAKE_MEM_ADDR_75X(fulladdr,size)        \
      (Uint32T)(((fulladdr) & ZL303XX_MEM_ADDR_AND_PAGE_MASK_75X) |       \
                ZL303XX_MEM_SIZE_INSERT_75X(size))


#define ZLS3075X_INFO_REG                           ZL303XX_MAKE_MEM_ADDR_75X(0x0000, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_ID_REG                             ZL303XX_MAKE_MEM_ADDR_75X(0x0001, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_REVISION_REG                       ZL303XX_MAKE_MEM_ADDR_75X(0x0003, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_CUSTOM_CONFIG_VER_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0007, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_CENTRAL_FREQ_OFFSET_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x000B, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SPURS_SUPPRESSION_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0022, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_XOMON_CTRL_REG                     ZL303XX_MAKE_MEM_ADDR_75X(0x0026, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_XOMON_SELECT_REG                   ZL303XX_MAKE_MEM_ADDR_75X(0x0027, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_XOMON_LIMIT_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x0028, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_XOMON_CNT_LIMIT_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x002C, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_XOMON_CNT_LIMIT_REF_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x0030, ZL303XX_MEM_SIZE_4_BYTE)

#define ZLS3075X_REF_IRQ_MASK_7_0_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0080, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_IRQ_MASK_11_8_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0081, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_IRQ_MASK_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0082, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_MASK_0_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0084, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_MASK_1_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0085, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_MASK_2_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0086, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_MASK_3_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0087, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_MASK_4_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0088, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_MASK_5_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0089, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_MASK_6_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x008A, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_MASK_7_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x008B, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_MASK_8_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x008C, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_MASK_9_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x008D, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_MASK_0_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0094, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_MASK_1_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0095, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_MASK_2_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0096, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_MASK_3_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0097, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_IRQ_CONFIG_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x00A4, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_OUT_7_0_REG                   ZL303XX_MAKE_MEM_ADDR_75X(0x00AE, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_OUT_11_8_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00AF, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_FREEZE_7_0_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x00B2, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_FREEZE_11_8_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x00B3, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_SELECT_0_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00B6, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_GPIO_CONFIG_0_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00B8, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_SELECT_1_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00B9, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_GPIO_CONFIG_1_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00BB, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_SELECT_2_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00BC, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_GPIO_CONFIG_2_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00BE, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_SELECT_3_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00BF, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_GPIO_CONFIG_3_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00C1, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_SELECT_4_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00C2, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_GPIO_CONFIG_4_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00C4, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_SELECT_5_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00C5, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_GPIO_CONFIG_5_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00C7, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_SELECT_6_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00C8, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_GPIO_CONFIG_6_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x00CA, ZL303XX_MEM_SIZE_1_BYTE)

#define ZLS3075X_GPIO_IN_STATUS_7_0_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x0100, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GPIO_IN_STATUS_11_8_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x0101, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STATUS_0_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0106, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STATUS_1_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0107, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STATUS_2_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0108, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STATUS_3_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0109, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STATUS_4_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x010A, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STATUS_5_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x010B, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STATUS_6_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x010C, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STATUS_7_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x010D, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STATUS_8_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x010E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STATUS_9_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x010F, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_STATUS_0_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0116, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_STATUS_1_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0117, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_STATUS_2_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0118, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_STATUS_3_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0119, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_REFSEL_STATUS_1_0_REG         ZL303XX_MAKE_MEM_ADDR_75X(0x0126, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_REFSEL_STATUS_3_2_REG         ZL303XX_MAKE_MEM_ADDR_75X(0x0127, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_PBO_COUNT_0_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x012E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_PBO_ERROR_0_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x012F, ZL303XX_MEM_SIZE_3_BYTE)
#define ZLS3075X_DPLL_PBO_COUNT_1_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0132, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_PBO_ERROR_1_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0133, ZL303XX_MEM_SIZE_3_BYTE)
#define ZLS3075X_DPLL_PBO_COUNT_2_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0136, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_PBO_ERROR_2_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0137, ZL303XX_MEM_SIZE_3_BYTE)
#define ZLS3075X_DPLL_PBO_COUNT_3_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x013A, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_PBO_ERROR_3_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x013B, ZL303XX_MEM_SIZE_3_BYTE)
#define ZLS3075X_SYNTH_LOL_REG                      ZL303XX_MAKE_MEM_ADDR_75X(0x016E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_XOMON_STATUS_REG                   ZL303XX_MAKE_MEM_ADDR_75X(0x0175, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_XOMON_REF_STATUS_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0176, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_XO_STATUS_0_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x0177, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_XO_STATUS_1_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x0178, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_XO_STATUS_2_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x0179, ZL303XX_MEM_SIZE_1_BYTE)

#define ZLS3075X_STICKY_LOCK_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x0180, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_IRQ_ACTIVE_7_0_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x0182, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_IRQ_ACTIVE_11_8_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x0183, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_IRQ_ACTIVE_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0184, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STICKY_0_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0186, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STICKY_1_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0187, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STICKY_2_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0188, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STICKY_3_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0189, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STICKY_4_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x018A, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STICKY_5_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x018B, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STICKY_6_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x018C, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STICKY_7_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x018D, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STICKY_8_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x018E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_MON_STICKY_9_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x018F, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_STICKY_0_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0196, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_STICKY_1_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0197, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_STICKY_2_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0198, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MON_STICKY_3_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0199, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_FASTLOCK_PHASE_STICKY_REG     ZL303XX_MAKE_MEM_ADDR_75X(0x01A6, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_FASTLOCK_FREQ_STICKY_REG      ZL303XX_MAKE_MEM_ADDR_75X(0x01A8, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH_STEP_STICKY_1_0_REG          ZL303XX_MAKE_MEM_ADDR_75X(0x01AC, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH_STEP_STICKY_3_2_REG          ZL303XX_MAKE_MEM_ADDR_75X(0x01AD, ZL303XX_MEM_SIZE_1_BYTE)

#define ZLS3075X_REF_LOS_7_0_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x0200, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_LOS_11_8_REG                   ZL303XX_MAKE_MEM_ADDR_75X(0x0201, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_ENABLE_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x021C, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_DUAL_MODE_CTRL_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x0219, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MODE_REFSEL_0_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x021E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_CTRL_0_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x021F, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MODE_REFSEL_1_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x0221, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_CTRL_1_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x0222, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MODE_REFSEL_2_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x0224, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_CTRL_2_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x0225, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_MODE_REFSEL_3_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x0227, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_CTRL_3_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x0228, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_GP_OUT_CTRL_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x024E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_HP_OUT_CTRL_1_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0250, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_HP_OUT_ROUTING_1_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0251, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_HP_OUT_CTRL_2_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0252, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_HP_OUT_ROUTING_2_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0253, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_HP_OUT_CTRL_3_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0254, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_HP_OUT_ROUTING_3_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0255, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_CALIBR_ALIGNMENT_CTRL_REG          ZL303XX_MAKE_MEM_ADDR_75X(0x025C, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_TEMP_CTRL_REG                      ZL303XX_MAKE_MEM_ADDR_75X(0x026A, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_TEMP_DATA_REG                      ZL303XX_MAKE_MEM_ADDR_75X(0x026B, ZL303XX_MEM_SIZE_1_BYTE)

#define ZLS3075X_EXT_FB_CTRL_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x02D0, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_EXT_FB_SEL_REG                     ZL303XX_MAKE_MEM_ADDR_75X(0x02D1, ZL303XX_MEM_SIZE_1_BYTE)

#define ZLS3075X_DPLL_DF_OFFSET_0_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0300, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_DPLL_DF_CTRL_0_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0305, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_TIE_CTRL_0_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x030A, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_DF_OFFSET_1_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0310, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_DPLL_DF_CTRL_1_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0315, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_TIE_CTRL_1_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x031A, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_DF_OFFSET_2_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0320, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_DPLL_DF_CTRL_2_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0325, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_TIE_CTRL_2_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x032A, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_DF_OFFSET_3_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0330, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_DPLL_DF_CTRL_3_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0335, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_TIE_CTRL_3_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x033A, ZL303XX_MEM_SIZE_1_BYTE)

#define ZLS3075X_DPLL_TOD_CTRL_0_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0400, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_TOD_SEC_0_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0401, ZL303XX_MEM_SIZE_6_BYTE)
#define ZLS3075X_DPLL_TOD_NS_0_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0407, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_DPLL_TOD_CTRL_1_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x040B, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_TOD_SEC_1_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x040C, ZL303XX_MEM_SIZE_6_BYTE)
#define ZLS3075X_DPLL_TOD_NS_1_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0412, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_DPLL_TOD_CTRL_2_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0416, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_TOD_SEC_2_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0417, ZL303XX_MEM_SIZE_6_BYTE)
#define ZLS3075X_DPLL_TOD_NS_2_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x041D, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_DPLL_TOD_CTRL_3_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0421, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_TOD_SEC_3_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0422, ZL303XX_MEM_SIZE_6_BYTE)
#define ZLS3075X_DPLL_TOD_NS_3_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0428, ZL303XX_MEM_SIZE_4_BYTE)

#define ZLS3075X_PHASE_STEP_CTRL_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0501, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_PHASE_STEP_MAX_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0502, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_PHASE_STEP_DATA_REG_HI1            ZL303XX_MAKE_MEM_ADDR_75X(0x0503, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_PHASE_STEP_DATA_REG_LO4            ZL303XX_MAKE_MEM_ADDR_75X(0x0504, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH_STEP_DIV_MASK_1_0_REG        ZL303XX_MAKE_MEM_ADDR_75X(0x0510, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH_STEP_DIV_MASK_3_2_REG        ZL303XX_MAKE_MEM_ADDR_75X(0x0511, ZL303XX_MEM_SIZE_1_BYTE)

#define ZLS3075X_REF_CTRL_REG                       ZL303XX_MAKE_MEM_ADDR_75X(0x0582, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_REF_SEMAPHORE_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0584, ZL303XX_MEM_SIZE_1_BYTE)

/* Generic ref registers since all mailboxes use the same address */
#define ZLS3075X_REFX_FREQ_BASE_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0585, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_REFX_FREQ_MULT_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0587, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_REFX_RATIO_M_REG                   ZL303XX_MAKE_MEM_ADDR_75X(0x0589, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_REFX_RATIO_N_REG                   ZL303XX_MAKE_MEM_ADDR_75X(0x058B, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_REFX_CONFIG_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x058D, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REFX_SCM_REG                       ZL303XX_MAKE_MEM_ADDR_75X(0x058F, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REFX_CFM_REG                       ZL303XX_MAKE_MEM_ADDR_75X(0x0590, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REFX_GST_REG                       ZL303XX_MAKE_MEM_ADDR_75X(0x0591, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REFX_PFM_CTRL_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0592, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REFX_PFM_DISQUALIFY_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x0593, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_REFX_PFM_QUALIFY_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0595, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_REFX_PFM_PERIOD_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0597, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_REFX_PFM_FILTER_LIMIT_REG          ZL303XX_MAKE_MEM_ADDR_75X(0x0599, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REFX_PHASE_MEM_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x059A, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REFX_SYNC_REG                      ZL303XX_MAKE_MEM_ADDR_75X(0x059B, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REFX_SYNC_MISC_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x059C, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REFX_SYNC_OFFSET_COMP_REG          ZL303XX_MAKE_MEM_ADDR_75X(0x059D, ZL303XX_MEM_SIZE_1_BYTE)

#define ZLS3075X_DPLL_CTRL_REG                      ZL303XX_MAKE_MEM_ADDR_75X(0x0602, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_DPLL_SEMAPHORE_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0604, ZL303XX_MEM_SIZE_1_BYTE)

/* Generic dpll register since all mailboxes use the same address */
#define ZLS3075X_DPLLX_BW_FIXED_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0605, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_BW_VAR_REG                   ZL303XX_MAKE_MEM_ADDR_75X(0x0606, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_CONFIG_REG                   ZL303XX_MAKE_MEM_ADDR_75X(0x0608, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PSL_REG                      ZL303XX_MAKE_MEM_ADDR_75X(0x0609, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_DPLLX_PSL_MAX_PHASE_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x060B, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_DPLLX_PSL_SCALING_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x060D, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PSL_DECAY_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x060E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_RANGE_REG                    ZL303XX_MAKE_MEM_ADDR_75X(0x060F, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_DPLLX_REF_SW_MASK_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0611, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_REF_HO_MASK_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0612, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_HO_FILTER_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0613, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_HO_DELAY_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0614, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PRIORITY_1_0_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x0615, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PRIORITY_3_2_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x0616, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PRIORITY_5_4_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x0617, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PRIORITY_7_6_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x0618, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PRIORITY_9_8_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x0619, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_LOCK_PHASE_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x061D, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_LOCK_PERIOD_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x061E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_FAST_LOCK_CTRL_REG           ZL303XX_MAKE_MEM_ADDR_75X(0x061F, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_FAST_LOCK_PHASE_ERR_REG      ZL303XX_MAKE_MEM_ADDR_75X(0x0620, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_FAST_LOCK_FREQ_ERR_REG       ZL303XX_MAKE_MEM_ADDR_75X(0x0621, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_DAMPING_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0622, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_DUAL_CONFIG_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x0623, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PBO_REG                      ZL303XX_MAKE_MEM_ADDR_75X(0x0626, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PBO_JITTER_THRESH_REG        ZL303XX_MAKE_MEM_ADDR_75X(0x0627, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PBO_MIN_SLOPE_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x0628, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PBO_END_INTERVAL_REG         ZL303XX_MAKE_MEM_ADDR_75X(0x0629, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_PBO_TIME_OUT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x062A, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_LOCK_DELAY_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0638, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_FP_FIRST_REALIGN_REG         ZL303XX_MAKE_MEM_ADDR_75X(0x0639, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_FP_REALIGN_INTVL_REG         ZL303XX_MAKE_MEM_ADDR_75X(0x063A, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLLX_FP_LOCK_THRESH_REG           ZL303XX_MAKE_MEM_ADDR_75X(0x063B, ZL303XX_MEM_SIZE_1_BYTE)

#define ZLS3075X_SYNTH_CTRL_REG                     ZL303XX_MAKE_MEM_ADDR_75X(0x0682, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH_SEMAPHORE_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0684, ZL303XX_MEM_SIZE_1_BYTE)

#define ZLS3075X_SYNTH0_VCO_FREQ_BASE_REG           ZL303XX_MAKE_MEM_ADDR_75X(0x0685, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH0_VCO_FREQ_MULT_REG           ZL303XX_MAKE_MEM_ADDR_75X(0x0687, ZL303XX_MEM_SIZE_3_BYTE)
#define ZLS3075X_SYNTH0_VCO_FREQ_M_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x068A, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH0_VCO_FREQ_N_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x068C, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH0_CONFIG_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0693, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH0_OUT_A_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0699, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH0_OUT_A_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x0699, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH0_OUT_A_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x069A, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH0_OUT_A_DRIVER_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x069E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH0_OUT_A_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x069F, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH0_OUT_A_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06A1, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH0_OUT_A_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06A5, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH0_OUT_A_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06A5, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH0_OUT_A_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06A6, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH0_OUT_B_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x06AD, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH0_OUT_B_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x06AD, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH0_OUT_B_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x06AE, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH0_OUT_B_DRIVER_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x06B2, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH0_OUT_B_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x06B3, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH0_OUT_B_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06B5, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH0_OUT_B_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06B9, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH0_OUT_B_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06B9, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH0_OUT_B_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06BA, ZL303XX_MEM_SIZE_4_BYTE)

#define ZLS3075X_SYNTH1_VCO_FREQ_BASE_REG           ZL303XX_MAKE_MEM_ADDR_75X(0x0685, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH1_VCO_FREQ_MULT_REG           ZL303XX_MAKE_MEM_ADDR_75X(0x0687, ZL303XX_MEM_SIZE_3_BYTE)
#define ZLS3075X_SYNTH1_VCO_FREQ_M_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x068A, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH1_VCO_FREQ_N_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x068C, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH1_CONFIG_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0693, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_A_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0699, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH1_OUT_A_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x0699, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_A_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x069A, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH1_OUT_A_DRIVER_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x069E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_A_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x069F, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_A_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06A1, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH1_OUT_A_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06A5, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH1_OUT_A_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06A5, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_A_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06A6, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH1_OUT_B_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x06AD, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH1_OUT_B_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x06AD, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_B_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x06AE, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH1_OUT_B_DRIVER_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x06B2, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_B_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x06B3, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_B_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06B5, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH1_OUT_B_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06B9, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH1_OUT_B_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06B9, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_B_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06BA, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH1_OUT_C_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x06C1, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH1_OUT_C_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x06C1, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_C_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x06C2, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH1_OUT_C_DRIVER_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x06C6, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_C_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x06C7, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_C_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06C9, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH1_OUT_C_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06CD, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH1_OUT_C_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06CD, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_C_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06CE, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH1_OUT_D_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x06D5, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH1_OUT_D_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x06D5, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_D_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x06D6, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH1_OUT_D_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x06DB, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_D_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06DD, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH1_OUT_D_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06E1, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH1_OUT_D_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06E1, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH1_OUT_D_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06E2, ZL303XX_MEM_SIZE_4_BYTE)

#define ZLS3075X_SYNTH2_VCO_FREQ_BASE_REG           ZL303XX_MAKE_MEM_ADDR_75X(0x0685, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH2_VCO_FREQ_MULT_REG           ZL303XX_MAKE_MEM_ADDR_75X(0x0687, ZL303XX_MEM_SIZE_3_BYTE)
#define ZLS3075X_SYNTH2_VCO_FREQ_M_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x068A, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH2_VCO_FREQ_N_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x068C, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH2_CONFIG_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0693, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_CONFIG2_REG                 ZL303XX_MAKE_MEM_ADDR_75X(0x0694, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_A_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0699, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH2_OUT_A_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x0699, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_A_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x069A, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH2_OUT_A_DRIVER_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x069E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_A_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x069F, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_A_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06A1, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH2_OUT_A_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06A5, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH2_OUT_A_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06A5, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_A_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06A6, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH2_OUT_B_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x06AD, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH2_OUT_B_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x06AD, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_B_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x06AE, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH2_OUT_B_DRIVER_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x06B2, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_B_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x06B3, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_B_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06B5, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH2_OUT_B_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06B9, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH2_OUT_B_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06B9, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_B_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06BA, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH2_OUT_C_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x06C1, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH2_OUT_C_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x06C1, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_C_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x06C2, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH2_OUT_C_DRIVER_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x06C6, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_C_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x06C7, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_C_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06C9, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH2_OUT_C_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06CD, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH2_OUT_C_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06CD, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_C_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06CE, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH2_OUT_D_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x06D5, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH2_OUT_D_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x06D5, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_D_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x06D6, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH2_OUT_D_DRIVER_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x06DA, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_D_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x06DB, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_D_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06DD, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH2_OUT_D_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06E1, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH2_OUT_D_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06E1, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH2_OUT_D_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06E2, ZL303XX_MEM_SIZE_4_BYTE)

#define ZLS3075X_SYNTH3_VCO_FREQ_BASE_REG           ZL303XX_MAKE_MEM_ADDR_75X(0x0685, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH3_VCO_FREQ_MULT_REG           ZL303XX_MAKE_MEM_ADDR_75X(0x0687, ZL303XX_MEM_SIZE_3_BYTE)
#define ZLS3075X_SYNTH3_VCO_FREQ_M_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x068A, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH3_VCO_FREQ_N_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x068C, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SYNTH3_CONFIG_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x0693, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH3_OUT_A_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x0699, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH3_OUT_A_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x0699, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH3_OUT_A_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x069A, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH3_OUT_A_DRIVER_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x069E, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH3_OUT_A_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x069F, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH3_OUT_A_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06A1, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH3_OUT_A_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06A5, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH3_OUT_A_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06A5, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH3_OUT_A_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06A6, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH3_OUT_B_DIV_REG               ZL303XX_MAKE_MEM_ADDR_75X(0x06AD, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH3_OUT_B_DIV_REG_HI            ZL303XX_MAKE_MEM_ADDR_75X(0x06AD, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH3_OUT_B_DIV_REG_LO            ZL303XX_MAKE_MEM_ADDR_75X(0x06AE, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH3_OUT_B_DRIVER_REG            ZL303XX_MAKE_MEM_ADDR_75X(0x06B2, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH3_OUT_B_CTRL_REG              ZL303XX_MAKE_MEM_ADDR_75X(0x06B3, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH3_OUT_B_WIDTH_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06B5, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_SYNTH3_OUT_B_SHIFT_REG             ZL303XX_MAKE_MEM_ADDR_75X(0x06B9, ZL303XX_MEM_SIZE_5_BYTE)
#define ZLS3075X_SYNTH3_OUT_B_SHIFT_REG_HI          ZL303XX_MAKE_MEM_ADDR_75X(0x06B9, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_SYNTH3_OUT_B_SHIFT_REG_LO          ZL303XX_MAKE_MEM_ADDR_75X(0x06BA, ZL303XX_MEM_SIZE_4_BYTE)

#define ZLS3075X_SPARE_CTRL_REG                     ZL303XX_MAKE_MEM_ADDR_75X(0x0702, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_SPARE_SEMAPHORE_REG                ZL303XX_MAKE_MEM_ADDR_75X(0x0704, ZL303XX_MEM_SIZE_1_BYTE)


/*****************   REFGISTER FIELD DEFINES   ******************************/

#define ZLS3075X_CHECK_DPLLID(dpllId) \
            (((dpllId) >= ZLS3075X_DPLL_MAX) \
                ? (ZL303XX_ERROR_NOTIFY("Invalid dpllId: "#dpllId), ZL303XX_PARAMETER_INVALID) \
                : ZL303XX_OK)

#define ZLS3075X_CHECK_REF_ID(refId) \
            (((refId) >= ZLS3075X_REF_MAX) \
                ? ZL303XX_TRACE_ERROR("Invalid refId: %u", refId, 0,0,0,0,0), ZL303XX_PARAMETER_INVALID \
                : ZL303XX_OK)

#define ZLS3075X_CHECK_SYNTH_ID(synthId) \
            (((synthId) >= ZLS3075X_NUM_SYNTHS) \
                ? ZL303XX_TRACE_ERROR("Invalid synthId=%u", synthId, 0,0,0,0,0), ZL303XX_PARAMETER_INVALID \
                : ZL303XX_OK)


/* Sticky lock register options */
typedef enum
{
   ZLS3075X_STICKY_UNLOCK   = 0,
   ZLS3075X_STICKY_LOCK     = 1
} ZLS3075X_StickyLockE;

#define ZLS3075X_CHECK_STICKY_LOCK(s) \
            (((ZLS3075X_StickyLockE)(s) > ZLS3075X_STICKY_LOCK) \
                ? ZL303XX_PARAMETER_INVALID \
                : ZL303XX_OK)


/* Reference monitor fail bits */
typedef enum
{
   ZLS3075X_REF_MON_FAIL_LOS        = 0x01,
   ZLS3075X_REF_MON_FAIL_SCM        = 0x02,
   ZLS3075X_REF_MON_FAIL_CFM        = 0x04,
   ZLS3075X_REF_MON_FAIL_GST        = 0x08,
   ZLS3075X_REF_MON_FAIL_PFM        = 0x10,
   ZLS3075X_REF_MON_FAIL_CII        = 0x20,
   ZLS3075X_REF_MON_FAIL_TCXO       = 0x80,

   ZLS3075X_REF_MON_FAIL_MASK       = 0xBF
} ZLS3075X_RefMonFailE;


/* Dpll reference selection and mode register options */
typedef enum
{
   ZLS3075X_DPLL_MODE_FREERUN       = 0x0,
   ZLS3075X_DPLL_MODE_HOLDOVER      = 0x1,
   ZLS3075X_DPLL_MODE_REFLOCK       = 0x2,
   ZLS3075X_DPLL_MODE_AUTO_LOCK     = 0x3,
   ZLS3075X_DPLL_MODE_NCO           = 0x4,
   ZLS3075X_DPLL_MODE_BUFFER_FILL   = 0x5,

   ZLS3075X_DPLL_MODE_MASK          = 0x07,
   ZLS3075X_DPLL_REFMODE_MASK       = 0xF7
} ZLS3075X_DpllHWModeE;

#define ZLS3075X_CHECK_DPLL_MODE(mode) \
            (((mode) > ZLS3075X_DPLL_MODE_NCO) \
                ? ZL303XX_PARAMETER_INVALID \
                : ZL303XX_OK)


/* Dpll holdover lock status register options */
typedef enum
{
   ZLS3075X_HOLDOVER_STATUS_DPLL0           = 0x01,
   ZLS3075X_HOLDOVER_STATUS_DPLL1           = 0x04,
   ZLS3075X_HOLDOVER_STATUS_DPLL2           = 0x10,
   ZLS3075X_HOLDOVER_STATUS_DPLL3           = 0x40,

   ZLS3075X_LOCK_STATUS_DPLL0               = 0x02,
   ZLS3075X_LOCK_STATUS_DPLL1               = 0x08,
   ZLS3075X_LOCK_STATUS_DPLL2               = 0x20,
   ZLS3075X_LOCK_STATUS_DPLL3               = 0x80,

   ZLS3075X_HOLDOVER_LOCK_STATUS_MASK_DPLL0 = 0x03,
   ZLS3075X_HOLDOVER_LOCK_STATUS_MASK_DPLL1 = 0x0C,
   ZLS3075X_HOLDOVER_LOCK_STATUS_MASK_DPLL2 = 0x30,
   ZLS3075X_HOLDOVER_LOCK_STATUS_MASK_DPLL3 = 0xC0
} ZLS3075X_DpllHoldoverLockStatusE;


/* Output dividers */
typedef enum
{
   ZLS3075X_POST_DIV_A = 0,
   ZLS3075X_POST_DIV_B,
   ZLS3075X_POST_DIV_C,
   ZLS3075X_POST_DIV_D
} ZLS3075X_PostDivE;

#define ZLS3075X_POST_DIV_MASK  ((1 << ZLS3075X_NUM_POST_DIVS) - 1)

#define ZLS3075X_CHECK_POST_DIV(div) \
           (((div) > ZLS3075X_POST_DIV_D) ? ZL303XX_PARAMETER_INVALID : ZL303XX_OK)


/* Mailbox defines */
#define ZL303XX_MB_SEM_WRITE  (1)
#define ZL303XX_MB_SEM_READ   (2)

typedef enum {
    ZLS3075X_SemStatus_busy,
    ZLS3075X_SemStatus_available
} ZLS3075X_SemStatusE;

typedef enum {
    ZLS3075X_MB_ref,
    ZLS3075X_MB_DPLL,
    ZLS3075X_MB_synth,
    ZLS3075X_MB_spare,
    ZLS3075X_MB_last
} ZLS3075X_MailboxE;

typedef enum {
    ZLS3075X_RMBN_0 = 0,
    ZLS3075X_RMBN_1 = 1,
    ZLS3075X_RMBN_2 = 2,
    ZLS3075X_RMBN_3 = 3,
    ZLS3075X_RMBN_4 = 4,
    ZLS3075X_RMBN_5 = 5,
    ZLS3075X_RMBN_6 = 6,
    ZLS3075X_RMBN_7 = 7,
    ZLS3075X_RMBN_8 = 8,
    ZLS3075X_RMBN_9 = 9,
    ZLS3075X_RMBN_last
} ZLS3075X_RefMailboxNumberE;

typedef enum {
    ZLS3075X_DMBN_0 = 0,
    ZLS3075X_DMBN_1 = 1,
    ZLS3075X_DMBN_2 = 2,
    ZLS3075X_DMBN_3 = 3,
    ZLS3075X_DMBN_4 = 4,
    ZLS3075X_DMBN_5 = 5,
    ZLS3075X_DMBN_6 = 6,
    ZLS3075X_DMBN_last
} ZLS3075X_DPLLMailboxNumberE;

typedef enum {
    ZLS3075X_SMBN_0 = 0,
    ZLS3075X_SMBN_1 = 1,
    ZLS3075X_SMBN_2 = 2,
    ZLS3075X_SMBN_3 = 3,
    ZLS3075X_SMBN_last
} ZLS3075X_SynthMailboxNumberE;

#define ZLS3075X_CHECK_MAILBOX_ID(mbId) \
           (((mbId) >= ZLS3075X_MB_last) \
               ? ZL303XX_TRACE_ERROR("Invalid mailbox id: %u", mbId, 0,0,0,0,0), ZL303XX_PARAMETER_INVALID \
               : ZL303XX_OK)


/* ref_sync register field */
typedef enum {
    ZLS3075X_RSPM_disabled                     = 0,
    ZLS3075X_RSPM_enabled                      = 1,
    ZLS3075X_RSPM_50_50_clk_25_75_PPS_sync     = 2,
    ZLS3075X_RSPM_50_50_clk_75_25_PPS_sync     = 3,
    ZLS3075X_RSPM_25_75_clk_75_25_PPS_sync     = 4,
    ZLS3075X_RSPM_75_25_clk_25_75_PPS_sync     = 5,
    ZLS3075X_RSPM_50_50_clk_25_75_PPS2_sync    = 6,
    ZLS3075X_RSPM_50_50_clk_75_25_PPS2_sync    = 7,
    ZLS3075X_RSPM_25_75_clk_75_35_PPS2_sync    = 8,
    ZLS3075X_RSPM_75_25_clk_25_75_PPS2_sync    = 9,
    ZLS3075X_RSPM_last
} ZLS3075X_RefSynchPairModeE;


/* pll bandwidth */
typedef enum {
    ZLS3075X_BW_14Hz     = 0,
    ZLS3075X_BW_28Hz     = 1,
    ZLS3075X_BW_56Hz     = 2,
    ZLS3075X_BW_112Hz    = 3,
    ZLS3075X_BW_244Hz    = 4,
    ZLS3075X_BW_488Hz_1  = 5,
    ZLS3075X_BW_488Hz_2  = 6,
    ZLS3075X_BW_custom   = 7
} ZLS3075X_BandwidthE;

#define ZL303XX_DPLL_75X_BANDWIDTH_MASK                   (0x7)

#define ZLS3075X_CHECK_BANDWIDTH(bw) \
           (((bw) > ZLS3075X_BW_custom) ? ZL303XX_PARAMETER_INVALID : ZL303XX_OK)


/* Synth output mode */
typedef enum {
    ZLS3075X_SOCM_RegularClock     = 0,
    ZLS3075X_SOCM_PPS_25_75_PWM    = 1,
    ZLS3075X_SOCM_PPS_75_25_PWM    = 2,
    ZLS3075X_SOCM_PP2s_25_75_PWM   = 3,
    ZLS3075X_SOCM_PP2S_75_25_PWM   = 4
} ZLS3075X_SynthOutCtrlModeE;

#define ZL303XX_SYNTH_OUTPUT_CTRL_MODE_MASK               (0x7)


/* Phase step control bitfield options */
typedef enum
{
   ZLS3075X_PHASE_STEP_CTRL_READY = 0x00,
   ZLS3075X_PHASE_STEP_CTRL_RESET = 0x01,
   ZLS3075X_PHASE_STEP_CTRL_READ  = 0x02,
   ZLS3075X_PHASE_STEP_CTRL_WRITE = 0x03,

   ZLS3075X_PHASE_STEP_CTRL_MASK  = 0x03
} ZLS3075X_PhaseStepCtrlE;


/* time-of-day (ToD) */
typedef enum {
    ZLS3075X_TRT_currentToD    = 0x8,
    ZLS3075X_TRT_predictedToD  = 0x9
} ZLS3075X_TODReadTypeE;

typedef enum {
    ZLS3075X_TWT_writeOnInternal1Hz    = 0x1,
    ZLS3075X_TWT_writeOnNextInputSync  = 0x2,
    ZLS3075X_TWT_writeImmediate        = 0x7
} ZLS3075X_ToDWriteTypeE;


/* Interval between checks of the mailbox semaphore waiting for it to be available */
#define ZLS3075X_MAILBOX_SEMAPHORE_CHECK_INTERVAL          (1)
/* Max time to wait for a mailbox semaphore in milliseconds */
#define ZLS3075X_MAX_MAILBOX_SEMAPHORE_WAIT                (50)

/* DPLL refsel registers */
#define ZLS3075X_DPLL_MODE_REFSEL_REG(dpllId)           ZL303XX_MAKE_MEM_ADDR_75X((0x021E + ((dpllId) * 0x3)), ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_REFSEL_FORCE_GET(data)            (((data) & 0xF0) >> 4)
#define ZLS3075X_DPLL_REFSEL_STAT_REG(dpllId)           ZL303XX_MAKE_MEM_ADDR_75X((0x0126 + ((dpllId)/2)), ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_REFSEL_AUTO_GET(dpllId, data)     ((((pllId) & 1)==1) ? ((data) >> 4) : ((data) & 0xf) )
#define ZLS3075X_DPLL_REF_SEL_MASK                      (0xF)
#define ZLS3075X_REF_SEL_OFFSET_SHIFT                   (4)

/* Dpll freq offset register when in NCO mode (5 bytes, high order byte) */
#define ZLS3075X_NCO_FREQ_OFFSET_WR_HI_DPLL(dpllId)     ZL303XX_MAKE_MEM_ADDR_75X((0x0300 + ((dpllId) * 0x10)), ZL303XX_MEM_SIZE_1_BYTE)
/* Dpll freq offset register when in NCO mode (5 bytes, low order bytes) */
#define ZLS3075X_NCO_FREQ_OFFSET_WR_LO_DPLL(dpllId)     ZL303XX_MAKE_MEM_ADDR_75X((0x0301 + ((dpllId) * 0x10)), ZL303XX_MEM_SIZE_4_BYTE)

/* Dpll delta frequency read request registers */
#define ZLS3075X_DPLL_DF_CTRL(dpllId)                   ZL303XX_MAKE_MEM_ADDR_75X(0x305 + ((dpllId) * 0x10), ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_DF_CTRL_SEM_GET(data)             (((data) & 0x10) >> 4)
#define ZLS3075X_DPLL_DF_CTRL_SEM_SET                   (1 << 4)
#define ZLS3075X_DPLL_DF_CTRL_CMD_SET(data)             ((data) & 0x7)

/* Dpll holdover lock status registers */
#define ZLS3075X_HOLDOVER_LOCK_STATUS_REG(dpllId)        ZL303XX_MAKE_MEM_ADDR_75X(0x0196 + ((dpllId) * 0x1), ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_HOLDOVER_LOCK_STATUS_MASK_DPLL         (0x3)
#define ZLS3075X_LOSS_OF_LOCK_STATUS_DPLL_GET(data)     ((data) & 0x1)
#define ZLS3075X_HOLDOVER_STATUS_DPLL_GET(data)         (((data) & 0x2) >> 1)

/* Reference monitor failure registers */
#define ZLS3075X_REF_MON_FAIL_REG(refId)                ZL303XX_MAKE_MEM_ADDR_75X(0x0186 + (refId * 0x1), ZL303XX_MEM_SIZE_1_BYTE)

/* Reference clock-sync pair registers */
#define ZLS3075X_REF_CLK_SYNC_PAIR_REG                  ZL303XX_MAKE_MEM_ADDR_75X(0x59b, ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_REF_CLK_SYNC_PAIR_GET(data)            (((data) >> 4) & 0x0F)
#define ZLS3075X_REF_CLK_SYNC_MODE_GET(data)            ((data) & 0x0F)
#define ZLS3075X_REF_CLK_SYNC_MODE_MASK                 (0x0F)

/* Ref Freq */
#define ZLS3075X_REF_PRE_DIVIDE(data)                   (((data) & 0x10) >> 4)

/* DPLL reference priority registers */
#define ZLS3075X_DPLL_REF_PRIORITY_REG(refId)           ZL303XX_MAKE_MEM_ADDR_75X((0x0615 + (refId / 2)), ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_REF_PRIORITY_GET_UPPER(data)      (((data) >> 4) & 0x0F)
#define ZLS3075X_DPLL_REF_PRIORITY_GET_LOWER(data)      ((data) & 0x0F)
#define ZLS3075X_DPLL_REF_PRIORITY_GET(data, refId)     (((refId) % 2 == 0) ? ZLS3075X_DPLL_REF_PRIORITY_GET_LOWER(data) : \
                                                                            ZLS3075X_DPLL_REF_PRIORITY_GET_UPPER(data))
#define ZLS3075X_DPLL_REF_PRIORITY_NEVER_LOCK           (0xF)

/* DPLL config registers */
#define ZLS3075X_DPLL_BANDWIDTH(data)                   (data & 7)

/* Dpll control registers (non-mailbox) */
#define ZLS3075X_DPLL_TIE_CLEAR_REG(dpllId)             ZL303XX_MAKE_MEM_ADDR_75X(0x021f + ((dpllId) * 3), ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_TIE_CLEAR_EN_SHIFT                1
#define ZLS3075X_DPLL_TIE_CLEAR_EN_MASK                 0x01
#define ZLS3075X_DPLL_TIE_CLEAR_EN(data)                (((data) >> ZLS3075X_DPLL_TIE_CLEAR_EN_SHIFT) & ZLS3075X_DPLL_TIE_CLEAR_EN_MASK)
#define ZLS3075X_DPLL_NCO_AUTO_READ_REG(dpllId)         ZL303XX_MAKE_MEM_ADDR_75X(0x021f + ((dpllId) * 3), ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_NCO_AUTO_READ_SHIFT               4
#define ZLS3075X_DPLL_NCO_AUTO_READ_MASK                0x01

/* Pull-in range in ppm */
#define ZLS3075X_DPLL_PULL_IN_GET(dpllId)               ((data))

#define ZLS3075X_DPLL_EDGE_SEL(data)                    (((data) >> 6) & 0x03)

/* gst, scm, and cfm registers */
#define ZLS3075X_GST_DISQUALIF_TIME_GET(data)           (((data) >> 4) & 0x03)
#define ZLS3075X_GST_QUALIF_TIME_GET(data)              (((data) >> 0) & 0x03)
#define ZLS3075X_SCM_LIMIT_GET(data)                    (((data) >> 0) & 0x07)
#define ZLS3075X_CFM_LIMIT_GET(data)                    (((data) >> 0) & 0x07)

/* Reference config registers */
#define ZLS3075X_DIFF_EN_GET(data)                      (((data) >> 2) & 0x01)

#define ZLS3075X_SYNTH_CONFIG_DPLL_GET(data)            (((data) >> 4) & 0x07)
#define ZLS3075X_SYNTH_CONFIG_DPLL_EN_MASK              (0x1)

#define ZLS3075X_PHASE_STEP_CTRL_TOD_STEP               (1 << 3)

/* Dpll TIE control registers */
#define ZLS3075X_DPLL_TIE_CTRL_REG(dpllId)              ZL303XX_MAKE_MEM_ADDR_75X(0x030A + ((dpllId) * 0x10), ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_TIE_DATA_REG(dpllId)              ZL303XX_MAKE_MEM_ADDR_75X(0x0306 + ((dpllId) * 0x10), ZL303XX_MEM_SIZE_4_BYTE)

/* Output configuration */
#define ZLS3075X_NUM_OUTPUT_CONFIGS                        (ZLS3075X_NUM_SYNTHS * ZLS3075X_NUM_POST_DIVS)

/* Fast lock control */
#define ZLS3075X_FAST_LOCK_NCO_ENABLE_MASK              (0x4)
#define ZLS3075X_FAST_LOCK_FORCE_ENABLE_MASK            (0x2)
#define ZLS3075X_FAST_LOCK_MASTER_ENABLE_MASK           (0x1)
#define ZLS3075X_FAST_LOCK_MASK                         (0x7)
#define ZLS3075X_FAST_LOCK_NCO_ENABLE_SHIFT             (0x2)
#define ZLS3075X_FAST_LOCK_FORCE_ENABLE_SHIFT           (0x1)
#define ZLS3075X_FAST_LOCK_MASTER_ENABLE_SHIFT          (0x0)

/* ToD */
#define ZLS3075X_DPLL_TOD_CTRL_REG(dpllId)              ZL303XX_MAKE_MEM_ADDR_75X(0x0400 + ((dpllId) * 0xb), ZL303XX_MEM_SIZE_1_BYTE)
#define ZLS3075X_DPLL_TOD_SEC_HI_REG(dpllId)            ZL303XX_MAKE_MEM_ADDR_75X(0x0401 + ((dpllId) * 0xb), ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_DPLL_TOD_SEC_LO_REG(dpllId)            ZL303XX_MAKE_MEM_ADDR_75X(0x0403 + ((dpllId) * 0xb), ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_DPLL_TOD_NS_REG(dpllId)                ZL303XX_MAKE_MEM_ADDR_75X(0x0407 + ((dpllId) * 0xb), ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_DPLL_TOD_CMD_MASK                      (0xf)
#define ZLS3075X_DPLL_TOD_CMD_DONE                      (0)

/* Device id registers */
#define ZLS3075X_DEVICE_ID_REG                          ZL303XX_MAKE_MEM_ADDR_75X(0x01, ZL303XX_MEM_SIZE_2_BYTE)
#define ZLS3075X_DEVICE_REV_REG                         ZL303XX_MAKE_MEM_ADDR_75X(0x03, ZL303XX_MEM_SIZE_1_BYTE)

#define ZLS3075X_PHASE_STEP_TIME_REG(dpllId)   ZL303XX_MAKE_MEM_ADDR_75X(0x540 + (dpllId) * 4, ZL303XX_MEM_SIZE_4_BYTE)
#define ZLS3075X_INPUT_PHASE_STEP_REG(dpllId)   ZL303XX_MAKE_MEM_ADDR_75X(0x550 + (dpllId) * 4, ZL303XX_MEM_SIZE_4_BYTE)

#ifdef __cplusplus
}
#endif

#endif /* MULTIPLE INCLUDE BARRIER */

