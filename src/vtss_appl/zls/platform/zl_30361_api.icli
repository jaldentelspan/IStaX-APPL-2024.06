# Copyright (c) 2006-2022 Microsemi Corporation "Microsemi". All Rights Reserved.
#
# Unpublished rights reserved under the copyright laws of the United States of
# America, other countries and international treaties. Permission to use, copy,
# store and modify, the software and its source code is granted but only in
# connection with products utilizing the Microsemi switch and PHY products.
# Permission is also granted for you to integrate into other products, disclose,
# transmit and distribute the software only in an absolute machine readable
# format (e.g. HEX file) and only in or with products utilizing the Microsemi
# switch and PHY products.  The source code of the software may not be
# disclosed, transmitted or distributed without the prior written permission of
# Microsemi.
#
# This copyright notice must appear in any copy, modification, disclosure,
# transmission or distribution of the software.  Microsemi retains all
# ownership, copyright, trade secret and proprietary rights in the software and
# its source code, including all modifications thereto.
#
# THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
# WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
# ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
# NON-INFRINGEMENT.

MODULE_IF_FLAG =

INCLUDE_BEGIN
#include "zl_30361_api_icli_functions.h"
#include "icli_porting_util.h"
INCLUDE_END

ICLI_HELP_ZL_30361_API = Microsemi ZL3036x DPLL debug functions

FUNCTION_BEGIN
FUNCTION_END

EXPORT_BEGIN
EXPORT_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS30361)

COMMAND = debug zl3036x read <0-5> <0-127> <1-128>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3036x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_30361_API
BYWORD  =

! read
CMD_VAR =
RUNTIME =
HELP    = Read DPLL register
BYWORD  =

! <uint>
CMD_VAR = v_uint
RUNTIME =
HELP    = Register memory page
BYWORD  =

! <uint>
CMD_VAR = v_uint_1
RUNTIME =
HELP    = Register memory address
BYWORD  =

! <0-127>
CMD_VAR = v_uint_2
RUNTIME =
HELP    = Register memory size
BYWORD  =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3036x_api_icli_debug_read(session_id, v_uint, v_uint_1, v_uint_2));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS30361)

COMMAND = debug zl3036x write <0-5> <0-127> <0-255>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3036x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_30361_API
BYWORD  =

! write
CMD_VAR =
RUNTIME =
HELP    = Write DPLL register
BYWORD  =

! <uint>
CMD_VAR = v_uint
RUNTIME =
HELP    = Register memory page
BYWORD  =

! <uint>
CMD_VAR = v_uint_1
RUNTIME =
HELP    = Register memory address
BYWORD  =

! <uint>
CMD_VAR = v_uint_2
RUNTIME =
HELP    = Register value
BYWORD  =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3036x_api_icli_debug_write(session_id, v_uint, v_uint_1, v_uint_2));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS30361)

COMMAND = debug zl3036x pll status

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3036x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_30361_API
BYWORD  =

! pll
CMD_VAR =
RUNTIME =
HELP    = Show the PLL status
BYWORD  =

! status
CMD_VAR =
RUNTIME =
HELP    = Show the PLL status
BYWORD  =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3036x_api_icli_debug_pll_status(session_id));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS30361)

COMMAND = debug zl3036x ref status <0-8>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3036x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_30361_API
BYWORD  =

! ref
CMD_VAR =
RUNTIME =
HELP    = The hardware reference input
BYWORD  =

! status
CMD_VAR =
RUNTIME =
HELP    = The hardware reference status information
BYWORD  =

! <0-8>
CMD_VAR = refid
RUNTIME =
HELP    = sync reference input
BYWORD  = <Refid : 0-8>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3036x_api_icli_debug_ref_status(session_id, refid));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS30361)

COMMAND = debug zl3036x ref cfg <0-8>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3036x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_30361_API
BYWORD  =

! ref
CMD_VAR =
RUNTIME =
HELP    = The hardware reference input
BYWORD  =

! cfg
CMD_VAR =
RUNTIME =
HELP    = The hardware reference configuration information
BYWORD  =

! <0-8>
CMD_VAR = refid
RUNTIME =
HELP    = sync reference input
BYWORD  = <Refid : 0-8>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3036x_api_icli_debug_ref_cfg(session_id, refid));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS30361)

COMMAND = debug zl3036x dpll status <1-2>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3036x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_30361_API
BYWORD  =

! dpll
CMD_VAR =
RUNTIME =
HELP    = DPLL
BYWORD  =

! status
CMD_VAR =
RUNTIME =
HELP    = The DPLL status information
BYWORD  =

! <1-2>
CMD_VAR = pllid
RUNTIME =
HELP    = DPLL number. 1: DPLL1 used for SyncE Clock, 2: DPLL2 used for Station clock output or PTP clock
BYWORD  = <Pllid : 1-2>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3036x_api_icli_debug_dpll_status(session_id, pllid));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS30361)

COMMAND = debug zl3036x dpll cfg <1-2>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3036x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_30361_API
BYWORD  =

! dpll
CMD_VAR =
RUNTIME =
HELP    = DPLL
BYWORD  =

! cfg
CMD_VAR =
RUNTIME =
HELP    = The DPLL configuration information
BYWORD  =

! <1-2>
CMD_VAR = pllid
RUNTIME =
HELP    = DPLL number. 1: DPLL1 used for SyncE Clock, 2: DPLL2 used for Station clock output or PTP clock
BYWORD  = <Pllid : 1-2>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3036x_api_icli_debug_dpll_cfg(session_id, pllid));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS30361)

COMMAND = debug zl3036x trace module <0-37> <0-5>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3036x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_30361_API
BYWORD  =

! trace
CMD_VAR =
RUNTIME =
HELP    = 
BYWORD  =

! module
CMD_VAR = 
RUNTIME =
HELP    =
BYWORD  =

! <0-35>
CMD_VAR = v_uint_1
RUNTIME =
HELP    = Module number
BYWORD  =

! <0-5>
CMD_VAR = v_uint_2
RUNTIME =
HELP    = Trace level
BYWORD  =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3036x_api_icli_debug_trace_level_module_set(session_id,  v_uint_1, v_uint_2));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS30361)

COMMAND = debug zl3036x trace all <0-5>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3036x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_30361_API
BYWORD  =

! trace
CMD_VAR =
RUNTIME =
HELP    = 
BYWORD  =

! all
CMD_VAR = 
RUNTIME =
HELP    =
BYWORD  =

! <0-5>
CMD_VAR = v_uint_1
RUNTIME =
HELP    = Trace level
BYWORD  =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3036x_api_icli_debug_trace_level_all_set(session_id, v_uint_1));
CODE_END

CMD_END
!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS30361)

COMMAND = debug zl3036x ncofreq

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3036x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_30361_API
BYWORD  =

! dcofreq
CMD_VAR =
RUNTIME =
HELP    = read actual NCO frequency offset from DPLL
BYWORD  =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3036x_api_icli_debug_nco_freq_read(session_id));
CODE_END

CMD_END

