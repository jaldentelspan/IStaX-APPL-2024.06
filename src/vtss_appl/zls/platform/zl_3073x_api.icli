# Copyright (c) 2006-2024 Microsemi Corporation "Microsemi". All Rights Reserved.
#
# Unpublished rights reserved under the copyright laws of the United States of
# America, other countries and international treaties. Permission to use, copy,
# store and modify, the software and its source code is granted but only in
# connection with products utilizing the Microsemi switch and PHY products.
# Permission is also granted for you to integrate into other products, disclose,
# transmit and distribute the software only in an absolute machine readable
# format (e.g. HEX file) and only in or with products utilizing the Microsemi
# switch and PHY products.  The source code of the software may not be
# disclosed, transmitted or distributed without the prior written permission of
# Microsemi.
#
# This copyright notice must appear in any copy, modification, disclosure,
# transmission or distribution of the software.  Microsemi retains all
# ownership, copyright, trade secret and proprietary rights in the software and
# its source code, including all modifications thereto.
#
# THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
# WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
# ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
# NON-INFRINGEMENT.

MODULE_IF_FLAG = defined(VTSS_SW_OPTION_ZLS3073X)

INCLUDE_BEGIN
#include "zl_3073x_api_icli_functions.h"
#include "icli_porting_util.h"
INCLUDE_END

ICLI_HELP_ZL_3073X_API = Microsemi ZL3073x DPLL debug functions

FUNCTION_BEGIN
FUNCTION_END

EXPORT_BEGIN
EXPORT_END

!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug zl3073x-spi write page <0-14> addr <0-0xFFFF> val <0-255>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: zl3073x-spi
! 3: write
! 4: page
! 5: <0-14>
! 6: addr
! 7: <0-0xFFFF>
! 8: val
! 9: <0-255>

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = v_0_to_14
CMD_VAR =
CMD_VAR = v_0_0xFFFF
CMD_VAR =
CMD_VAR = v_0_to_255

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =

HELP =
HELP = Microsemi ZL3073X SPI access functions
HELP =
HELP =
HELP =
HELP =
HELP =
HELP =
HELP =

BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    ICLI_RC(zl_3073x_icli_spi_write(session_id, v_0_to_14, v_0_0xFFFF, v_0_to_255));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS3073X)

COMMAND = debug zl3073x-spi read [ page <0-14> ] addr <0-0xFFFF> [ cnt <1-128> ]

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: zl3073x-spi
! 3: read
! 4: page
! 5: <0-14>
! 6: addr
! 7: <0-0xFFFF>
! 8: cnt
! 9: <0-128>

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = has_page
CMD_VAR = v_0_to_14
CMD_VAR =
CMD_VAR = v_0_0xFFFF
CMD_VAR = has_cnt
CMD_VAR = v_0_to_128

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =

HELP =
HELP = Microsemi ZL3073X SPI access functions
HELP =
HELP =
HELP =
HELP =
HELP =
HELP =
HELP =

BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    if (!has_page) {
        v_0_to_14 = v_0_0xFFFF >> 7;
    }
    if (!has_cnt) {
        v_0_to_128 = 1;
    }
    ICLI_RC(zl_3073x_icli_spi_read(session_id, v_0_to_14, v_0_0xFFFF, v_0_to_128));
CODE_END

CMD_END
!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS3073X)

COMMAND = debug zl3073x read <0-14> <0-127> <1-128>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3073x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_3073X_API
BYWORD  =

! read
CMD_VAR =
RUNTIME =
HELP    = Read DPLL register
BYWORD  =

! <uint>
CMD_VAR = v_uint
RUNTIME =
HELP    = Register memory page
BYWORD  =

! <uint>
CMD_VAR = v_uint_1
RUNTIME =
HELP    = Register memory address
BYWORD  =

! <0-127>
CMD_VAR = v_uint_2
RUNTIME =
HELP    = Register memory size
BYWORD  =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3073x_api_icli_debug_read(session_id, v_uint, v_uint_1, v_uint_2));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS3073X)

COMMAND = debug zl3073x write <0-14> <0-127> <0-255>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3073x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_3073X_API
BYWORD  =

! write
CMD_VAR =
RUNTIME =
HELP    = Write DPLL register
BYWORD  =

! <uint>
CMD_VAR = v_uint
RUNTIME =
HELP    = Register memory page
BYWORD  =

! <uint>
CMD_VAR = v_uint_1
RUNTIME =
HELP    = Register memory address
BYWORD  =

! <uint>
CMD_VAR = v_uint_2
RUNTIME =
HELP    = Register value
BYWORD  =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3073x_api_icli_debug_write(session_id, v_uint, v_uint_1, v_uint_2));
CODE_END

CMD_END


!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS3073X)

COMMAND = debug zl3073x ref cfg <0-9>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3073x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_3073X_API
BYWORD  =

! ref
CMD_VAR =
RUNTIME =
HELP    = The hardware reference input
BYWORD  =

! cfg
CMD_VAR =
RUNTIME =
HELP    = The hardware reference configuration information
BYWORD  =

! <0-9>
CMD_VAR = refid
RUNTIME =
HELP    = sync reference input
BYWORD  = <Refid : 0-9>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3073x_api_icli_debug_ref_cfg(session_id, refid));
CODE_END

CMD_END
!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS3073X)

COMMAND = debug zl3073x dpll cfg <1-6>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3073x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_3073X_API
BYWORD  =

! dpll
CMD_VAR =
RUNTIME =
HELP    = DPLL
BYWORD  =

! cfg
CMD_VAR =
RUNTIME =
HELP    = The DPLL configuration information
BYWORD  =

! <1-6>
CMD_VAR = pllid
RUNTIME =
HELP    = DPLL number. 1: DPLL1 used for SyncE Clock, 2: DPLL2 used for Station clock output or PTP clock
BYWORD  = <Pllid : 1-6>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3073x_api_icli_debug_dpll_cfg(session_id, pllid));
CODE_END

CMD_END
!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS3073X)

COMMAND = debug zl3073x ref status <0-9>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3073x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_3073X_API
BYWORD  =

! ref
CMD_VAR =
RUNTIME =
HELP    = The hardware reference input
BYWORD  =

! status
CMD_VAR =
RUNTIME =
HELP    = The hardware reference status information
BYWORD  =

! <0-9>
CMD_VAR = refid
RUNTIME =
HELP    = sync reference input
BYWORD  = <Refid : 0-9>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3073x_api_icli_debug_ref_status(session_id, refid));
CODE_END

CMD_END
!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS3073X)

COMMAND = debug zl3073x dpll status <1-6>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3073x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_3073X_API
BYWORD  =

! dpll
CMD_VAR =
RUNTIME =
HELP    = DPLL
BYWORD  =

! status
CMD_VAR =
RUNTIME =
HELP    = The DPLL status information
BYWORD  =

! <1-4>
CMD_VAR = pllid
RUNTIME =
HELP    = DPLL number. 1: DPLL1 used for Synce Clock, 2: DPLL2 used for PTP clock
BYWORD  = <Pllid : 1-6>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3073x_api_icli_debug_dpll_status(session_id, pllid));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS3073X)

COMMAND = debug zl3073x pll status

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! debug
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_DEBUG
BYWORD  =

! zl3073x
CMD_VAR =
RUNTIME =
HELP    = ##ICLI_HELP_ZL_3073X_API
BYWORD  =

! pll
CMD_VAR =
RUNTIME =
HELP    = Show the PLL status
BYWORD  =

! status
CMD_VAR =
RUNTIME =
HELP    = Show the PLL status
BYWORD  =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3073x_api_icli_debug_pll_status(session_id));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = defined(VTSS_SW_OPTION_ZLS3073X)

COMMAND = debug zl3073x print-mailbox { [ { ref | output }  <0-9> ] | [ dpll <1-4> ] }

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: zl3073x
! 3: print-mailbox
! 4: ref
! 5: <0-9>
! 6: dpll
! 7: <1-4>

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = has_ref
CMD_VAR = has_output
CMD_VAR = v_0_to_9
CMD_VAR = has_dpll
CMD_VAR = v_1_to_4

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =

HELP =
HELP =
HELP =
HELP =
HELP =
HELP =
HELP =

BYWORD =
BYWORD =
BYWORD =
BYWORD = ref : Option
BYWORD = output : Option
BYWORD =
BYWORD = dpll : Option
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(zl_3073x_api_icli_print_mailbox_cfg(session_id, has_ref, has_output, has_dpll, (has_ref || has_output) ? v_0_to_9 : v_1_to_4));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug zl3073x trace module <0-37> <0-5>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: zl3073x
! 3: trace
! 4: module
! 5: <0-37>
! 6: <0-5>

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = v_0_to_37
CMD_VAR = v_0_to_5

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =

HELP =
HELP =
HELP =
HELP =
HELP =
HELP =

BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    ICLI_RC(zl_3073x_api_icli_debug_trace_level_module_set(session_id, v_0_to_37, v_0_to_5));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug zl3073x reg-dump

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: zl3073x
! 3: reg-dump

CMD_VAR =
CMD_VAR =
CMD_VAR =

RUNTIME =
RUNTIME =
RUNTIME =

HELP =
HELP =
HELP =

BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    (void)zl_3073x_icli_regdump(session_id);
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug zl3073x ref update <0-9> <1-125000>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: zl3073x
! 3: ref
! 4: update
! 5: <0-9>
! 6: <1-125000>

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = v_0_to_9
CMD_VAR = v_1_to_125000

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =

HELP =
HELP =
HELP =
HELP = Update reference input frequency information.
HELP = reference input to be configured.
HELP = frequency in Khz to be configured.

BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    (void)zl_3073x_icli_ref_freq_update(session_id, v_0_to_9, v_1_to_125000);
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug zl3073x pps-ref <0-15> { ena | dis }

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: zl3073x
! 3: pps-ref
! 4: <0-10>
! 5: ena
! 6: dis

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = v_0_to_10
CMD_VAR = has_ena
CMD_VAR = has_dis

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =

HELP =
HELP =
HELP =
HELP =
HELP =
HELP =

BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD = ena : Option
BYWORD = dis : Option

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    bool enable = has_ena ? true : (has_dis ? false : false);
    zl_3073x_icli_pps_ref_conf(session_id, v_0_to_10, enable);
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug zl3073x dpll force-lock <1,2,6> ref <0-10>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: zl3073x
! 3: dpll
! 4: force-lock
! 5: <1,2,6>
! 6: ref
! 7: <1-10>

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = v_1_2_4
CMD_VAR =
CMD_VAR = v_1_to_10

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =

HELP =
HELP =
HELP =
HELP = Force the dpll to lock to reference.
HELP = DPLL 1 is Synce dpll, 2 is PTP dpll, 6 is NCO assist dpll.
HELP = reference input.
HELP = reference used for locking.

BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    zl_3073x_icli_force_lock_ref(session_id, v_1_2_4, v_1_to_10, true);
CODE_END

NO_FORM_CODE_BEGIN
    zl_3073x_icli_force_lock_ref(session_id, v_1_2_4, v_1_to_10, false);
NO_FORM_CODE_END


CMD_END
