#
# Copyright (c) 2006-2024 Microsemi Corporation "Microsemi". All Rights Reserved.
#
# Unpublished rights reserved under the copyright laws of the United States of
# America, other countries and international treaties. Permission to use, copy,
# store and modify, the software and its source code is granted but only in
# connection with products utilizing the Microsemi switch and PHY products.
# Permission is also granted for you to integrate into other products, disclose,
# transmit and distribute the software only in an absolute machine readable
# format (e.g. HEX file) and only in or with products utilizing the Microsemi
# switch and PHY products.  The source code of the software may not be
# disclosed, transmitted or distributed without the prior written permission of
# Microsemi.
#
# This copyright notice must appear in any copy, modification, disclosure,
# transmission or distribution of the software.  Microsemi retains all
# ownership, copyright, trade secret and proprietary rights in the software and
# its source code, including all modifications thereto.
#
# THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
# WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
# ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
# NON-INFRINGEMENT.
#

MODULE_IF_FLAG = VTSS_SW_OPTION_POE

INCLUDE_BEGIN
#include "poe_icli_functions.h"
#include "icli_porting_util.h"
#include "poe_api.h"

INCLUDE_END

FUNCTION_BEGIN
FUNCTION_END

EXPORT_BEGIN
EXPORT_END

HELP_POE = Power Over Ethernet.
HELP_IPORT = Internal port keyword - If the board has multiple PoE controllers the internal port number must be given in order to access the PoE controller for the given port. If left out the internal port number 0 is used.
HELP_IPORT_NUM = Internal port number
!==============================================================================

CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = show poe [ interface <port_type_list> ]

DOC_CMD_DESC    = Use the show poe to show PoE status.
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   = Use to show PoE status for the switch.
DOC_CMD_EXAMPLE = show poe


PRIVILEGE = ICLI_PRIVILEGE_0
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: show
! 2: poe
! 3: interface
! 4: <port_type_list>

RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR = has_interface
CMD_VAR = v_port_type_list

HELP = Display PoE (Power Over Ethernet) status for the switch.
HELP = ##HELP_POE
HELP =
HELP =

BYWORD =
BYWORD =
BYWORD = <Interface : option>
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_show(session_id, has_interface, v_port_type_list);
CODE_END

CMD_END

! AT+BT ==============================================================================

CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = poe mode { standard | plus }

DOC_CMD_DESC    = Use poe mode to configure of PoE mode.
DOC_CMD_DEFAULT = PoE is disabled.
DOC_CMD_USAGE   = Use to configure PoE mode.
DOC_CMD_EXAMPLE = poe mode standard

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: poe
! 2: mode
! 3: standard
! 4: plus

RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR = has_standard
CMD_VAR = has_plus

HELP = ##HELP_POE
HELP = PoE mode (Ieee/Ieee plus lagacy PD devices).
HELP = Power only Ieee compliant PDs.
HELP = Power Ieee compliant and legacy PDs.

BYWORD =
BYWORD =
BYWORD = <standard : option>
BYWORD = <plus : option>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    return poe_icli_mode(session_id, has_standard, has_plus, plist, FALSE);
CODE_END

CMD_END

! AT+BT ==============================================================================

CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = no poe mode

DOC_CMD_DESC    = Use poe mode to configure of PoE mode.
DOC_CMD_DEFAULT = PoE is disabled.
DOC_CMD_USAGE   = Use to set PoE mode to default.
DOC_CMD_EXAMPLE = no poe mode

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: no
! 2: poe
! 3: mode

RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR =

HELP = no
HELP = ##HELP_POE
HELP = Set Interface PoE mode to default value.

BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_mode(session_id, FALSE, FALSE, plist, TRUE);
CODE_END

CMD_END


! AT+BT ==============================================================================

CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = poe priority { low | high | critical }

DOC_CMD_DESC    = Use poe priority to configure PoE priority.
DOC_CMD_DEFAULT = Priority is low.
DOC_CMD_USAGE   = Use to configure PoE priority.
DOC_CMD_EXAMPLE = poe priority high

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: poe
! 2: priority
! 3: low
! 4: high
! 5: critical
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR = has_low
CMD_VAR = has_high
CMD_VAR = has_critical

HELP = ##HELP_POE
HELP = Interface priority.
HELP = Set priority to low.
HELP = Set priority to high.
HELP = Set priority to critical.

BYWORD =
BYWORD =
BYWORD = <Low : option>
BYWORD = <High : option>
BYWORD = <Critical : option>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_priority(session_id, has_low, has_high, has_critical, plist, FALSE);
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = no poe priority

DOC_CMD_DESC    = Use poe priority to configure PoE priority.
DOC_CMD_DEFAULT = Priority is low.
DOC_CMD_USAGE   = Use to configure PoE priority.
DOC_CMD_EXAMPLE = poe priority high

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_LOOSELY

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: no
! 2: poe
! 3: priority

RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR =

HELP =
HELP = ##HELP_POE
HELP = Set Interface priority to default value.


BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_priority(session_id, FALSE, FALSE, FALSE, plist, TRUE);
CODE_END

CMD_END


! BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = poe power-management { dynamic | static | hybrid }

DOC_CMD_DESC    = Use poe power-management to configure PoE power-management.
DOC_CMD_DEFAULT = power-management is dynamic.
DOC_CMD_USAGE   = Use to configure PoE power-management.
DOC_CMD_EXAMPLE = poe power-management dynamic

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: poe
! 2: power-management
! 3: dynamic
! 4: static
! 5: hybrid
RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR = has_dynamic
CMD_VAR = has_static
CMD_VAR = has_hybrid

HELP = ##HELP_POE
HELP = power-management
HELP = Set power-management to dynamic
HELP = Set power-management to static
HELP = Set power-management to hybrid

BYWORD =
BYWORD =
BYWORD = <dynamic : option>
BYWORD = <static : option>
BYWORD = <hybrid : option>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_power_management(session_id, has_dynamic, has_static, has_hybrid, plist, FALSE);
CODE_END

CMD_END


! BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = no poe power-management

DOC_CMD_DESC    = Use poe power-management to configure PoE power-management.
DOC_CMD_DEFAULT = power-management is dynamic..
DOC_CMD_USAGE   = Use to configure PoE power-management.
DOC_CMD_EXAMPLE = no poe power-management

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_LOOSELY

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: no
! 2: poe
! 3: power-management

RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR =

HELP =
HELP = ##HELP_POE
HELP = Set Interface poe power-management to default value.

BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_power_management(session_id, FALSE, FALSE, FALSE, plist, TRUE);
CODE_END

CMD_END


! BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = poe type { type3-15w | type3-30w | type3-60w | type4-90w }

DOC_CMD_DESC    = Use poe set type.
DOC_CMD_DEFAULT = type is 4.
DOC_CMD_USAGE   = Use to configure PoE type.
DOC_CMD_EXAMPLE = poe type type3

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: poe
! 2: type
! 3: type3-15w
! 4: type3-30w
! 5: type3-60w
! 5: type4-90w

RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR = has_type3Pwr15w
CMD_VAR = has_type3Pwr30w
CMD_VAR = has_type3Pwr60w
CMD_VAR = has_type4Pwr90w

HELP = ##HELP_POE
HELP = Interface poe port type
HELP = Set poe type to type3-15watt.
HELP = Set poe type to type3-30watt.
HELP = Set poe type to type3-60watt.
HELP = Set poe type to type4-90watt.

BYWORD =
BYWORD =
BYWORD = <Type1 : option>
BYWORD = <Type2 : option>
BYWORD = <Type3 : option>
BYWORD = <Type4 : option>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_poe_type(session_id, has_type3Pwr15w, has_type3Pwr30w, has_type3Pwr60w ,has_type4Pwr90w ,plist, FALSE);
CODE_END

CMD_END


! BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = no poe type

DOC_CMD_DESC    = Use poe type to configure PoE type.
DOC_CMD_DEFAULT = type is 4.
DOC_CMD_USAGE   = Use to configure PoE type.
DOC_CMD_EXAMPLE = no poe type

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_LOOSELY

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: no
! 2: poe
! 3: type

RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported
RUNTIME = poe_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR =

HELP =
HELP = ##HELP_POE
HELP = Set Interface type to default value.

BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_poe_type(session_id, FALSE, FALSE, FALSE, FALSE ,plist, TRUE);
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = poe max-cable-length { max10 | max30 | max60 | max100 }

DOC_CMD_DESC    = Use poe set max-cable-length.
DOC_CMD_DEFAULT = type is max100.
DOC_CMD_USAGE   = Use to configure PoE max-cable-length
DOC_CMD_EXAMPLE = poe max-cable-length max30

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: poe
! 2: max-cable-length
! 3: max10
! 4: max30
! 5: max60
! 5: max100

RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR = has_max10
CMD_VAR = has_max30
CMD_VAR = has_max60
CMD_VAR = has_max100

HELP = ##HELP_POE
HELP = Interface poe port max-cable-length
HELP = Set poe max-cable-length to max10.
HELP = Set poe max-cable-length to max30.
HELP = Set poe max-cable-length to max60.
HELP = Set poe max-cable-length to max100.

BYWORD =
BYWORD =
BYWORD = <max10 : option>
BYWORD = <max30 : option>
BYWORD = <max60 : option>
BYWORD = <max100 : option>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_poe_cable_length(session_id, has_max10, has_max30, has_max60 ,has_max100 ,plist, FALSE);
CODE_END

CMD_END


! BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = no poe max-cable-length

DOC_CMD_DESC    = Use poe type to configure PoE max-cable-length
DOC_CMD_DEFAULT = max-cable-length is 100.
DOC_CMD_USAGE   = Use to configure PoE max-cable-length
DOC_CMD_EXAMPLE = no poe max-cable-length

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_LOOSELY

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: no
! 2: poe
! 3: max-cable-length

RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR =

HELP =
HELP = ##HELP_POE
HELP = Set Interface type to default value.

BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_poe_cable_length(session_id, FALSE, FALSE, FALSE, FALSE ,plist, TRUE);
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = poe lldp

DOC_CMD_DESC    = Use poe lldp to enable PoE lldp functionality.
DOC_CMD_DEFAULT = Lldp is enabled
DOC_CMD_USAGE   = Use poe lldp to enable PoE lldp functionality.
DOC_CMD_EXAMPLE = poe lldp

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: poe
! 2: lldp
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =

HELP = ##HELP_POE
HELP = Enable poe lldp functionality

BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_lldp(session_id, plist, FALSE);
CODE_END

CMD_END

! AT+BT ==============================================================================

CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = no poe lldp

DOC_CMD_DESC    = Use no poe lldp to disable PoE lldp functionality
DOC_CMD_DEFAULT = Lldp is enabled
DOC_CMD_USAGE   = Use no poe lldp to disable PoE lldp functionality
DOC_CMD_EXAMPLE = no poe lldp

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_LOOSELY

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! 1: no
! 2: poe
! 3: lldp

RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported
RUNTIME = poe_at_bt_icli_interface_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR =

HELP =
HELP = ##HELP_POE
HELP = Disable PoE lldp functionality

BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_lldp(session_id, plist, TRUE);
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = poe power-supply-limit <int>

POE_SUPPLY_HELP = Specify power supply limit - the maximum power the power supply can deliver.
DOC_CMD_DESC    = ##POE_SUPPLY_HELP
DOC_CMD_DEFAULT = Power supply maximum is as set at default product value 'POE_POWER_SUPPLY_DEF_POWER_W_DEFAULT'
DOC_CMD_USAGE   = set power supply value up to defined product value 'POE_POWER_SUPPLY_MAX_POWER_W_DEFAULT'.
DOC_CMD_EXAMPLE = poe power-supply-limit 150

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE
CMD_MODE = ICLI_CMD_MODE_GLOBAL_CONFIG

! 1: poe
! 2: power-supply-limit
! 3: value

CMD_VAR =
CMD_VAR =
CMD_VAR = power

RUNTIME = poe_icli_external_power_supply
RUNTIME = poe_icli_external_power_supply
RUNTIME = poe_icli_runtime_power_range

HELP = ##HELP_POE
HELP = ##POE_SUPPLY_HELP
HELP = power supply maximum power - the maximum power the power supply can deliver.

BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_power_supply(session_id, power, FALSE, VTSS_POE_ICLI_POWER_SUPPLY);
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = no poe power-supply-limit

DOC_CMD_DESC    = ##POE_SUPPLY_HELP
DOC_CMD_DEFAULT = Power supply maximum is as set at default product value 'POE_POWER_SUPPLY_DEF_POWER_W_DEFAULT'
DOC_CMD_USAGE   = set power supply to default product value 'POE_POWER_SUPPLY_DEF_POWER_W_DEFAULT'.
DOC_CMD_EXAMPLE = no poe power-supply-limit

PRIVILEGE = ICLI_PRIVILEGE_15
ROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE | ICLI_CMD_PROP_LOOSELY
CMD_MODE = ICLI_CMD_MODE_GLOBAL_CONFIG

RUNTIME = poe_icli_external_power_supply
RUNTIME = poe_icli_external_power_supply
RUNTIME = poe_icli_external_power_supply

! 1: poe
! 2: power-supply-limit

CMD_VAR =
CMD_VAR =
CMD_VAR =

HELP =
HELP = ##HELP_POE
HELP = ##POE_SUPPLY_HELP
HELP = runtime
HELP = runtime

CODE_BEGIN
    poe_icli_power_supply(session_id, 0, TRUE, VTSS_POE_ICLI_POWER_SUPPLY);
CODE_END

CMD_END

! AT+BT ==============================================================================

CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = debug poe power-supply-limit <int>

DOC_CMD_DESC    = ##POE_SUPPLY_HELP
DOC_CMD_DEFAULT = Power supply maximum is as set at default product value 'POE_POWER_SUPPLY_DEF_POWER_W_DEFAULT'
DOC_CMD_USAGE   = set power supply value up to defined product value 'POE_POWER_SUPPLY_MAX_POWER_W_DEFAULT'.
DOC_CMD_EXAMPLE = debug poe power-supply-limit 150

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE
CMD_MODE = ICLI_CMD_MODE_EXEC

! 1: debug
! 1: poe
! 2: power-supply-limit
! 3: value

# debug
HELP    =
BYWORD  =
CMD_VAR =
RUNTIME = poe_icli_runtime_supported

# poe
HELP    = ##HELP_POE
BYWORD  =
CMD_VAR =
RUNTIME = poe_icli_runtime_supported

# power-supply-limit
HELP    = ##POE_SUPPLY_HELP
BYWORD  =
CMD_VAR =
RUNTIME = poe_icli_runtime_supported

# value
HELP    = power-supply-limit - Maximum power the power supply can deliver.
BYWORD  =
CMD_VAR = power
RUNTIME = poe_icli_runtime_power_range

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_power_supply(session_id, power, FALSE, VTSS_POE_ICLI_POWER_SUPPLY);
CODE_END

CMD_END

! AT+BT ==============================================================================

CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = debug no poe power-supply-limit

DOC_CMD_DESC    = ##POE_SUPPLY_HELP
DOC_CMD_DEFAULT = Power supply maximum is as set at default product value 'POE_POWER_SUPPLY_DEF_POWER_W_DEFAULT'
DOC_CMD_USAGE   = set power supply to default product value 'POE_POWER_SUPPLY_DEF_POWER_W_DEFAULT'.
DOC_CMD_EXAMPLE = debug no poe power-supply-limit

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE | ICLI_CMD_PROP_LOOSELY
CMD_MODE = ICLI_CMD_MODE_EXEC

# debug
HELP    = runtime
BYWORD  =
CMD_VAR =
RUNTIME = poe_icli_runtime_supported

# no
HELP    = runtime
BYWORD  =
CMD_VAR =
RUNTIME = poe_icli_runtime_supported

# poe
HELP    = ##HELP_POE
BYWORD  =
CMD_VAR =
RUNTIME = poe_icli_runtime_supported

# power-supply-limit
HELP    = ##POE_SUPPLY_HELP
BYWORD  =
CMD_VAR =
RUNTIME = poe_icli_runtime_supported

CODE_BEGIN
    poe_icli_power_supply(session_id, 0, TRUE, VTSS_POE_ICLI_POWER_SUPPLY);
CODE_END

CMD_END

! AT ==============================================================================

CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = poe capacitor-detect

DOC_CMD_DESC    = ##POE_CAP_DETECT_HELP
DOC_CMD_DEFAULT = ##POE_CAP_DETECT_DEFAULT
DOC_CMD_USAGE   = ##POE_CAP_DETECT_USAGE
DOC_CMD_EXAMPLE = poe capacitor-detect

PRIVILEGE = ICLI_PRIVILEGE_15

PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE

CMD_MODE = ICLI_CMD_MODE_GLOBAL_CONFIG

MODE_VAR = plist

RUNTIME = poe_icli_capacitor_detect
RUNTIME = poe_icli_capacitor_detect

! 1: poe
! 2: capacitor-detect

CMD_VAR =
CMD_VAR =

HELP = ##HELP_POE
HELP = Enable capacitor detection

CODE_BEGIN
    poe_icli_cap_detect_set(session_id, FALSE);
CODE_END

CMD_END

! AT ==============================================================================

CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = no poe capacitor-detect

DOC_CMD_DESC    = ##POE_CAP_DETECT_HELP
DOC_CMD_DEFAULT = ##POE_CAP_DETECT_DEFAULT
DOC_CMD_USAGE   = ##POE_CAP_DETECT_USAGE
DOC_CMD_EXAMPLE = no poe capacitor-detect

PRIVILEGE = ICLI_PRIVILEGE_15

PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE | ICLI_CMD_PROP_LOOSELY

CMD_MODE = ICLI_CMD_MODE_GLOBAL_CONFIG

MODE_VAR = plist

RUNTIME = poe_icli_capacitor_detect
RUNTIME = poe_icli_capacitor_detect
RUNTIME = poe_icli_capacitor_detect

! 1: poe
! 2: capacitor-detect

CMD_VAR =
CMD_VAR =
CMD_VAR =

HELP =
HELP = ##HELP_POE
HELP = Disable capacitor detection

CODE_BEGIN
    poe_icli_cap_detect_set(session_id, TRUE);
CODE_END

CMD_END


! BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = poe interruptible-power

PRIVILEGE = ICLI_PRIVILEGE_15

PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE

CMD_MODE = ICLI_CMD_MODE_GLOBAL_CONFIG

RUNTIME = poe_icli_interruptible_power
RUNTIME = poe_icli_interruptible_power

HELP = ##HELP_POE
HELP = No power interruption during switch restart

CODE_BEGIN
    poe_icli_interruptible_power_set(session_id, TRUE);
CODE_END

NO_FORM_CODE_BEGIN
    poe_icli_interruptible_power_set(session_id, FALSE);
NO_FORM_CODE_END

CMD_END


! BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = poe pd-auto-class-request

PRIVILEGE = ICLI_PRIVILEGE_15

PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE

CMD_MODE = ICLI_CMD_MODE_GLOBAL_CONFIG

RUNTIME = poe_icli_pd_auto_class_request
RUNTIME = poe_icli_pd_auto_class_request

HELP = ##HELP_POE
HELP = Activate pd-auto-class-request on startup

CODE_BEGIN
    poe_icli_pd_auto_class_request_set(session_id, TRUE);
CODE_END

NO_FORM_CODE_BEGIN
    poe_icli_pd_auto_class_request_set(session_id, FALSE);
NO_FORM_CODE_END

CMD_END


! BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = poe legacy-pd-class-mode { standard | poh | ignore-pd-class }

DOC_CMD_DESC    = Use poe priority to configure PoE priority.
DOC_CMD_DEFAULT = standard.
DOC_CMD_USAGE   = Use to configure PoE priority.
DOC_CMD_EXAMPLE = poe legacy-pd-class-mode poh

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE

CMD_MODE = ICLI_CMD_MODE_GLOBAL_CONFIG
MODE_VAR = plist

! 1: poe
! 2: legacy-pd-class-mode
! 3: standard
! 4: poh
! 5: ignore_pd_class

RUNTIME = poe_icli_legacy_pd_class_mode
RUNTIME = poe_icli_legacy_pd_class_mode
RUNTIME = poe_icli_legacy_pd_class_mode
RUNTIME = poe_icli_legacy_pd_class_mode
RUNTIME = poe_icli_legacy_pd_class_mode

CMD_VAR =
CMD_VAR =
CMD_VAR = has_standard
CMD_VAR = has_poh
CMD_VAR = has_ignore_pd_class

HELP = ##HELP_POE
HELP = pd-class-mode.
HELP = Set to standard.
HELP = Set poh.
HELP = Set to ignore_pd_class.

BYWORD =
BYWORD =
BYWORD = <standard : option>
BYWORD = <poh : option>
BYWORD = <ignore_pd_class : option>

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_legacy_pd_class_mode_set(session_id, has_standard, has_poh, has_ignore_pd_class, FALSE);
CODE_END

CMD_END


! BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = no poe legacy-pd-class-mode

DOC_CMD_DESC    = Use poe legacy-pd-class-mode to configure PoE pd class mode.
DOC_CMD_DEFAULT = standard.
DOC_CMD_USAGE   = Use to configure PoE pd-class-mode.
DOC_CMD_EXAMPLE = poe legacy-pd-class-mode standard

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_ENABLE | ICLI_CMD_PROP_VISIBLE
CMD_MODE = ICLI_CMD_MODE_GLOBAL_CONFIG
MODE_VAR = plist

! 1: no
! 2: poe
! 3: legacy-pd-class-mode

RUNTIME = poe_icli_legacy_pd_class_mode
RUNTIME = poe_icli_legacy_pd_class_mode
RUNTIME = poe_icli_legacy_pd_class_mode

CMD_VAR =
CMD_VAR =
CMD_VAR =

HELP =
HELP = ##HELP_POE
HELP = Set legacy-pd-class-mode to default value.

BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    poe_icli_legacy_pd_class_mode_set(session_id, FALSE, FALSE, FALSE, TRUE);
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG =

COMMAND = poe firmware <url_file>

DOC_CMD_DESC    = Use the command to specify the firmware that shall be uploaded to the poe controller. The poe controller firmware upgrade requires a reboot to take effect.
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   = Used to configure firmware to be used by poe controller
DOC_CMD_EXAMPLE = poe firmware flash:29035200_1300_001.s19

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_GLOBAL_CONFIG
MODE_VAR =

RUNTIME =

! 1: PoE
! 2: firmware
! 3: <url_file>

CMD_VAR =
CMD_VAR =
CMD_VAR = file

HELP = ##HELP_POE
HELP = PoE Firmware for controller
HELP = The name of a file in the filesystem, e.g. flash:29035200_1300_001.s19

BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
    vtss_appl_poe_conf_t poe_conf;
VARIABLE_END

CODE_BEGIN
    vtss_appl_poe_conf_get(VTSS_USID_START, &poe_conf);
    strncpy(poe_conf.firmware, file, sizeof(poe_conf.firmware));
    vtss_appl_poe_conf_set(VTSS_USID_START, &poe_conf);
CODE_END

NO_FORM_VARIABLE_BEGIN
    vtss_appl_poe_conf_t poe_conf;
NO_FORM_VARIABLE_END

NO_FORM_CODE_BEGIN
    vtss_appl_poe_conf_get(VTSS_USID_START, &poe_conf);
    poe_conf.firmware[0] = 0;
    vtss_appl_poe_conf_set(VTSS_USID_START, &poe_conf);
NO_FORM_CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = debug poe halt-at-i2c-error

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

HELP = debug keyword
HELP = ##HELP_POE
HELP = When this command has been executed the whole system will be halted (even CLI) if an i2c error happens. This is for being able to catch the last i2c transaction when debugging.

CODE_BEGIN
    ICLI_PRINTF("System is halted at next i2c error\n");
    poe_halt_at_i2c_err_ena(); // Enabling halting at i2c errors.
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = debug poe status polling [ on | off ]

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = has_off

HELP = debug keyword
HELP = ##HELP_POE

CODE_BEGIN
    ICLI_PRINTF("PoE status polling is %s\n", has_off?"off":"on" );
    poe_status_polling_disable(has_off); // Enabling halting at i2c errors.
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE && VTSS_SW_OPTION_LED_STATUS

COMMAND = show poe powerin status

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported

! 1: show
! 2: poe
! 3: powerin
! 4: status

HELP = Display PoE power supply status
HELP = ##HELP_POE
HELP = Get the current power supply status
HELP =

CODE_BEGIN
    poe_icli_get_power_in_status(session_id);
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE && VTSS_SW_OPTION_LED_STATUS

COMMAND = show poe powerin led

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

! 1: show
! 2: poe
! 3: powerin
! 4: led

RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported

HELP = Display PoE power supply LEDs
HELP = ##HELP_POE
HELP = Get the current power supply LEDs
HELP =

CODE_BEGIN
    poe_icli_get_power_in_led(session_id);
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE && VTSS_SW_OPTION_LED_STATUS

COMMAND = show poe status led

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

! 1: show
! 2: poe
! 3: status
! 4: led

RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported

HELP = Display PoE power supply LEDs
HELP = ##HELP_POE
HELP = Get the current power supply LEDs
HELP =

CODE_BEGIN
    poe_icli_get_status_led(session_id);
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = debug poe system-power-reserve <uint>

POE_POWER_RESERVE_HELP = Specify an amount of power in Watt which shall be reserved to maintain the operation of the board. The supply power subtracted this value is the power availabe to the PoE PDs.

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = power

HELP = debug keyword
HELP = ##HELP_POE
HELP = ##POE_POWER_RESERVE_HELP
HELP = Power reserved for the system. E.g. If power supply is configured to 180W, and system power reserve is configured to 10W, then only 170W are available to the PoE PDs.

BYWORD =
BYWORD =
BYWORD =

CODE_BEGIN
    poe_icli_power_supply(session_id, power, FALSE, VTSS_POE_ICLI_SYSTEM_RESERVE_POWER);
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = show poe version

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

CMD_VAR =
CMD_VAR =
CMD_VAR =


RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported

HELP = ##HELP_POE
HELP = show keyword
HELP = version keyword

CODE_BEGIN
     char info[500];
     ICLI_PRINTF("PoE Version: %s\n", poe_firmware_info_get(sizeof(info), &info[0]));
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = debug show poe indvidual-masks

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =

RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported

HELP = debug keyword
HELP = ##HELP_POE
HELP = show keyword
HELP = indvidual-masks keyword

CODE_BEGIN
     poe_icli_individual_masks_show(session_id);
     return VTSS_RC_OK;
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = debug show poe i2c

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =

RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported

HELP = debug keyword
HELP = ##HELP_POE
HELP = show keyword
HELP = i2c keyword

CODE_BEGIN
     poe_icli_i2c_status_show(session_id);
     return VTSS_RC_OK;
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = debug poe [ interface <port_type_list> ]

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

CMD_VAR =
CMD_VAR =
CMD_VAR = has_interface
CMD_VAR = v_port_type_list

RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported

CODE_BEGIN
    poe_icli_debug_show(session_id, has_interface, v_port_type_list);
    return VTSS_RC_OK;
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG =

COMMAND = debug poe firmware upgrade [iport <uint>] {<url_file> | built-in-image | brick }

DOC_CMD_DESC    = Use firmware upgrade to load new PoE firmware image to the switch.
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   = Use to load new PoE firmware image to the switch.
DOC_CMD_EXAMPLE = poe firmware upgrade tftp://10.10.10.10/new_image_path/new_image.dat

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  =

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

RUNTIME =

! 1: PoE
! 2: firmware
! 3: upgrade
! 4: <url_file>

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = iport
CMD_VAR = url_file
CMD_VAR = has_built_in
CMD_VAR = has_brick

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME = icli_range_vtss_ports

HELP = debug keyword
HELP = ##HELP_POE
HELP = PoE Firmware upgrade
HELP = PoE Firmware upgrade
HELP = ##HELP_IPORT
HELP = ##HELP_IPORT_NUM
HELP = ##ICLI_HELP_URL_FILE
HELP = Use the built-in PoE firmware image.

BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD = <protocol>://[<username>[:<password>]@]<host>[:<port>][/<path>]/<file_name>
! <protocol>:   The scheme of URI. The input string allows the lowercase letters
!               only and its maximum length is 31. It should be aware of tftp.
! <username>:   (Optional) User information. The maximum length is 63.
! <password>:   (Optional) User information. The maximum length is 63.
! <host>:       It can be a domain name or an IPv4 address. The maximum length is 63.
! <port>:       (Optional) port number.
! <path>:       If the path is presented, it must separated by forward slash(/). The maximum length is 255.
! <file_nmame>: A valid file name is a text string drawn from alphabet (A-Za-z),
!               digits (0-9), dot (.), hyphen (-), under score(_). The maximum length
!               is 63(default) and hyphen must not be first character. The file name
!               content that only contains '.' is not allowed.

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    ICLI_RC_CHECK(poe_icli_firmware_upgrade(session_id, iport, url_file, has_built_in, has_brick), "");
    return VTSS_RC_OK;
CODE_END

CMD_END


! AT+BT ==============================================================================


! debug poe pd69xxx access 0x0200071E214E4E4E4E4E4E4E4E02B8
! debug poe pd69xxx access 0x0200071E214E4E4E4E4E4E4E4E
! debug poe pd69xxx access iport 1 0x0200071E214E4E4E4E4E4E4E4E02B8

CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = debug poe pd69xxx access [iport <uint>] <line255>

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

! 1: debug
! 2: poe
! 3: pd69xxx
! 4: access
! 5: [iport]
! 6: [<uint>]
! 7: <line255>

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = iport
CMD_VAR = v_line255

HELP = debug keyword
HELP = ##HELP_POE
HELP = pd69xxx keyword
HELP = Does a pd69xxx access - See the pd69xxx data sheet for understanding the format.
HELP = ##HELP_IPORT
HELP = ##HELP_IPORT_NUM
HELP = contact string

VARIABLE_BEGIN
    u32 len_tmp;
VARIABLE_END

CODE_BEGIN
	if (v_line255) {
		len_tmp = strlen(v_line255);
		poe_icli_debug_access(session_id ,iport, (char*)v_line255 ,len_tmp);
	}
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG =

COMMAND = debug poe pd69xxx reset

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =

HELP = debug keyword
HELP = ##HELP_POE
HELP = pd69xxx keyword
HELP = Reset the pd69xxx chip

CODE_BEGIN
    poe_reset_command();
CODE_END

CMD_END


! AT+BT ==============================================================================


CMD_BEGIN

IF_FLAG = VTSS_SW_OPTION_POE

COMMAND = debug show poe counters [ interface <port_type_list> ]

PRIVILEGE = ICLI_PRIVILEGE_15

CMD_MODE = ICLI_CMD_MODE_EXEC

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = has_interface
CMD_VAR = v_port_type_list

RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported
RUNTIME = poe_icli_runtime_supported

CODE_BEGIN
    poe_icli_debug_show_poe_error_counters(session_id, has_interface, v_port_type_list);
    return VTSS_RC_OK;
CODE_END

CMD_END
