<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--

 Copyright (c) 2006-2022 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.

-->
<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <title>VLAN Translation Mapping Table</title>
 <link href="lib/normal.css" rel="stylesheet" type="text/css">
 <script type="text/javascript" src="lib/config.js"></script>
 <script type="text/javascript" src="lib/ajax.js"></script>
 <script type="text/javascript" src="lib/dynforms.js"></script>
 <script type="text/javascript">

// Help page magic
var help_page = "/help/help_vlan_trans_mapping.htm";

var groupIdArray = Array();

var timerID;
var timeOut = settingsRefreshInterval();

var idx      = 0;
var idx_gid  = idx++;
var idx_dir  = idx++;
var idx_vid  = idx++;
var idx_tvid = idx++;

var oTDir = ["Both", "Ingress", "Egress"];

var pageArgs = searchArgs(window.location.search);
if (pageArgs.vt_error && parseInt(pageArgs.vt_error, 10) == 1) {
   alert("The translation entry is conflicting with an existing entry in the switch.");
}

function addImageInline(frag, style, src, text, idx, click)
{
    var field = document.createElement('img');
    var pval = text.split(" ");
    field.id = pval[pval.length - 1] + "_" + (idx > 0 ? idx : 0);
    field.src = src;
    field.border = 0;
    field.value = idx;
    if (click) {
        field.onclick = click;
    }
    field.title = field.alt = text;
    frag.appendChild(field);
    return field;
}

function mapEdit(values)
{
    // Format       : [mapEditFlag]/[selectGroupId]/[selectDir]/[selectVlanId]
    // <Edit>       :             1/          [gid]/      [dir]/         [vid]
    // <Add New> :                4/

    document.location.href = "map_edit.htm?mapEditFlag=1&selectGroupId=" + values[idx_gid] + "&selectDir=" + values[idx_dir] + "&selectVlanId=" + values[idx_vid];
}

function mapAddNew()
{
    // Format       : [mapEditFlag]/[selectGroupId]/[selectDir]/[selectVlanId]
    // <Edit>       :             1/          [gid]/      [dir]/         [vid]
    // <Add New> :                4/

    document.location.href = "map_edit.htm?mapEditFlag=4";
}

// Predeclare processUpdate(). This makes JSLint happy.
var processUpdate;

function addRowControlCol(tr, values, idx, first, last)
{
    var container = document.createElement("td");

    //edit
    addImageInline(container, "cl", "images/edit.gif", "Edit Mapping", values[idx_gid], function() {mapEdit(values);});
 
    //del
    addImageInline(container, "cl", "images/del.gif", "Delete Mapping", values[idx_gid], function () {loadXMLDoc('/config/mapping_conf?mapConfigFlag=2&selectGroupId=' + values[idx_gid] + "&selectDir=" + values[idx_dir] + "&selectVlanId=" + values[idx_vid], processUpdate, 'confTable');});
   tr.appendChild(container);
}

function addRow(frag, values, idx, first, last)
{
    var tr = CreateStyledElement("tr", idx % 2 ? "config_odd" : "config_even");

    groupIdArray[idx] = values[idx_gid];
    addTextCell(tr, values[idx_gid], "cr");
    addTextCell(tr, oTDir[parseInt(values[idx_dir], 10)], "c");
    addTextCell(tr, values[idx_vid], "cr");
    addTextCell(tr, values[idx_tvid], "cr");
    addRowControlCol(tr, values, idx, first, last);
    frag.appendChild(tr);   // Add row to fragment
}

function CreateTableHeader(frag)
{
    var tr, td;

    tr = CreateStyledElement("tr", "config_header");
    addTextHeaderCell(tr, "Group ID", "hdrc");
    addTextHeaderCell(tr, "Direction", "hdrc");
    addTextHeaderCell(tr, "VID", "hdrc");
    addTextHeaderCell(tr, "TVID", "hdrc");
    addTextHeaderCell(tr, " ", "hdrc");
    frag.appendChild(tr); // Add row to fragment
}

processUpdate = function(req, ref)
{
    var frag, tbody, tr, td, img;
    var rowwidth = 4;

    //create holder for accumulated tbody elements and text nodes
    frag = document.createDocumentFragment();
    CreateTableHeader(frag);

    if (req.responseText) {
        var mapConfig = req.responseText.split("|");
        var first = 1;
        for (var i = 0; i < mapConfig.length; i++) {
            if (mapConfig[i]) {
                var pval = mapConfig[i].split("/");
                addRow(frag, pval, i, first, mapConfig[i + 1] ? 0 : 1);
                first = 0;
            }
        }

        // Last Row - for new
        tr = document.createElement("tr");
        td = document.createElement("td");
        td.setAttribute("colSpan", rowwidth);
        tr.appendChild(td); // Add col to row
        td = document.createElement("td");
        img = addImageInline(td, "cl",  "images/add.gif", "Add New Mapping", 0, mapAddNew);
        tr.appendChild(td); // Add col to row
        frag.appendChild(tr);   // Add row to fragment
    } else { //no mappings exist
        tbody = document.getElementById(ref);
        if (tbody) {
            // Last Row - for new
            tr = document.createElement("tr");
            td = document.createElement("td");
            td.setAttribute("colSpan", rowwidth);
            tr.appendChild(td); // Add col to row
            td = document.createElement("td");
            img = addImageInline(td, "cl",  "images/add.gif", "Add New Mapping", 0, mapAddNew);
            tr.appendChild(td); // Add col to row
            frag.appendChild(tr);   // Add row to fragment
        }
    }

    tbody = document.getElementById(ref);
    clearChildNodes(tbody);
    if (!tbody.appendChild(frag)) { // Add Frag to table body
        alert("This browser doesn't support dynamic tables.");
    }

    var autorefresh = document.getElementById('autorefresh');
    if (autorefresh.checked) {
        if (timerID) {
            clearTimeout(timerID);
        }
        timerID = setTimeout('requestUpdate()', settingsRefreshInterval());
    }
};

function requestUpdate()
{
    //Format: <gid>/<dir>/<vid>/<tvid>|...

    loadXMLDoc("/config/mapping_conf", processUpdate, 'confTable');
}

function chkRefresh(fld)
{
    if (!fld.checked) {
        if (timerID) {
            clearTimeout(timerID);
        }
        timerID = null;
    } else {
        requestUpdate();
    }
}

function requestRemoveAll()
{
    // Format       : [mapConfigFlag]/[selectGroupId]/[selectVlanId]
    // <Edit>       :               1/          [gid]/         [vid]
    // <Delete>     :               2/          [gid]/         [vid]
    // <Delete All> :               3/
    // <Add New>    :               4/

    if (!confirm("All VLAN Translation Mappings will be removed.\nDo you want to proceed anyway?")) {
        return false;
    }
    var url="/config/mapping_conf?mapConfigFlag=3";
    loadXMLDoc(url, processUpdate, 'confTable');
    return true;
}

 </script>
</head>

<body class="content" onload="requestUpdate();">

<div class="refreshbar">
 <form action="#">
  <label for="autorefresh">Auto-refresh</label>
  <input type="checkbox" name="autorefresh" id="autorefresh" onclick="chkRefresh(this);">
  <input type="button"   value="Refresh"    id="refresh"     onclick="requestUpdate();    this.blur();">
  <input type="button"   value="Remove All" id="removeall"   onclick="requestRemoveAll(); this.blur();">
  <img id="update" alt="" src="images/updating.gif">
 </form>
</div>

<div id="control_bar_tbl">

<h1>VLAN Translation Mapping Table</h1>

<table summary="Mapping Configuration" class="display">
 <tbody id="confTable">
 </tbody>
</table>

</div>

<!-- IE caching bug -->
<div style="visibility: hidden;">
 <img alt="" src="images/add.gif">
 <img alt="" src="images/edit.gif">
 <img alt="" src="images/del.gif">
</div>

</body>
</html>


<!--
    local variables:
    mode: java
    c-basic-offset: 4
    tab-width: 8
    c-comment-only-line-offset: 0
    end:
-->
