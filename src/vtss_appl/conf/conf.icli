#
# Copyright (c) 2006-2017 Microsemi Corporation "Microsemi". All Rights Reserved.
#
# Unpublished rights reserved under the copyright laws of the United States of
# America, other countries and international treaties. Permission to use, copy,
# store and modify, the software and its source code is granted but only in
# connection with products utilizing the Microsemi switch and PHY products.
# Permission is also granted for you to integrate into other products, disclose,
# transmit and distribute the software only in an absolute machine readable
# format (e.g. HEX file) and only in or with products utilizing the Microsemi
# switch and PHY products.  The source code of the software may not be
# disclosed, transmitted or distributed without the prior written permission of
# Microsemi.
#
# This copyright notice must appear in any copy, modification, disclosure,
# transmission or distribution of the software.  Microsemi retains all
# ownership, copyright, trade secret and proprietary rights in the software and
# its source code, including all modifications thereto.
#
# THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
# WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
# ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
# NON-INFRINGEMENT.
#

MODULE_IF_FLAG =

INCLUDE_BEGIN
#include "conf_icli_util.h"
INCLUDE_END

FUNCTION_BEGIN
static void conf_icli_req_init(conf_icli_req_t *req, u32 session_id, conf_icli_cmd_t cmd)
{
    memset(req, 0, sizeof(*req));
    req->session_id = session_id;
    req->cmd = cmd;
}
FUNCTION_END

EXPORT_BEGIN
EXPORT_END

HELP_CONF = Configuration system

!==============================================================================

CMD_BEGIN

IF_FLAG = 

COMMAND = debug conf blocks [ clear ]

DOC_CMD_DESC    = 
DOC_CMD_DEFAULT = 
DOC_CMD_USAGE   = 
DOC_CMD_EXAMPLE = 

FUNC_NAME = 
FUNC_REUSE = 

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR = 

! debug
CMD_VAR = 
RUNTIME = 
HELP    = ##ICLI_HELP_DEBUG
BYWORD  = 

! conf
CMD_VAR = 
RUNTIME = 
HELP    = ##HELP_CONF
BYWORD  = 

! blocks
CMD_VAR = 
RUNTIME = 
HELP    = Show blocks or clear section save counter
BYWORD  = 

! clear
CMD_VAR = has_clear
RUNTIME = 
HELP    = 
BYWORD  = clear : Option

VARIABLE_BEGIN
    conf_icli_req_t req;
VARIABLE_END

CODE_BEGIN
    conf_icli_req_init(&req, session_id, CONF_ICLI_CMD_BLOCKS);
    req.clear = has_clear;
    ICLI_RC(conf_icli_cmd(&req));
CODE_END

CMD_END

CMD_BEGIN

IF_FLAG = 

COMMAND = debug conf flash [ { enable | disable } ]

DOC_CMD_DESC    = 
DOC_CMD_DEFAULT = 
DOC_CMD_USAGE   = 
DOC_CMD_EXAMPLE = 

FUNC_NAME = 
FUNC_REUSE = 

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR = 

! debug
CMD_VAR = 
RUNTIME = 
HELP    = ##ICLI_HELP_DEBUG
BYWORD  = 

! conf
CMD_VAR = 
RUNTIME = 
HELP    = ##HELP_CONF
BYWORD  = 

! flash
CMD_VAR = 
RUNTIME = 
HELP    = Set or show the Flash save mode
BYWORD  = 

! enable
CMD_VAR = has_enable
RUNTIME = 
HELP    = Enable flash saving
BYWORD  = enable : Option

! disable
CMD_VAR = has_disable
RUNTIME = 
HELP    = Disable flash saving
BYWORD  = disable : Option

VARIABLE_BEGIN
    conf_icli_req_t req;
VARIABLE_END

CODE_BEGIN
    conf_icli_req_init(&req, session_id, CONF_ICLI_CMD_FLASH);
    req.enable = has_enable;
    req.disable = has_disable;
    ICLI_RC(conf_icli_cmd(&req));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = 

COMMAND = debug conf stack [ { enable | disable } ]

DOC_CMD_DESC    = 
DOC_CMD_DEFAULT = 
DOC_CMD_USAGE   = 
DOC_CMD_EXAMPLE = 

FUNC_NAME = 
FUNC_REUSE = 

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR = 

! debug
CMD_VAR = 
RUNTIME = 
HELP    = ##ICLI_HELP_DEBUG
BYWORD  = 

! conf
CMD_VAR = 
RUNTIME = 
HELP    = ##HELP_CONF
BYWORD  = 

! stack
CMD_VAR = 
RUNTIME = 
HELP    = Set or show the stack copy mode
BYWORD  = 

! enable
CMD_VAR = has_enable
RUNTIME = 
HELP    = Enable stack copy
BYWORD  = enable : Option

! disable
CMD_VAR = has_disable
RUNTIME = 
HELP    = Disable stack copy
BYWORD  = disable : Option

VARIABLE_BEGIN
    conf_icli_req_t req;
VARIABLE_END

CODE_BEGIN
    conf_icli_req_init(&req, session_id, CONF_ICLI_CMD_STACK);
    req.enable = has_enable;
    req.disable = has_disable;
    ICLI_RC(conf_icli_cmd(&req));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG = 

COMMAND = debug conf change [ { enable | disable } ]

DOC_CMD_DESC    = 
DOC_CMD_DEFAULT = 
DOC_CMD_USAGE   = 
DOC_CMD_EXAMPLE = 

FUNC_NAME = 
FUNC_REUSE = 

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR = 

! debug
CMD_VAR = 
RUNTIME = 
HELP    = ##ICLI_HELP_DEBUG
BYWORD  = 

! conf
CMD_VAR = 
RUNTIME = 
HELP    = ##HELP_CONF
BYWORD  = 

! change
CMD_VAR = 
RUNTIME = 
HELP    = Set or show the change detect mode
BYWORD  = 

! enable
CMD_VAR = has_enable
RUNTIME = 
HELP    = Enable change detection
BYWORD  = enable : Option

! disable
CMD_VAR = has_disable
RUNTIME = 
HELP    = Disable change detection
BYWORD  = disable : Option

VARIABLE_BEGIN
    conf_icli_req_t req;
VARIABLE_END

CODE_BEGIN
    conf_icli_req_init(&req, session_id, CONF_ICLI_CMD_CHANGE);
    req.enable = has_enable;
    req.disable = has_disable;
    ICLI_RC(conf_icli_cmd(&req));
CODE_END

CMD_END

