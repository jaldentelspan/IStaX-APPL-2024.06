<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
 Copyright (c) 2006-2023 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.
-->

<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <title>Detailed RedBox ProxyNodeTable Help</title>
 <link href="/lib/normal.css"   rel="stylesheet" type="text/css">
 <link href="/lib/help.css"     rel="stylesheet" type="text/css">
 <script type="text/javascript" src="/lib/config.js"></script>
 <script type="text/javascript" src="/lib/mootools-core.js"></script>
 <script type="text/javascript" src="/lib/dynforms.js"></script>
 <script type="text/javascript" src="/lib/ajax.js"></script>
 <script type="text/javascript" src="/lib/spom.js"></script>
 <script type="text/javascript" src="/lib/format.js"></script>
 <script type="text/javascript" src="/lib/json.js"></script>
 <script type="text/javascript" src="../redbox_lib.js"></script>
 <script type="text/javascript" language="JavaScript">

/******************************************************************************/
// add_header()
/******************************************************************************/
function add_header(table_rows)
{
    var row;

    // 1st row (numbers are colspan, rowspan)
    row = {fields: [
              {type: "disp_hdr", params: ["Supervision frame received", 1, 2]},
              {type: "disp_hdr", params: ["Own MAC",                    1, 2]},
              {type: "disp_hdr", params: ["H/W Type",                   1, 2]},
              {type: "disp_hdr", params: ["Mode",                       4, 1]},
              {type: "disp_hdr", params: ["Notes",                      1, 2]}]
          };

    table_rows.push(row);

    // 2nd row
    row = {fields: [
              {type: "disp_hdr", params: ["PRP-SAN", 1, 1]},
              {type: "disp_hdr", params: ["HSR-SAN", 1, 1]},
              {type: "disp_hdr", params: ["HSR-PRP", 1, 1]},
              {type: "disp_hdr", params: ["HSR-HSR", 1, 1]}]
          };

    table_rows.push(row);
}

/******************************************************************************/
// add_dscr_row()
/******************************************************************************/
function add_dscr_row(sv, own, hw_type, prp_san, hsr_san, hsr_prp, hsr_hsr, notes)
{
    var row;

    row = {fields: [
              {type: "text",  params: [sv,      "cl"]},
              {type: "text",  params: [own,     "cl"]},
              {type: "text",  params: [hw_type, "cl"]},
              {type: "text",  params: [prp_san, "cl"]},
              {type: "text",  params: [hsr_san, "cl"]},
              {type: "text",  params: [hsr_prp, "cl"]},
              {type: "text",  params: [hsr_hsr, "cl"]},
              {type: "text",  params: [notes,   "cl"]}]
          };

    return row;
}

/******************************************************************************/
// add_dscr_rows()
/******************************************************************************/
function add_dscr_rows(table_rows)
{
    table_rows.push(add_dscr_row("No",                     "Yes", "SAN", "VDANP",       "VDANH",       "VDANP",       "VDANH",       "1"));
    table_rows.push(add_dscr_row("No",                     "Yes", "DAN", "DANP-RedBox", "DANH-RedBox", "DANH-RedBox", "DANH-RedBox", "2"));
    table_rows.push(add_dscr_row("No",                     "No",  "SAN", "VDANP",       "VDANH",       "VDANP",       "N/A",         "3"));
    table_rows.push(add_dscr_row("TLV1, TLV2 not present", "No",  "DAN", "N/A",         "N/A",         "DANP",        "N/A",         "3, 4, 5, 6, 7"));
    table_rows.push(add_dscr_row("TLV1, TLV2 present",     "No",  "DAN", "N/A",         "N/A",         "VDANP",       "N/A",         "3, 4, 5, 6, 7"));
    table_rows.push(add_dscr_row("TLV2",                   "No",  "DAN", "N/A",         "N/A",         "DANP-RedBox", "N/A",         "3, 5, 6, 7"));
}

/******************************************************************************/
// add_rows()
/******************************************************************************/
function add_rows()
{
    table_rows = new Array();

    add_header(table_rows);
    add_dscr_rows(table_rows);

    return table_rows;
}

/******************************************************************************/
// window::domready()
/******************************************************************************/
window.addEvent('domready', function() {
    var nodetypeTable = new DynamicTable("nodetypeTableContent", "display");

    nodetypeTable.addRows(add_rows());
    nodetypeTable.update();
});

 </script>
</head>

<body>
<h1>Detailed RedBox ProxyNodeTable Help</h1>

<p>This page shows detailed ProxyNodeTable contents for a given
<a href="glossary.htm#RedBox" class="glossary">RedBox</a> instance.</p>

At the top right corner, the page offers a drop-down list, where any of the
creatable RedBox instances can be selected. If selecting an instance that is not
created, a single line spanning all columns will show 'Not created'. If
selecting an instance that is created, but not enabled, a single line spanning
all columns will show 'Inactive'.<br/>

Next to the selected instance drop-down list, is another drop-downlist, which
allows for selecting whether to show all MAC addresses or only show those with a
non-zero Rx Wrong LAN. This option only makes sense when the RedBox is in
HSR-PRP mode, because that's the only mode in which an RCT is used on the
interlink port. Using this option allows for quickly finding those DANPs that
are misconfigured or wrongly connected to the PRP network.

The ProxyNodeTable holds information about the source MAC addresses of frames
received on the interlink port (Port C), that is, frames received on the switch
core-side that are on their way towards the
<a href="glossary.htm#LRE" class="glossary">LRE</a> ports.<br/>

The following explains the columns of the table.

<dl>
  <dt>MAC Address</dt>
  <dd>
    The MAC address that this row is showing information about.<br/>

    The RedBox itself adds two MAC addresses, which cannot be cleared. One is
    for the RedBox itself and the other is for the device's management address.
    <br/>

    These two MAC addresses are marked with an asterisk ('*').
  </dd>

  <dt>Node Type</dt>
  <dd>
    The RedBox detects and names the node after the RedBox' mode of operation
    and reception of supervision frames on the interlink port (Port C) that
    relate to that node. Supervision frames received on the interlink port (as
    seen from the RedBox' perspective) are only relevant in HSR-PRP and HSR-HSR
    mode. In other modes, supervision frames received on Port C will be
    discarded by the RedBox.<br/><br/>

    Hardware knows whether a given node is a
    <a href="glossary.htm#RedBox-SAN" class="glossary">SAN</a> or a
    <a href="glossary.htm#RedBox-DAN" class="glossary">DAN</a>. This only
    matters when the RedBox is in HSR-PRP mode, where it is used to indicate
    whether frames from the PRP network are expected to have an RCT appended to
    the frame or not. If the entry is marked as a DAN and frames from the PRP
    network with that SMAC don't include an RCT, they will get discarded by the
    RedBox.
    <br/>

    The first encounter of a new MAC address causes hardware to add it to the
    ProxyNodeTable as a SAN. Only software can change this to a DAN, which will
    happen (in HSR-PRP mode only) if a valid supervision frame is received on
    Port C that mentions the MAC address in TLV1 or TLV2.<br/>

    Software checks the ProxyNodeTable regularly to see if new MAC addresses are
    added, and if so, it starts to send supervision frames towards the LRE ports
    on behalf of these MAC addresses. These nodes are known as Virtual DANs or
    VDANs. In HSR-SAN and HSR-HSR modes, they are VDANHs and in PRP-SAN and
    HSR-PRP modes they are VDANPs. In HSR-PRP mode, software only sends
    supervision frames on behalf of VDANPs as long as a supervision frame hasn't
    been received on Port C mentioning VDANP's MAC address, because that means
    that the VDANP sits behind another RedBox in the PRP network and therefore
    doesn't need another RedBox to send on its behalf.<br/>

    Supervision frames always contain a TLV1, and if the supervision frame is
    sent by a RedBox on behalf of a SAN, it also contains a TLV2 with that
    RedBox' MAC address. This information is used to build the Node Type
    displayed on this page.<br/>

    The following table summarizes the Node Types that can be shown based on
    whether supervision frames have been received and whether that supervision
    frame had a TLV2 and whether the MAC address stems from TLV1.MAC or
    TLV2.MAC.<br/><br/>

    <div id="nodetypeTableContent"></div>

    <br/>

    Note 1: This is the switch's management MAC address.<br/>

    Note 2: This is the RedBox' MAC address.<br/>

    Note 3: The ProxyNodeTable is not used in HSR-HSR mode, except for our own
    two MAC addresses.<br/>

    Note 4: In HSR-PRP mode, it is impossible to detect the real origin of a
    given DANP or VDANP node. As an example, consider a PRP network, where
    another RedBox in HSR-PRP mode translates HSR supervision frames arriving on
    its LRE ports to PRP supervision frames before sending them to the PRP
    network. When this supervision frame arrives at our RedBox, it looks like
    any other supervision frame transmitted by e.g. a PRP-SAN RedBox connected
    to the PRP network.<br/>

    Note 5: Supervision frames arriving on Port C are only used in HSR-PRP mode.
    <br/>

    Note 6: Reception of a supervision frame causes the entry to be changed to a
    DAN.<br/>

    Note 7: If a supervision frame is received with a TLV2 at any point in time
    since this MAC address was added to the ProxyNodeTable, that MAC will
    continue being displayed as a DANP-RedBox, whether the same MAC appears in a
    TLV1 later on. The reason for this is that a RedBox may send both proxy
    supervision frames, in which case the RedBox' MAC address appears in TLV2,
    and it may send its own DANP supervision frames, in which case the RedBox'
    MAC address appears in TLV1, and there's no TLV2. So to avoid shifting the
    type back and forth, we make the DANP-RedBox type sticky.<br/>
  </dd>

  <dt>Data Rx</dt>
  <dd>
    Number of frames received on Port C from this MAC address. The number
    includes supervision frames only if the RedBox is in HSR-PRP mode and is
    configured <i>not</i> to translate PRP to HSR supervision frames, that is,
    the supervision frames are hardware-forwarded.
  </dd>

  <dt>Data Last Seen</dt>
  <dd>
    Number of seconds ago this MAC address was last seen on Port C.
    <br/>

    This field is only valid if the number of received frames is non-zero.
    Otherwise a dash ('-') is shown. An entry can be added by software if a
    supervision frame is received on that entry's behalf although no data
    frames have been received from that entry (management MAC address and
    other MAC addresses in HSR-PRP mode).<br/>

    The value is a rough estimate. Hardware only has a limited number of levels
    of 'last seen', so software attempts to tune this to a better granularity
    based on the first time software sees this entry and its current hardware
    level.
  </dd>

  <dt>Rx Wrong LAN</dt>
  <dd>
    Number of frames with wrong LanId received on this LRE port.<br/>

    This is only relevant in HSR-PRP mode, and will be shown with a dash ('-')
    if the RedBox is in another mode.<br/>

    It counts if a DANP's RCT indicates LAN-B, but the RedBox is configured with
    LanId A and vice versa. Unfortunately it also counts for SANs.
  </dd>

  <dt>Supervision Rx</dt>
  <dd>
    Number of supervision frames received on Port C. This is only valid in
    HSR-PRP mode and will be shown as a dash ('-') in other modes.
  </dd>

  <dt>Supervision Tx</dt>
  <dd>
    Number of proxied supervision frames transmitted on behalf of VDANx and
    RedBox' own MAC address (DANx-RedBox).<br/>

    In HSR-PRP mode, the RedBox also transmits supervision frames towards the
    PRP network for the RedBox itself (only). These are also counted here.
  </dd>

  <dt>Supervision Last Seen</dt>
  <dd>
    Number of seconds ago a supervision frame on behalf of this MAC address was
    last seen on Port C.<br/>

    This field is only valid in HSR-PRP mode and if the number of received
    supervision frames is non-zero. Otherwise a dash ('-') is shown.<br/>

    If it is more than the ProxyNodeTable age time seconds ago a supervision
    frame was received for this MAC address and no data frames have been
    received within this amount of time, the entry ages out.
  </dd>

  <dt>Supervision Last Type</dt>
  <dd>
    Indicates the frame type of the last received supervision frame. If no
    supervision frames have been received, a dash ('-') is shown.<br/>

    This is also only valid in HSR-PRP mode.
  </dd>
</dl>

<h2>Buttons</h2>
<p>Auto-refresh<input type="checkbox">:   Check this box to refresh the page automatically.</p>
<p><input type="button" value="Refresh">: Click to refresh the page immediately.</p>
<p><input type="button" value="Clear">:   Click to clear the ProxyNodeTable for the selected instance.</p>

</body>
</html>

