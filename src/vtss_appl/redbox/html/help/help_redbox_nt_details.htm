<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
 Copyright (c) 2006-2023 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.
-->

<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <title>Detailed RedBox NodesTable Help</title>
 <link href="/lib/normal.css"   rel="stylesheet" type="text/css">
 <link href="/lib/help.css"     rel="stylesheet" type="text/css">
 <script type="text/javascript" src="/lib/config.js"></script>
 <script type="text/javascript" src="/lib/mootools-core.js"></script>
 <script type="text/javascript" src="/lib/dynforms.js"></script>
 <script type="text/javascript" src="/lib/ajax.js"></script>
 <script type="text/javascript" src="/lib/spom.js"></script>
 <script type="text/javascript" src="/lib/format.js"></script>
 <script type="text/javascript" src="/lib/json.js"></script>
 <script type="text/javascript" src="../redbox_lib.js"></script>
 <script type="text/javascript" language="JavaScript">

/******************************************************************************/
// add_header()
/******************************************************************************/
function add_header(table_rows)
{
    var row;

    // 1st row (numbers are colspan, rowspan)
    row = {fields: [
              {type: "disp_hdr", params: ["Supervision frame received", 1, 2]},
              {type: "disp_hdr", params: ["H/W Type",                   1, 2]},
              {type: "disp_hdr", params: ["Mode",                       2, 1]},
              {type: "disp_hdr", params: ["Notes",                      1, 2]}]
          };

    table_rows.push(row);

    // 2nd row
    row = {fields: [
              {type: "disp_hdr", params: ["PRP-SAN", 1, 1]},
              {type: "disp_hdr", params: ["HSR-xxx", 1, 1]}]
          };

    table_rows.push(row);
}

/******************************************************************************/
// add_dscr_row()
/******************************************************************************/
function add_dscr_row(sv, hw_type, prp_san, hsr_xxx, notes)
{
    var row;

    row = {fields: [
              {type: "text",  params: [sv,      "cl"]},
              {type: "text",  params: [hw_type, "cl"]},
              {type: "text",  params: [prp_san, "cl"]},
              {type: "text",  params: [hsr_xxx, "cl"]},
              {type: "text",  params: [notes,   "cl"]}]
          };

    return row;
}

/******************************************************************************/
// add_dscr_rows()
/******************************************************************************/
function add_dscr_rows(table_rows)
{
    table_rows.push(add_dscr_row("No",                     "SAN", "SAN",         "DANH",        ""));
    table_rows.push(add_dscr_row("No",                     "DAN", "DANP",        "DANH",        ""));
    table_rows.push(add_dscr_row("TLV1, TLV2 not present", "DAN", "DANP",        "DANH",        "1, 2"));
    table_rows.push(add_dscr_row("TLV1, TLV2 present",     "DAN", "VDANP",       "VDANH",       "1, 2, 3"));
    table_rows.push(add_dscr_row("TLV2",                   "DAN", "DANP-RedBox", "DANH-RedBox", "1, 2"));
}

/******************************************************************************/
// add_rows()
/******************************************************************************/
function add_rows()
{
    table_rows = new Array();

    add_header(table_rows);
    add_dscr_rows(table_rows);

    return table_rows;
}

/******************************************************************************/
// window::domready()
/******************************************************************************/
window.addEvent('domready', function() {
    var nodetypeTable = new DynamicTable("nodetypeTableContent", "display");

    nodetypeTable.addRows(add_rows());
    nodetypeTable.update();
});

 </script>
</head>

<body>
<h1>Detailed RedBox NodesTable Help</h1>

<p>This page shows detailed NodesTable contents for a given
<a href="glossary.htm#RedBox" class="glossary">RedBox</a> instance.</p>

At the top right corner, the page offers a drop-down list, where any of the
creatable RedBox instances can be selected. If selecting an instance that is not
created, a single line spanning all columns will show 'Not created'. If
selecting an instance that is created, but not enabled, a single line spanning
all columns will show 'Inactive'.<br/>

Next to the selected instance drop-down list, is another drop-downlist, which
allows for selecting whether to show all MAC addresses or only show those with a
non-zero Rx Wrong LAN for Port A or Port B. This option only makes sense when
the RedBox is in PRP-SAN mode, because that's the only mode in which an RCT is
used on the LRE ports. Using this option allows for quickly finding those DANPs
that are misconfigured or wrongly connected to the PRP network.

The NodesTable holds information about the source MAC addresses of frames
received on <a href="glossary.htm#LRE" class="glossary">LRE</a> ports.<br/>

The following explains the columns of the table.

<dl>
  <dt>MAC Address</dt>
  <dd>
    The MAC address that this row is showing information about.
  </dd>

  <dt>Node Type</dt>
  <dd>
    The RedBox detects and names the node after the RedBox' mode of operation
    and reception of supervision frames on the LRE ports that relate to that
    node.<br/><br/>

    Hardware knows whether a given node is a
    <a href="glossary.htm#RedBox-SAN" class="glossary">SAN</a> or a
    <a href="glossary.htm#RedBox-DAN" class="glossary">DAN</a>. The first
    encounter of a new MAC address causes hardware to add it as a SAN (in HSR
    modes, this doesn't matter, because there is no such thing as a SAN on the
    HSR ring). If the same frame is received on both Port A and Port B, hardware
    automatically updates the entry to a DAN.<br/>

    Software may refine what it finds in the NodesTable by the reception of
    supervision frames on the LRE ports.<br/>

    Supervision frames always contain a TLV1, and if the supervision frame is
    sent by a RedBox on behalf of a SAN, it also contains a TLV2 with that
    RedBox' MAC address. This information is used to build the Node Type
    displayed on this page.<br/>

    The following table summarizes the Node Types that can be shown based on
    whether supervision frames have been received and whether that supervision
    frame had a TLV2 and whether the MAC address stems from TLV1.MAC or
    TLV2.MAC.<br/><br/>

    <div id="nodetypeTableContent"></div>

    <br/>

    Note 1: If a supervision frame is received with a TLV2 at any point in time
    since this MAC address was added to the NodesTable, that MAC will continue
    being displayed as a DANx-RedBox, whether the same MAC appears in a TLV1
    later on. The reason for this is that a RedBox may send both proxy
    supervision frames, in which case the RedBox' MAC address appears in TLV2,
    and it may send its own DANx supervision frames, in which case the RedBox'
    MAC address appears in TLV1, and there's no TLV2. So to avoid shifting the
    type back and forth, we make the DANx-RedBox type sticky.<br/>

    Note 2: The hardware type is set by software to DAN.<br/>

    Note 3: It is impossible to detecte the real origin of a given VDAN
    node. As stated in the table, the IStaX software names the nodes in the
    NodesTable after the RedBox's mode (PRP-SAN or any HSR mode). However, a
    given VDANx node may not really be of the specified type (VDANP or VDANH).
    As an example, consider an HSR ring, where we are attached with a RedBox in
    any HSR mode. Suppose another RedBox in HSR-PRP mode is connected to the
    same ring. Nodes connected behind that other RedBox are really VDANPs
    (unless yet another HSR-PRP RedBox connects another HSR ring) and not VDANHs
    as stated in the table. A similar argument can be made for a RedBox in
    PRP-SAN mode.
  </dd>

  <dt>Forward</dt>
  <dd>
    Indicates whether hardware will forward frames destined to this MAC address
    on Port A, Port B (SANs) or both (DANs).<br/>

    This is only relevant in PRP-SAN mode, and will be shown with a dash ('-')
    if the RedBox is in another mode.<br/>
  </dd>

  <dt>Data Rx Port A/B</dt>
  <dd>
    Number of frames received on this LRE port.
  </dd>

  <dt>Data Last Seen Port A/B</dt>
  <dd>
    Number of seconds ago this MAC address was last seen on this LRE port.
    <br/>

    This field is only valid if the number of received frames is non-zero.
    Otherwise a dash ('-') is shown. An entry can be added by software if a
    supervision frame is received on that entry's behalf although no data
    frames have been received from that entry.<br/>

    The value is a rough estimate. Hardware only has a limited number of levels
    of 'last seen', so software attempts to tune this to a better granularity
    based on the first time software sees this entry and its current hardware
    level.
  </dd>

  <dt>Rx Wrong LAN Port A/B</dt>
  <dd>
    Number of frames with wrong LanId received on this LRE port.<br/>

    This is only relevant in PRP-SAN mode, and will be shown with a dash ('-')
    if the RedBox is in another mode.<br/>

    It counts if a DANP's RCT indicates LAN-B, but the frame is received on Port
    A and vice versa.
  </dd>

  <dt>Supervision Rx Port A/B</dt>
  <dd>
    Number of supervision frames received on this LRE port. Only valid and
    non-filtered supervision frames participate in this process.
  </dd>

  <dt>Supervision Last Seen Port A/B</dt>
  <dd>
    Number of seconds ago a supervision frame on behalf of this MAC address was
    last seen on this LRE port.<br/>

    This field is only valid if the number of received supervision frames is
    non-zero. Otherwise a dash ('-') is shown.<br/>

    If it is more than the NodesTable age time seconds ago a supervision frame
    was received for this MAC address and no data frames have been received
    within this amount of time, the entry ages out.
  </dd>

  <dt>Supervision Last Type Port A/B</dt>
  <dd>
    Indicates the frame type of the last received supervision frame. If no
    supervision frames have been received, a dash ('-') is shown.
  </dd>
</dl>

<h2>Buttons</h2>
<p>Auto-refresh<input type="checkbox">: Check this box to refresh the page automatically.</p>
<p><input type="button" value="Refresh">: Click to refresh the page immediately.</p>
<p><input type="button" value="Clear">: Click to clear the NodesTable for the selected instance.</p>

</body>
</html>

