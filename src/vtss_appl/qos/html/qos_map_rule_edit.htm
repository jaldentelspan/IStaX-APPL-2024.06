<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--

 Copyright (c) 2006-2022 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.

-->
<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <title>QoS Map Rule Configuration</title>
 <link href="lib/normal.css" rel="stylesheet" type="text/css">
 <script type="text/javascript" src="lib/config.js"></script>
 <script type="text/javascript" src="lib/ajax.js"></script>
 <script type="text/javascript" src="lib/dynforms.js"></script>
 <script type="text/javascript" src="lib/validate.js"></script>
 <script type="text/javascript">

// Help page magic
var help_page = "/help/help_qos_map_rule_edit.htm";

var pageMapType = 0;
var pageSelectMapId = 0;
var pageKeyType = 0;
var pageRuleEditFlag = 0;
var pageSelectRuleId1 = 0;
var pageSelectRuleId2 = 0;
var pageArgs = searchArgs(window.location.search);
var pageArgsName = 'selectMapType';
if (pageArgs[pageArgsName]) {
    pageMapType = parseInt(pageArgs[pageArgsName], 10);
}
pageArgsName = 'selectMapId';
if (pageArgs[pageArgsName]) {
    pageSelectMapId = parseInt(pageArgs[pageArgsName], 10);
}
pageArgsName = 'selectKeyType';
if (pageArgs[pageArgsName]) {
    pageKeyType = parseInt(pageArgs[pageArgsName], 10);
}
pageArgsName = 'ruleEditFlag';
if (pageArgs[pageArgsName]) {
    pageRuleEditFlag = parseInt(pageArgs[pageArgsName], 10);
}
pageArgsName = 'selectRuleId1';
if (pageArgs[pageArgsName]) {
    pageSelectRuleId1 = parseInt(pageArgs[pageArgsName], 10);
}pageArgsName = 'selectRuleId2';
if (pageArgs[pageArgsName]) {
    pageSelectRuleId2 = parseInt(pageArgs[pageArgsName], 10);
}

var ruleEditReq;
var singleMapConfigData;

var style_width = "100%";
var ruleDataTable = Array("ruleData_Key", "ruleData_Action");

var idx = 0;
var idx_key1     = idx++;
var idx_key2     = idx++;
var idx_action_1 = idx++;
var idx_action_2 = idx++;
var idx_action_3 = idx++;
var idx_action_4 = idx++;
var idx_action_5 = idx++;
var idx_action_6 = idx++;
var idx_action_7 = idx++;

function updateIdxs()
{
    idx = 0;
    if (pageKeyType == 2) {
        if (pageMapType === 0) {
            idx_key1     = idx++;
            idx_action_1 = idx++;
            idx_action_2 = idx++;
            idx_action_3 = idx++;
            idx_action_4 = idx++;
            idx_action_5 = idx++;
            idx_action_6 = idx++;
            idx_action_7 = idx++;
        }
    }
}

function updateHelpPage()
{
    help_page = "/help/help_qos_map_rule_edit.htm?selectMapType=" + pageMapType + "&selectKeyType=" + pageKeyType;
}

var oTpcp = genArrayStr(0, 7);
var oVpcp = genArrayInt(0, 7);
var oTdei = genArrayStr(0, 1);
var oVdei = genArrayInt(0, 1);
var oTclass  = genArrayStr(0, 7);
var oVclass  = genArrayInt(0, 7);
var oTdpl = genArrayStr(0, configQosDplMax);
var oVdpl = genArrayInt(0, configQosDplMax);
var oTdscp = configQosDscpNames;
var oVdscp = genArrayInt(0,63);

function addRow(frag, values, ref)
{
    var tr, td, i;

    switch (ref) {
    case "ruleData_Key":
        //qos_ingress_map_key
        if (pageKeyType == 1) {
            if (pageMapType === 0) {
                tr = document.createElement("tr");
                addLabelTextCell(tr, "PCP", "param_label", "qos_rule_key1");
                td = addSelectCell(tr, oTpcp, oVpcp, parseInt(values[idx_key1], 10), "cl", "rule_key1", style_width);
                if (pageRuleEditFlag == 3) {
                    td.disabled = true;
                }
                frag.appendChild(tr);
                tr = document.createElement("tr");
                addLabelTextCell(tr, "DEI", "param_label", "qos_rule_key2");
                td = addSelectCell(tr, oTdei, oVdei, parseInt(values[idx_key2], 10), "cl", "rule_key2", style_width);
                if (pageRuleEditFlag == 3) {
                    td.disabled = true;
                }
                frag.appendChild(tr);
            } else {
                tr = document.createElement("tr");
                addLabelTextCell(tr, "CoS ID", "param_label", "qos_rule_key1");
                td = addSelectCell(tr, oTclass, oVclass, parseInt(values[idx_key1], 10), "cl", "rule_key1", style_width);
                if (pageRuleEditFlag == 3) {
                    td.disabled = true;
                }
                frag.appendChild(tr);
                tr = document.createElement("tr");
                addLabelTextCell(tr, "DPL", "param_label", "qos_rule_key2");
                td = addSelectCell(tr, oTdpl, oVdpl, parseInt(values[idx_key2], 10), "cl", "rule_key2", style_width);
                if (pageRuleEditFlag == 3) {
                    td.disabled = true;
                }
                frag.appendChild(tr);
            }
        } else if (pageKeyType == 2) {
            if (pageMapType === 0) {
                tr = document.createElement("tr");
                addLabelTextCell(tr, "DSCP", "param_label", "qos_rule_key1");
                td = addSelectCell(tr, oTdscp, oVdscp, parseInt(values[idx_key1], 10), "cl", "rule_key1", style_width);
                if (pageRuleEditFlag == 3) {
                    td.disabled = true;
                }
                frag.appendChild(tr);
            } else {
                tr = document.createElement("tr");
                addLabelTextCell(tr, "DSCP", "param_label", "qos_rule_key1");
                td = addSelectCell(tr, oTdscp, oVdscp, parseInt(values[idx_key1], 10), "cl", "rule_key1", style_width);
                if (pageRuleEditFlag == 3) {
                    td.disabled = true;
                }
                frag.appendChild(tr);
                tr = document.createElement("tr");
                addLabelTextCell(tr, "DPL", "param_label", "qos_rule_key2");
                td = addSelectCell(tr, oTdpl, oVdpl, parseInt(values[idx_key2], 10), "cl", "rule_key2", style_width);
                if (pageRuleEditFlag == 3) {
                    td.disabled = true;
                }
                frag.appendChild(tr);
            }
        }
        break;
    case "ruleData_Action":
        //qos_ingress_map_action
        if (pageMapType === 0) {
            tr = document.createElement("tr");
            addLabelTextCell(tr, "CoS", "param_label", "act_cos");
            addSelectCell(tr, oTclass, oVclass, parseInt(values[idx_action_1], 10), "cl", "act_cos_sel", style_width);
            frag.appendChild(tr);
            tr = document.createElement("tr");
            addLabelTextCell(tr, "DPL", "param_label", "act_dpl");
            addSelectCell(tr, oTdpl, oVdpl, parseInt(values[idx_action_2], 10), "cl", "act_dpl_sel", style_width);
            frag.appendChild(tr);
            tr = document.createElement("tr");
            addLabelTextCell(tr, "PCP", "param_label", "act_pcp");
            addSelectCell(tr, oTpcp, oVpcp, parseInt(values[idx_action_3], 10), "cl", "act_pcp_sel", style_width);
            frag.appendChild(tr);
            tr = document.createElement("tr");
            addLabelTextCell(tr, "DEI", "param_label", "act_dei");
            addSelectCell(tr, oTdei, oVdei, parseInt(values[idx_action_4], 10), "cl", "act_dei_sel", style_width);
            frag.appendChild(tr);
            tr = document.createElement("tr");
            addLabelTextCell(tr, "DSCP", "param_label", "act_dscp");
            addSelectCell(tr, oTdscp, oVdscp, parseInt(values[idx_action_5], 10), "cl", "act_dscp_sel", style_width);
            frag.appendChild(tr);
            tr = document.createElement("tr");
            addLabelTextCell(tr, "CoS ID", "param_label", "act_cosid");
            addSelectCell(tr, oTclass, oVclass, parseInt(values[idx_action_6], 10), "cl", "act_cosid_sel", style_width);
            frag.appendChild(tr);
        } else {
            tr = document.createElement("tr");
            addLabelTextCell(tr, "PCP", "param_label", "act_pcp");
            addSelectCell(tr, oTpcp, oVpcp, parseInt(values[idx_action_1], 10), "cl", "act_pcp_sel", style_width);
            frag.appendChild(tr);
            tr = document.createElement("tr");
            addLabelTextCell(tr, "DEI", "param_label", "act_dei");
            addSelectCell(tr, oTdei, oVdei, parseInt(values[idx_action_2], 10), "cl", "act_dei_sel", style_width);
            frag.appendChild(tr);
            tr = document.createElement("tr");
            addLabelTextCell(tr, "DSCP", "param_label", "act_dscp");
            addSelectCell(tr, oTdscp, oVdscp, parseInt(values[idx_action_3], 10), "cl", "act_dscp_sel", style_width);
            frag.appendChild(tr);
        }
        break;
    default:
        return;
    }
}

function ruleReset()
{
    processUpdate(ruleEditReq, null);
}

function ruleSubmit()
{
    if (pageMapType === 0 &&
        document.getElementById("act_cos_sel").value == "0" &&
        document.getElementById("act_dpl_sel").value == "0" &&
        document.getElementById("act_pcp_sel").value == "0" &&
        document.getElementById("act_dei_sel").value == "0" &&
        document.getElementById("act_dscp_sel").value == "0" &&
        document.getElementById("act_cosid_sel").value == "0") {
        alert("At least one configured value is not zero");
        return false;
    } else if (pageMapType === 1 &&
        document.getElementById("act_pcp_sel").value == "0" &&
        document.getElementById("act_dei_sel").value == "0" &&
        document.getElementById("act_dscp_sel").value == "0") {
        alert("At least one configured value is not zero");
        return false;
    }    

    document.getElementById("buttons").style.visibility = "hidden";
    if (pageKeyType == 1) {
        document.getElementById("rule_key1").disabled = false;
        document.getElementById("rule_key2").disabled = false;
    } else {
        document.getElementById("rule_key1").disabled = false;
    }
    document.ruleConfigForm.submit();
    return true;
}

function ruleCancel()
{
    document.location.href = "qos_map_rule.htm?selectMapType=" + pageMapType +  "&selectMapId=" + pageSelectMapId;
}

function processUpdate(req, ref)
{
    /* Format:
         * info       :== <map_type>#<map_id>#<key_type>#<rule x>
         *   rule x   :== <key>/<action>
         *     key    :== <par1>/<par2> (pcp-dei, dscp, cosid-dpl, dscp-dpl)
         *     action :== <act1>/<act2>/...  (cos/dpl/pcp/dei/dscp/cosid OR pcp/dei/dscp)
         *
         * map_type           :== 0..1 // Ingress, Egress
         * map_id             :== 0..VTSS_APPL_QOS_INGRESS_MAP_MAX or 0..VTSS_APPL_QOS_EGRESS_MAP_MAX
         * key_type           :== 0..1 // Par1 or Par2
         */
    if (req.responseText) {
        ruleEditReq = req;

        var cfg = req.responseText.split("#");

        pageMapType = parseInt(cfg[0], 10);
        document.getElementById("selectMapType").value = pageMapType;
        if (pageMapType === 0) {
            UpdateId("displayMapType", "Ingress");
            UpdateId("displayMapType2", "Ingress");
            UpdateId("displayMapType3", "Ingress");
        } else {
            UpdateId("displayMapType", "Egress");
            UpdateId("displayMapType2", "Egress");
            UpdateId("displayMapType3", "Egress");
        }

        pageSelectMapId = parseInt(cfg[1], 10);
        document.getElementById("selectMapId").value = pageSelectMapId;
        UpdateId("displayMapId", "Map " + pageSelectMapId);

        pageKeyType = parseInt(cfg[2], 10);
        document.getElementById("selectKeyType").value = pageKeyType;
        updateIdxs();
        updateHelpPage();

        var ruleConfig = cfg[3].split("/");
        for (var i = 0; i < ruleDataTable.length; i++) {
            var frag = document.createDocumentFragment();
            ref = ruleDataTable[i];
            addRow(frag, ruleConfig, ref);
            var tbody = document.getElementById(ref);
            clearChildNodes(tbody);
            if (!tbody.appendChild(frag)) { // Add Frag to table body
                alert("This browser doesn't support dynamic tables.");
            }
        }
    } else {
        if (pageMapType === 0) {
            document.location.href = "qos_ingress_map.htm";
        } else {
            document.location.href = "qos_egress_map.htm";
        }
    }
}

function requestUpdate()
{
    if (pageKeyType == 1) {
        loadXMLDoc("/config/qos_map_rule_edit?selectMapType=" + pageMapType + "&selectMapId=" + pageSelectMapId + "&ruleEditFlag=" + pageRuleEditFlag + "&selectKeyType=" + pageKeyType + "&selectRuleId1=" + pageSelectRuleId1, processUpdate, null);
    } else if (pageKeyType == 2) {
        loadXMLDoc("/config/qos_map_rule_edit?selectMapType=" + pageMapType + "&selectMapId=" + pageSelectMapId + "&ruleEditFlag=" + pageRuleEditFlag + "&selectKeyType=" + pageKeyType + "&selectRuleId2=" + pageSelectRuleId2, processUpdate, null);
    }
}

 </script>
</head>

<body class="content" onload="requestUpdate();">
<form name="ruleConfigForm" method="POST" action="/config/qos_map_rule_edit">

<h1><span id="displayMapType"></span> <span id="displayMapId"></span> Rule Configuration</h1>

<h1><span id="displayMapType2"></span> Rule Key</h1>
<table summary="Rule Key" class="config">
    <tbody id="ruleData_Key">
    </tbody>
</table>

<h1>&nbsp;</h1>
<h1><span id="displayMapType3"></span> Rule Action</h1>
<table summary="Rule Action" class="config">
    <tbody id="ruleData_Action">
    </tbody>
</table>

<p id="buttons">
<input type="button" value="Submit" onclick="ruleSubmit();">
<input type="button" value="Reset" onclick="ruleReset();">
<input type="button" value="Cancel" onclick="ruleCancel();">
</p>

<p>
  <input type="hidden" id="selectMapType" name="selectMapType">
  <input type="hidden" id="selectMapId" name="selectMapId">
  <input type="hidden" id="selectKeyType" name="selectKeyType">
</p>

</form>
</body>
</html>


<!--
    local variables:
    mode: java
    c-basic-offset: 4
    tab-width: 8
    c-comment-only-line-offset: 0
    end:
-->
