<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--

 Copyright (c) 2006-2022 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.

-->
<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <title>QoS Egress Port Scheduler and Shapers Config Help</title>
 <link href="/lib/help.css" rel="stylesheet" type="text/css">
 <script type="text/javascript" src="/lib/config.js"></script>
 <script type="text/javascript" src="/lib/mootools-core.js"></script>
 <script type="text/javascript" src="/lib/qos_util.js"></script>
 <script type="text/javascript" language="JavaScript">
   window.addEvent('domready', function() {
     var min = qos_rate_min(configQosPortShaperBitRateMin, configQosPortShaperFrameRateMin);
     var max = qos_rate_max(configQosPortShaperBitRateMax, configQosPortShaperFrameRateMax);
     var max_div_1000 = Math.floor(max / 1000);

     $$('span.ps_rate_min').set('text', min);
     $$('span.ps_rate_max').set('text', max);
     $$('span.ps_rate_max_div_1000').set('text', max_div_1000);

     if (configQosPortShaperBitRateMax && configQosPortShaperFrameRateMax) {
       $$('span.ps_rate_unit').set('text', 'kbps, Mbps, fps or kfps');
       $$('span.ps_rate_unit_low').set('text', 'kbps or fps');
       $$('span.ps_rate_unit_high').set('text', 'Mbps or kfps');
     } else if (configQosPortShaperBitRateMax) {
       $$('span.ps_rate_unit').set('text', 'kbps or Mbps');
       $$('span.ps_rate_unit_low').set('text', 'kbps');
       $$('span.ps_rate_unit_high').set('text', 'Mbps');
     } else if (configQosPortShaperFrameRateMax) {
       $$('span.ps_rate_unit').set('text', 'fps or kfps');
       $$('span.ps_rate_unit_low').set('text', 'fps');
       $$('span.ps_rate_unit_high').set('text', 'kfps');
     }

     min = qos_rate_min(configQosQueueShaperBitRateMin, configQosQueueShaperFrameRateMin);
     max = qos_rate_max(configQosQueueShaperBitRateMax, configQosQueueShaperFrameRateMax);
     max_div_1000 = Math.floor(max / 1000);

     $$('span.qs_rate_min').set('text', min);
     $$('span.qs_rate_max').set('text', max);
     $$('span.qs_rate_max_div_1000').set('text', max_div_1000);

     if (configQosQueueShaperBitRateMax && configQosQueueShaperFrameRateMax) {
       $$('span.qs_rate_unit').set('text', 'kbps, Mbps, fps or kfps');
       $$('span.qs_rate_unit_low').set('text', 'kbps or fps');
       $$('span.qs_rate_unit_high').set('text', 'Mbps or kfps');
     } else if (configQosQueueShaperBitRateMax) {
       $$('span.qs_rate_unit').set('text', 'kbps or Mbps');
       $$('span.qs_rate_unit_low').set('text', 'kbps');
       $$('span.qs_rate_unit_high').set('text', 'Mbps');
     } else if (configQosQueueShaperFrameRateMax) {
       $$('span.qs_rate_unit').set('text', 'fps or kfps');
       $$('span.qs_rate_unit_low').set('text', 'fps');
       $$('span.qs_rate_unit_high').set('text', 'kfps');
     }
   });
 </script>
</head>

<body>

<h1>QoS Egress Port Scheduler and Shapers Config Help</h1>

<p>This page allows you to configure the Scheduler and Shapers for a specific port.</p>

<p class="SPOM_only">The settings relate to the currently selected stack unit, as reflected by the page header.</p>

<p>The displayed settings are:</p>

<dl>
 <dt>Scheduler Mode</dt>
 <dd>Controls how many of the queues are scheduled as strict and how many are scheduled as weighted on this switch port.</dd>

 <dt>Queue Shaper Enable</dt>
 <dd>Controls whether the queue shaper is enabled for this queue on this switch port.

 <dt>Queue Shaper Rate</dt>
 <dd>Controls the rate for the queue shaper.
     This value is restricted to <span class="qs_rate_min">?</span>-<span class="qs_rate_max">?</span> when "Unit" is <span class="qs_rate_unit_low">?</span>,
     and 1-<span class="qs_rate_max_div_1000">?</span> when "Unit" is <span class="qs_rate_unit_high">?</span>.
     The rate is internally rounded up to the nearest value supported by the queue shaper.</dd>

 <dt>Queue Shaper Unit</dt>
 <dd>Controls the unit of measure for the queue shaper rate as <span class="qs_rate_unit">?</span>.

 <dt class="has_qos_shapers_rt">Queue Shaper Rate-type</dt>
 <dd class="has_qos_shapers_rt">
     The rate type of the queue shaper. The allowed values are:
     <br><samp>Line</samp>: Specify that this shaper operates on line rate.
     <br><samp>Data</samp>: Specify that this shaper operates on data rate.
 </dd>

 <dt class="has_qos_queue_shapers_eb">Queue Shaper Excess</dt>
 <dd class="has_qos_queue_shapers_eb">Controls whether the queue is allowed to use excess bandwidth.

 <dt class="has_qos_queue_shapers_crb">Queue Shaper Credit</dt>
 <dd class="has_qos_queue_shapers_crb">Controls whether the queue has credit-based shaper enabled.

 <dt class="has_qos_queue_cut_through">Queue Scheduler Cut-through</dt>
 <dd class="has_qos_queue_cut_through">Controls whether the queue has cut-through enabled.</dd>

 <dt class="has_qos_frame_preemption">Queue Scheduler Preemption</dt>
 <dd class="has_qos_frame_preemption">Controls whether the queue has frame preemption enabled.</dd>

 <dt>Queue Scheduler Weight</dt>
 <dd>Controls the weight for this queue.
     This value is restricted to 1-100.
     This parameter is only shown if "Scheduler Mode" is set to "Weighted".</dd>

 <dt>Queue Scheduler Percent</dt>
 <dd>Shows the weight in percent for this queue.
     This parameter is only shown if "Scheduler Mode" is set to "Weighted".</dd>

 <dt>Port Shaper Enable</dt>
 <dd>Controls whether the port shaper is enabled for this switch port.

 <dt>Port Shaper Rate</dt>
 <dd>Controls the rate for the port shaper.
     This value is restricted to <span class="ps_rate_min">?</span>-<span class="ps_rate_max">?</span> when "Unit" is <span class="ps_rate_unit_low">?</span>,
     and 1-<span class="ps_rate_max_div_1000">?</span> when "Unit" is <span class="ps_rate_unit_high">?</span>.
     The rate is internally rounded up to the nearest value supported by the port shaper.</dd>

 <dt>Port Shaper Unit</dt>
 <dd>Controls the unit of measure for the port shaper rate as <span class="ps_rate_unit">?</span>.

 <dt class="has_qos_shapers_rt">Port Shaper Rate-type</dt>
 <dd class="has_qos_shapers_rt">
     The rate type of the port shaper. The allowed values are:
     <br><samp>Line</samp>: Specify that this shaper operates on line rate.
     <br><samp>Data</samp>: Specify that this shaper operates on data rate.
 </dd>
     
 </dl>

<h2>Buttons</h2>
<p><input type="button" value="Save">: Click to save changes.</p>
<p><input type="button" value="Reset">: Click to undo any changes made locally and revert to previously saved values.</p>
<p><input type="button" value="Back">: Click to undo any changes made locally and return to the previous page.</p>

</body>
</html>
