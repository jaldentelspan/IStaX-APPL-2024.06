<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--

 Copyright (c) 2006-2022 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.

-->
<html>

<head>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <title>HTTPS Configuration</title>
 <link href="lib/normal.css" rel="stylesheet" type="text/css">
 <script type="text/javascript" src="lib/ajax.js"></script>
 <script type="text/javascript" src="lib/config.js"></script>
 <script type="text/javascript" src="lib/dynforms.js"></script>
 <script type="text/javascript">

// Help page magic
var help_page = "/help/help_https_config.htm";

var reqObject;
var httpsMode = 0, httpsRedirectMode = 0;
var oTMode = Array("Disabled", "Enabled");
var oVMode = Array(0, 1);
var oTCertAction    = Array("None", "Delete", "Upload", "Generate");
var oVCertAction    = Array(0, 1, 2, 3);
var oTCertUpload    = Array("Web Browser", "URL");
var oVCertUpload    = Array(0, 1);
var certStatus = 255;

function checkForm()
{
    var td;
    if ((httpsMode || document.getElementById("https_mode").value == 1) &&
            (oTCertAction[parseInt(document.getElementById("cert_maintain").value, 10)] != "None")) {
        alert("'Certificate Maintain' can't be executed if HTTPS is enabled");
        return false;
    }

    if (oTMode[parseInt(document.getElementById("https_mode").selectedIndex, 10)] == "Enabled" &&
            certStatus !== 0 ) {
        alert("Certificate isn't presented");
        return false;
    }

    if (httpsMode === 0 && httpsMode != document.getElementById("https_mode").value && document.getElementById("https_redirect").value == 1) {
        alert("Not allow to enable the HTTPS and automatic redirect mode at the same time, please enable the HTTPS mode first.");
        return false;
    }

    td = document.getElementById("cert_url_upload");
    if (td.disabled === false && td.value === "") {
        alert("URL is empty");
        return false;
    }

    td = document.getElementById("cert_file_upload");
    if (td.disabled === false && td.value === "") {
        alert("file is empty");
        return false;
    }

    document.getElementById("submitbutton").disabled = true;
    if (httpsMode === 0 && document.getElementById("https_mode").value == 1 && document.getElementById("https_redirect").value == 1) {
        alert("Notice that the browser may not allow the redirect operation due to the security consideration unless the switch certificate is trusted to the browser. You need to initialize the HTTPS connection manually under this case.");
    }

    return true;
}

function changeMode()
{
    if (this.value == 1) {
        document.getElementById("https_redirect").disabled = false;
        UpdateIdSelect("https_redirect", oTMode, oVMode, httpsRedirectMode);
    } else {
        UpdateIdSelect("https_redirect", oTMode, oVMode, 0);
        document.getElementById("https_redirect").disabled = true;
    }
}

function changeAction()
{
    if (oTCertAction[this.selectedIndex] == "Upload") {
        SetVisible("column_cert_passphrase", true);
        SetVisible("column_upload_method", true);
        document.getElementById("cert_passphrase").disabled = false;
        document.getElementById("cert_upload_method").disabled = false;
        if (document.getElementById("cert_upload_method").value == 1 ) {
            SetVisible("column_file_upload", false);
            SetVisible("column_url_upload", true);
            document.getElementById("cert_file_upload").disabled = true;
            document.getElementById("cert_url_upload").disabled = false;
        } else {
            SetVisible("column_file_upload", true);
            SetVisible("column_url_upload", false);
            document.getElementById("cert_file_upload").disabled = false;
            document.getElementById("cert_url_upload").disabled = true;
        }
    } else {
        SetVisible("column_cert_passphrase", false);
        SetVisible("column_upload_method", false);
        SetVisible("column_file_upload", false);
        SetVisible("column_url_upload", false);
        document.getElementById("cert_passphrase").disabled = true;
        document.getElementById("cert_upload_method").disabled = true;
        document.getElementById("cert_file_upload").disabled = true;
        document.getElementById("cert_url_upload").disabled = true;
    }
}


function changeUpload() {
    if (this.value == 1) {
        SetVisible("column_file_upload", false);
        SetVisible("column_url_upload", true);
        document.getElementById("cert_file_upload").disabled = true;
        document.getElementById("cert_url_upload").disabled = false;
    } else {
        SetVisible("column_file_upload", true);
        SetVisible("column_url_upload", false);
        document.getElementById("cert_file_upload").disabled = false;
        document.getElementById("cert_url_upload").disabled = true;
    }

}

function addRow(frag, values)
{
    //Format: [https_mode]/[https_redirect]/[cert_maintain]/[cert_passphrase]/
    //        [cert_upload_method]/[cert_url_upload]/[cert_status]/[cert_status_string]/
    //        [upload_result]/[upload_result_string]

    var tr, td;
    var mode = parseInt(values[0], 10);
    var redirectMode = parseInt(values[1], 10);
    var certAction = parseInt(values[2], 10);
    var certUploadMethod = parseInt(values[3], 10);
    var certGenAlgorithm = parseInt(values[4], 10);
    certStatus = parseInt(values[5], 10);


    //https_mode
    tr = document.createElement("tr");
    addTextCell(tr, "Mode", "param_label");
    td = addSelectCell(tr, oTMode, oVMode, mode, "cl", "https_mode", "100%");
    httpsMode = mode;
    td.onclick = changeMode;
    frag.appendChild(tr);

    //https_redirect
    tr = document.createElement("tr");
    addLabelTextCell(tr, "Automatic Redirect", "param_label", "https_redirect");
    td = addSelectCell(tr, oTMode, oVMode, redirectMode, "cl", "https_redirect", "100%");
    httpsRedirectMode = redirectMode;
    if (!httpsMode) {
        td.disabled = true;
    }
    frag.appendChild(tr);

    // Certificate Maintain
    tr = document.createElement("tr");
    addLabelTextCell(tr, "Certificate Maintain", "param_label", "cert_maintain");
    td = addSelectCell(tr, oTCertAction, oVCertAction, certAction, "cl", "cert_maintain", "100%");
    td.onchange = changeAction;
    frag.appendChild(tr);

    // Passphrase
    tr = CreateStyledElement("tr");
    tr.id = tr.name = "column_cert_passphrase";
    addLabelTextCell(tr, "Certificate Pass Phrase", "param_label", "cert_passphrase");
    td = addPasswordCell(tr, "", "cl", "cert_passphrase", 64, "100%");
    td.setAttribute("maxLength", 64);
    if (certAction == 2) {
        tr.style.display = "";
        td.disabled = false;
    } else {
        tr.style.display = "none";
        td.disabled = true;
    }
    frag.appendChild(tr);

    // Certificate Upload
    tr = CreateStyledElement("tr");
    tr.id = tr.name = "column_upload_method";
    addLabelTextCell(tr, "Certificate Upload", "param_label", "cert_upload_method");
    td = addSelectCell(tr, oTCertUpload, oVCertUpload, certUploadMethod, "cl", "cert_upload_method", "100%");
    td.onchange = changeUpload;
    if (certAction == 2) {
        tr.style.display = "";
        td.disabled = false;
    } else {
        tr.style.display = "none";
        td.disabled = true;
    }
    frag.appendChild(tr);

    // File Upload
    tr = CreateStyledElement("tr");
    tr.id = tr.name = "column_file_upload";
    addLabelTextCell(tr, "File Upload", "param_label", "cert_file_upload");
    var btn = document.createElement('input');
    btn.id = "cert_file_upload";
    btn.type = "file";
    btn.value = "";
    btn.name = "cert_data";
    if (certAction != 2 || certUploadMethod !== 0) {
        tr.style.display = "none";
        btn.disabled = true;
    } else {
        tr.style.display = "";
        btn.disabled = false;
    }
    td = CreateTd("cl");
    addCell(tr, td, btn);
    frag.appendChild(tr);

    // Upload URL
    tr = CreateStyledElement("tr");
    tr.id = tr.name = "column_url_upload";
    addLabelTextCell(tr, "URL", "param_label", "cert_url_upload");
    td = addInputCell(tr, "", "cl", "cert_url_upload", 64, 256, "100%");
    if (certAction != 2 || certUploadMethod != 1 ) {
        tr.style.display = "none";
        td.disabled = true;
    } else {
        tr.style.display = "";
        td.disabled = false;
    }
    frag.appendChild(tr);

    tr = CreateStyledElement("tr");
    addTextCell(tr, "Certificate Status", "param_label");
    if (certStatus == 2) {
        timerID = setTimeout('requestUpdate()', settingsRefreshInterval());
    }
    addTextCell(tr, values[6], "cl");
    frag.appendChild(tr);

    if (parseInt(values[7], 10) !== 0) {
        alert(values[8]);
    }

}

function processUpdate(req, ref)
{
    if (reqObject != req) {
        reqObject = req;
    }
    if (req.responseText) {
        var values = req.responseText.split("/");
        //var values = req.split("/");

        //create holder for accumulated tbody elements and text nodes
        var frag = document.createDocumentFragment();
        addRow(frag, values);

        var tbody = document.getElementById("tableData");
        clearChildNodes(tbody);
        if (!tbody.appendChild(frag)) { // Add Frag to table body
            alert("This browser doesn't support dynamic tables.");
        }
    }

}

function requestUpdate()
{
    //var req = "1/0";
    //processUpdate(req, null);
    loadXMLDoc("/config/https", processUpdate, null);
}

function genCert()
{
    var url = "/config/https?gen_cert=1";
    loadXMLDoc(url, processUpdate, "tableData");
}

function delCert()
{
    var url = "/config/https?del_cert=1";
    loadXMLDoc(url, processUpdate, "tableData");
}

function uploadCert()
{
    document.location.href = "upload.htm";
}

function httpsSubmit() {
    if (certStatus == 2 || !checkForm()) {
        return;
    }
    document.httpsUpload.submit();
}
 </script>
</head>

<body class="content" onload="requestUpdate();">

  <div class="refreshbar">
    <form action="#">
    <input type="button" value="Refresh" onclick="requestUpdate(); this.blur();"/>
    <img id="update" alt="" src="images/updating.gif"/>
   </form>
  </div>


<h1>HTTPS Configuration</h1>

<form name="httpsUpload" method="POST" action="/config/https" enctype="multipart/form-data">

<table summary="HTTPS Configuration" cellspacing="0" class="config">
 <tbody id="tableData">
 </tbody>
</table>

<p>
<input type="button" id="submitbutton" value="Save" onclick="httpsSubmit();">
<input type="reset" value="Reset" onclick="processUpdate(reqObject, 'tableData');">
</p>

</form>
</body>
</html>


<!--
    local variables:
    mode: java
    c-basic-offset: 4
    tab-width: 8
    c-comment-only-line-offset: 0
    end:
-->
