<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--

 Copyright (c) 2006-2022 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.

-->
<html>

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <title>RIP Interface Status</title>
    <link href="lib/normal.css" rel="stylesheet" type="text/css">
    <script type="text/javascript" src="lib/mootools-core.js"></script>
    <script type="text/javascript" src="lib/dynforms.js"></script>
    <script type="text/javascript" src="lib/validate.js"></script>
    <script type="text/javascript" src="lib/json.js"></script>
    <script type="text/javascript">
// Help page magic
var help_page = "/help/help_frr_rip_intf_status.htm";

// Global variables
var timerID; // For auto-refresh button

var myDynamicTable; // For dynamic table

var VerType = {
    "v1": "Version 1",
    "v2": "Version 2",
    "none": "None",
    "both": "Version 1 and 2"
};


function addHeader(table_rows) {
    var row;
    //1st row
    row = {
        fields: [
            { type: "disp_hdr", params: ["Interface"] },
            { type: "disp_hdr", params: ["Send Version"] },
            { type: "disp_hdr", params: ["Receive Version"] },
            { type: "disp_hdr", params: ["Triggered Update"] },
            { type: "disp_hdr", params: ["Passive"] },
            { type: "disp_hdr", params: ["Auth. Type"] },
            { type: "disp_hdr", params: ["Key-Chain Name"] }
        ]
    };
    table_rows.push(row);
}

function addRow(key, val, idx) {
    var string;

    row = {
        fields: [
            { type: "text", params: [key, "cr"] },
            { type: "text", params: [VerType[val.SendVersion], "cr"] },
            { type: "text", params: [VerType[val.RecvVersion], "cr"] },
            { type: "text", params: [val.TriggeredUpdate, "cr"] },
            { type: "text", params: [val.IsPassiveInterface, "cr"] },
            // ToDo - Authentication type
            { type: "text", params: ["", "cr"] },
            { type: "text", params: [val.KeyChainName, "cr"] }
    ]
    };

    return row;
}

/* Add table rows in the dynamic table */
function addRows(recv_json) {
    var row, empty_colspan = 7;
    var table_rows = new Array();

    // Add table header
    addHeader(table_rows);

    // Add single row
    Object.each(recv_json, function (record, idx) {
        table_rows.push(addRow(record.key, record.val, idx));
    });

    // Empty row (Display "No entry exists" when empty row)
    if (!recv_json.length) {
        table_rows.push({ fields: [{ type: "empty_row", params: [empty_colspan] }] });
    }

    return table_rows;
}

/* Process the received JSON data */
function processUpdate(recv_json, name) {
    // Ignore the process if no data is received
    if (!recv_json) {
        alert("processUpdate() failed: Get dynamic data failed.");
        return;
    }

    var myConf = Array();
    myConf = recv_json;

    // Save the received JSON data (both of the original and filted)
    myDynamicTable.saveRecvJson(name, myConf);
    myDynamicTable.saveRecvJson("original_" + name, recv_json); // For isDuplicatedRowKey()

    // Add table rows
    var table_rows = addRows(myConf);
    myDynamicTable.addRows(table_rows);

    // Update this dynamic table
    myDynamicTable.update();

    // Refresh timer
    var autorefresh = document.getElementById("autorefresh");
    if (autorefresh && autorefresh.checked) {
        if (timerID) {
            clearTimeout(timerID);
        }
        timerID = setTimeout('requestUpdate()', settingsRefreshInterval());
    }
}

/* Update the received HTML request */
function requestUpdate(recv_json, name) {
    // Restore table content
    myDynamicTable.restore();
    requestJsonDoc("rip.status.interface.get", null, processUpdate, "status");
}

function checkRefresh(fld) {
    if (fld.checked) {
        requestUpdate();
    } else if (timerID) {
        clearTimeout(timerID);
        timerID = null;
    }
}

/* Initialize resources when HTML document is ready */
window.addEvent('domready', function () {
    // Create a from with table body for receive/transmit JSON data
    myDynamicTable = new DynamicTable("myTableContent", "display");

    // To ensure the completed data, we request the configured data after the
    // instance data is received and it is requested only one time.
    requestUpdate();
});
    </script>
</head>

<body class="content">
    <h1>RIP Interface Status</h1>
    <div class="refreshbar">
        <label for="autorefresh">Auto-refresh</label>
        <input type="checkbox" name="autorefresh" id="autorefresh" onclick="checkRefresh(this);">
        <input type="button" value="Refresh" onClick='if(!checkForm()) {return false;} requestUpdate(); this.blur();'>
        <img id="update" alt="" src="images/updating.gif">
    </div>
    <div id="myTableContent"></div>
    <p>&nbsp;</p>
</body>

</html>
