<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--

 Copyright (c) 2006-2022 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.

-->
<html>

<head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
    <title>RIP Global Configuration Help</title>
    <link href="/lib/help.css" rel="stylesheet" type="text/css">
    <script type="text/javascript" src="/lib/mootools-core.js"></script>
    <script type="text/javascript" src="/lib/dynforms.js"></script>
    <script type="text/javascript" src="/lib/validate.js"></script>
    <script type="text/javascript" src="/lib/ajax.js"></script>
    <script type="text/javascript" src="/lib/json.js"></script>
    <script type="text/javascript" language="JavaScript">
// Global variables
var myCapabilities;

/* Update HTML table header description */
function processTableDesc(req) {
    if (!req.responseText) {
        return;
    }

    var json_spec = JSON.decode(req.responseText);

    // Update table description
    $("TableDesc").innerHTML = getJsonSpecElement(json_spec, "groups", "rip.config.router").description;
}

/* Update HTML table parameter description */
function processUpdate(recv_json) {
    // Update table description
    //$("TableDesc").innerHTML = getJsonSpecElement(recv_json, "groups", "rip.config.router").description;

    // Update table parameter description
    var param_names = [{
            "alias": "RIP Router Mode",
            "description": "Enable/Disable the RIP router mode." +
                "<br><samp>Enable<\/samp>: Enable the the RIP router mode." +
                "<br><samp>Disable<\/samp>: Disable the the RIP router mode."
        },
        {
            "alias": "Vesion",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "Version",
            "suffix": "<br><samp>Default<\/samp>: Base on the default version process." +
                "The router sends RIPv2 and accepts both RIPv1 and RIPv2. " +
                "When the router receives either version of REQUESTS or triggered " +
                "updates packets, it replies with the appropriate version." +
                "<br><samp>Version 1<\/samp>: Receive/Send RIPv1 only." +
                "<br><samp>Version 2<\/samp>: Receive/Send RIPv2 only."
        },
        {
            "alias": "Update Timer",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "UpdateTimer",
            "suffix": "The allowed range is " + myCapabilities.MinTimer + " to " + myCapabilities.MaxTimer + "."
        },
        {
            "alias": "Invalid Timer",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "InvalidTimer",
            "suffix": "The allowed range is " + myCapabilities.MinTimer + " to " + myCapabilities.MaxTimer + "."
        },
        {
            "alias": "Garbage Collection Timer",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "GarbageCollectionTimer",
            "suffix": "The allowed range is " + myCapabilities.MinTimer + " to " + myCapabilities.MaxTimer + "."
        },
        {
            "alias": "Static Redistribute Mode",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "StaticRedistEnabled",
            "suffix": "<br><samp>Enable<\/samp>: Enable static routes redistribution." +
                "<br><samp>Disable<\/samp>: Enable static routes redistribution."
        },
        {
            "alias": "Static Redistribute Metric Value",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "StaticRedistMetricVal",
            "suffix": "<br>The allowed range is " + myCapabilities.MinRedistSpecificMetric + " to " + myCapabilities.MaxRedistSpecificMetric + "." +
                "<br><samp>Auto<\/samp>: The redistributed metric value is " +
                "refer to redistributed default metric value." +
                "<br><samp>Specific<\/samp>: User specified metric for the static routes."
        },
        {
            "alias": "Connected Redistribute Mode",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "ConnectedRedistEnabled",
            "suffix": "<br><samp>Enable<\/samp>: Enable connected routes redistribution." +
                "<br><samp>Disable<\/samp>: Enable connected routes redistribution."
        },
        {
            "alias": "Connected Redistribute Metric Value",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "ConnectedRedistMetricVal",
            "suffix": "<br>The allowed range is " + myCapabilities.MinRedistSpecificMetric + " to " + myCapabilities.MaxRedistSpecificMetric + "." +
                "<br><samp>Auto<\/samp>: The redistributed metric value is " +
                "refer to redistributed default metric value." +
                "<br><samp>Specific<\/samp>: User specified metric for the connected routes."
        },
        {
            "alias": "OSPF Redistribute Mode",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "OspfRedistEnabled",
            "suffix": "<br><samp>Enable<\/samp>: Enable OSPF routes redistribution." +
                "<br><samp>Disable<\/samp>: Enable OSPF routes redistribution."
        },
        {
            "alias": "OSPF Redistribute Metric Value",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "OspfRedistMetricVal",
            "suffix": "<br>The allowed range is " + myCapabilities.MinRedistSpecificMetric + " to " + myCapabilities.MaxRedistSpecificMetric + "." +
                "<br><samp>Auto<\/samp>: The redistributed metric value is " +
                "refer to redistributed default metric value." +
                "<br><samp>Specific<\/samp>: User specified metric for the OSPF routes."
        },
        {
            "alias": "Redistribute Default Metric Value",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "RedistDefaultMetric",
            "suffix": "The allowed range is " + myCapabilities.MinRedistDefMetric + " to " + myCapabilities.MaxRedistDefMetric + "."
        },
        {
            "alias": "Redistribute Default Route",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "DefaultRouteRedist"
        },
        {
            "alias": "Default Passive Mode",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "DefPassiveIntf"
        },
        {
            "alias": "Administrative Distance",
            "type": "vtss_appl_rip_router_conf_t",
            "name": "AdminDistance",
            "suffix": "The allowed range is " + myCapabilities.MinAdminDistance + " to " + myCapabilities.MaxAdminDistance + "."
        }
    ];

    // Removed unsupported feature
    if (!myCapabilities.IsOspfRedistributedSupported) {
        param_names.splice(9, 2);
    }

    updateTableParamsDesc("TableParamsDesc", recv_json, "rip.config.router.get", param_names);
}

/* Update the received HTML request */
function requestUpdate(recv_json, name) {
    if (name == "capabilities") {
        if (recv_json) {
            // Clone a new one and save to global variable
            myCapabilities = JSON.parse(JSON.stringify(recv_json));
        } else {
            alert("requestUpdate() failed: Get dynamic capabilities data failed.");
            return;
        }
    }

    if (myCapabilities) {
        requestJsonDoc("jsonRpc.status.introspection.specific.inventory.get", "rip.config.router.get", processUpdate);
    }
}

/* Get JSON specification and capabilities */
window.addEvent('domready', function () {
    loadXMLDoc("/json_spec", processTableDesc);

    // This table requires two JSON data(capabilities/specific_inventory).
    // To ensure the completed data, we request the specific_inventory data after
    // the capabilities data is received and it is requested only one time.
    requestJsonDoc("rip.capabilities.get", null, requestUpdate, "capabilities");
});

    </script>
</head>

<body>
    <h1>RIP Global Configuration Help</h1>
    <p id="TableDesc"></p>
    <dl id="TableParamsDesc"></dl>
    <h2>Buttons</h2>
    <p>
        <input type="button" value="Clear RIP Process">: Click to reset the current RIP process.</p>
    <p>
        <input type="button" value="Save">: Click to save changes.</p>
    <p>
        <input type="button" value="Reset">: Click to undo any changes made locally and revert to previously saved values.</p>
</body>

</html>
