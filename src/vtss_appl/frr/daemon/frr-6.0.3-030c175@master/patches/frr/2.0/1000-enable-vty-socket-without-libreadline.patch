diff --git a/lib/vty.c b/lib/vty.c
index f387e79..76bc699 100644
--- a/lib/vty.c
+++ b/lib/vty.c
@@ -50,11 +50,9 @@ enum event
   VTY_READ,
   VTY_WRITE,
   VTY_TIMEOUT_RESET,
-#ifdef VTYSH
   VTYSH_SERV,
   VTYSH_READ,
   VTYSH_WRITE
-#endif /* VTYSH */
 };
 
 static void vty_event (enum event, int, struct vty *);
@@ -2032,7 +2030,6 @@ vty_serv_sock_family (const char* addr, unsigned short port, int family)
 }
 #endif /* HAVE_IPV6 */
 
-#ifdef VTYSH
 /* For sockaddr_un. */
 #include <sys/un.h>
 
@@ -2277,7 +2274,6 @@ vtysh_write (struct thread *thread)
   return 0;
 }
 
-#endif /* VTYSH */
 
 /* Determine address family to bind. */
 void
@@ -2294,9 +2290,7 @@ vty_serv_sock (const char *addr, unsigned short port, const char *path)
 #endif /* HAVE_IPV6 */
     }
 
-#ifdef VTYSH
   vty_serv_un (path);
-#endif /* VTYSH */
 }
 
 /* Close vty interface.  Warning: call this only from functions that
@@ -2543,7 +2537,6 @@ vty_read_config (char *config_file,
 
       host_config_set (config_default_dir);
 
-#ifdef VTYSH
       int ret;
       struct stat conf_stat;
 
@@ -2567,7 +2560,6 @@ vty_read_config (char *config_file,
           if (ret >= 0)
 	    goto tmp_free_and_out;
         }
-#endif /* VTYSH */
       confp = fopen (config_default_dir, "r");
       if (confp == NULL)
         {
@@ -2701,7 +2693,6 @@ vty_event (enum event event, int sock, struct vty *vty)
       vty_serv_thread = thread_add_read (vty_master, vty_accept, vty, sock);
       vector_set_index (Vvty_serv_thread, sock, vty_serv_thread);
       break;
-#ifdef VTYSH
     case VTYSH_SERV:
       vty_serv_thread = thread_add_read (vty_master, vtysh_accept, vty, sock);
       vector_set_index (Vvty_serv_thread, sock, vty_serv_thread);
@@ -2712,7 +2703,6 @@ vty_event (enum event event, int sock, struct vty *vty)
     case VTYSH_WRITE:
       vty->t_write = thread_add_write (vty_master, vtysh_write, vty, sock);
       break;
-#endif /* VTYSH */
     case VTY_READ:
       vty->t_read = thread_add_read (vty_master, vty_read, vty, sock);
 
