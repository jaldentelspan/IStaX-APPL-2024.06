diff --git a/lib/vty.c b/lib/vty.c
index 621e859..54cacd8 100644
--- a/lib/vty.c
+++ b/lib/vty.c
@@ -49,11 +49,9 @@ enum event {
 	VTY_READ,
 	VTY_WRITE,
 	VTY_TIMEOUT_RESET,
-#ifdef VTYSH
 	VTYSH_SERV,
 	VTYSH_READ,
 	VTYSH_WRITE
-#endif /* VTYSH */
 };
 
 static void vty_event(enum event, int, struct vty *);
@@ -1834,7 +1832,6 @@ static void vty_serv_sock_addrinfo(const char *hostname, unsigned short port)
 	freeaddrinfo(ainfo_save);
 }
 
-#ifdef VTYSH
 /* For sockaddr_un. */
 #include <sys/un.h>
 
@@ -2069,8 +2066,6 @@ static int vtysh_write(struct thread *thread)
 	return 0;
 }
 
-#endif /* VTYSH */
-
 /* Determine address family to bind. */
 void vty_serv_sock(const char *addr, unsigned short port, const char *path)
 {
@@ -2078,9 +2073,7 @@ void vty_serv_sock(const char *addr, unsigned short port, const char *path)
 	if (port)
 		vty_serv_sock_addrinfo(addr, port);
 
-#ifdef VTYSH
 	vty_serv_un(path);
-#endif /* VTYSH */
 }
 
 /* Close vty interface.  Warning: call this only from functions that
@@ -2317,7 +2310,6 @@ void vty_read_config(const char *config_file, char *config_default_dir)
 
 		host_config_set(config_default_dir);
 
-#ifdef VTYSH
 		int ret;
 		struct stat conf_stat;
 
@@ -2340,7 +2332,6 @@ void vty_read_config(const char *config_file, char *config_default_dir)
 			if (ret >= 0)
 				goto tmp_free_and_out;
 		}
-#endif /* VTYSH */
 		confp = fopen(config_default_dir, "r");
 		if (confp == NULL) {
 			fprintf(stderr,
@@ -2465,7 +2456,6 @@ static void vty_event(enum event event, int sock, struct vty *vty)
 			thread_add_read(vty_master, vty_accept, vty, sock);
 		vector_set_index(Vvty_serv_thread, sock, vty_serv_thread);
 		break;
-#ifdef VTYSH
 	case VTYSH_SERV:
 		vty_serv_thread =
 			thread_add_read(vty_master, vtysh_accept, vty, sock);
@@ -2479,7 +2469,6 @@ static void vty_event(enum event event, int sock, struct vty *vty)
 		vty->t_write =
 			thread_add_write(vty_master, vtysh_write, vty, sock);
 		break;
-#endif /* VTYSH */
 	case VTY_READ:
 		vty->t_read = thread_add_read(vty_master, vty_read, vty, sock);
 
