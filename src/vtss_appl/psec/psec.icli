#
# Copyright (c) 2006-2017 Microsemi Corporation "Microsemi". All Rights Reserved.
#
# Unpublished rights reserved under the copyright laws of the United States of
# America, other countries and international treaties. Permission to use, copy,
# store and modify, the software and its source code is granted but only in
# connection with products utilizing the Microsemi switch and PHY products.
# Permission is also granted for you to integrate into other products, disclose,
# transmit and distribute the software only in an absolute machine readable
# format (e.g. HEX file) and only in or with products utilizing the Microsemi
# switch and PHY products.  The source code of the software may not be
# disclosed, transmitted or distributed without the prior written permission of
# Microsemi.
#
# This copyright notice must appear in any copy, modification, disclosure,
# transmission or distribution of the software.  Microsemi retains all
# ownership, copyright, trade secret and proprietary rights in the software and
# its source code, including all modifications thereto.
#
# THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
# WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
# ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
# NON-INFRINGEMENT.
#

MODULE_IF_FLAG =

INCLUDE_BEGIN
#include <vtss/appl/psec.h>
#include "psec_icli_functions.h"
INCLUDE_END

FUNCTION_BEGIN
// Convert from mesa_rc to icli_rc. Return only if result is ICLI_RC_ERROR,
// because ICLI's auto-generated code returns ICLI_RC_OK as its last statement
// in every function. If we always returned (no matter RC code), we would get
// "unreachable code" compilation warnings :(
#define PSEC_RC(expr) {if ((expr) != VTSS_RC_OK) {return ICLI_RC_ERROR;}}

FUNCTION_END

PSEC_HELP = Port Security
PSEC_SWITCH_HELP = Show Port Security overview status.
PSEC_SHOW_ADDRESS_HELP = Show MAC Addresses learned by Port Security
PSEC_INTERFACE_HELP = Port interface
PSEC_PORT_LIST_HELP = Port list
PSEC_RATE_LIMIT_HELP = Rate limiter

!==============================================================================

CMD_BEGIN
COMMAND   = show port-security [interface <port_type_list>]
PRIVILEGE = ICLI_PRIVILEGE_0
PROPERTY  = ICLI_CMD_PROP_GREP
CMD_MODE  = ICLI_CMD_MODE_EXEC

DOC_CMD_DESC    = ##PSEC_SWITCH_HELP
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   = ##PSEC_SWITCH_HELP
DOC_CMD_EXAMPLE = show port-security

! 1: show
! 2: port-security
! 3: interface
! 4: <port_type_list>

HELP = ##ICLI_HELP_SHOW
HELP = ##PSEC_SWITCH_HELP
HELP = ##PSEC_INTERFACE_HELP
HELP = ##PSEC_PORT_LIST_HELP

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = plist

CODE_BEGIN
    PSEC_RC(psec_icli_show(session_id, plist, FALSE));
CODE_END
CMD_END

!==============================================================================

CMD_BEGIN
COMMAND   = debug show port-security [interface <port_type_list>]
PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP
CMD_MODE  = ICLI_CMD_MODE_EXEC

! 1: debug
! 2: show
! 3: port-security
! 4: interface
! 5: <port_type_list>

HELP = ##ICLI_HELP_DEBUG
HELP = ##ICLI_HELP_SHOW
HELP = ##PSEC_SWITCH_HELP
HELP = ##PSEC_INTERFACE_HELP
HELP = ##PSEC_PORT_LIST_HELP

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = plist

CODE_BEGIN
    PSEC_RC(psec_icli_show(session_id, plist, TRUE));
CODE_END
CMD_END

!==============================================================================

CMD_BEGIN
COMMAND   = show port-security address [interface <port_type_list>]
PRIVILEGE = ICLI_PRIVILEGE_0
PROPERTY  = ICLI_CMD_PROP_GREP
CMD_MODE  = ICLI_CMD_MODE_EXEC

DOC_CMD_DESC    = ##PSEC_SHOW_ADDRESS_HELP
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   = ##PSEC_SHOW_ADDRESS_HELP
DOC_CMD_EXAMPLE = show port-security address

! 1: show
! 2: port-security
! 3: address
! 4: interface
! 5: <port_type_list>

HELP = ##ICLI_HELP_SHOW
HELP = ##PSEC_HELP
HELP = ##PSEC_SHOW_ADDRESS_HELP
HELP = ##PSEC_INTERFACE_HELP
HELP = ##PSEC_PORT_LIST_HELP

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = plist

CODE_BEGIN
    PSEC_RC(psec_icli_address_show(session_id, plist, FALSE));
CODE_END
CMD_END

!==============================================================================

CMD_BEGIN
COMMAND   = debug show port-security address [interface <port_type_list>]
PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP
CMD_MODE  = ICLI_CMD_MODE_EXEC

! 1: debug
! 2: show
! 3: port-security
! 4: address
! 5: interface
! 6: <port_type_list>

HELP = ##ICLI_HELP_DEBUG
HELP = ##ICLI_HELP_SHOW
HELP = ##PSEC_HELP
HELP = ##PSEC_SHOW_ADDRESS_HELP
HELP = ##PSEC_INTERFACE_HELP
HELP = ##PSEC_PORT_LIST_HELP

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = plist

CODE_BEGIN
    PSEC_RC(psec_icli_address_show(session_id, plist, TRUE));
CODE_END
CMD_END

!==============================================================================

CMD_BEGIN
COMMAND   = clear port-security dynamic [{address <mac_addr> [vlan <vlan_id>]} | {interface <port_type_list> [vlan <vlan_id>]} | vlan <vlan_id>]
PRIVILEGE = ICLI_PRIVILEGE_15
CMD_MODE  = ICLI_CMD_MODE_EXEC

DOC_CMD_DESC    = Remove specific MAC addresses, all on one or more ports or all on a given VLAN.
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE = clear port-security dynamic

! 1: clear
! 2: port-security
! 3: dynamic
! 4: address
! 5: mac_addr
! 6: vlan
! 7: vlan_id
! 8: interface
! 9: <port_type_list>
!10: vlan
!11: vlan_id
!12: vlan
!13: vlan_id

HELP = ##ICLI_HELP_CLEAR
HELP = ##PSEC_HELP
HELP = Dynamic entries
HELP = Clear a specific (VLAN, MAC) tuple
HELP = MAC address to clear
HELP = VLAN keyword
HELP = VLAN on which to clear MAC address
HELP = ##PSEC_INTERFACE_HELP
HELP = ##PSEC_PORT_LIST_HELP
HELP = VLAN keyword
HELP = VLANs on interface to clear all MAC addresses for
HELP = Delete all MAC addresses on a given VLAN
HELP = VLAN on which to delete all MAC addresses

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = has_mac
CMD_VAR = mac
CMD_VAR = has_vlan_on_mac
CMD_VAR = vlan_on_mac
CMD_VAR =
CMD_VAR = plist
CMD_VAR = has_vlan_on_interface
CMD_VAR = vlan_on_interface
CMD_VAR = has_vlan
CMD_VAR = vlan

CODE_BEGIN
    PSEC_RC(psec_icli_mac_clear(session_id,
                                has_mac,
                                has_mac ? has_vlan_on_mac : plist != NULL ? has_vlan_on_interface : has_vlan,
                                mac,
                                plist,
                                has_mac ? vlan_on_mac : has_vlan_on_interface ? vlan_on_interface : vlan));
CODE_END
CMD_END

!==============================================================================

CMD_BEGIN
COMMAND   = debug show port-security rate-limit config
PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP
CMD_MODE  = ICLI_CMD_MODE_EXEC

HELP      = ##ICLI_HELP_DEBUG
HELP      = ##ICLI_HELP_SHOW
HELP      = ##PSEC_HELP
HELP      = ##PSEC_RATE_LIMIT_HELP
HELP      = Show configuration

CODE_BEGIN
    PSEC_RC(psec_icli_rate_limit_config_show(session_id));
CODE_END
CMD_END

!==============================================================================

CMD_BEGIN
COMMAND   = debug port-security rate-limit {[fill-level-min <uint>] [fill-level-max <uint>] [rate <uint>] [drop-age <uint>]}*1
PRIVILEGE = ICLI_PRIVILEGE_15
CMD_MODE  = ICLI_CMD_MODE_EXEC

HELP      = ##ICLI_HELP_DEBUG
HELP      = ##PSEC_HELP
HELP      = ##PSEC_RATE_LIMIT_HELP
HELP      = Hysteresis: after the burst capacity has been reached, do not allow new frames until it reaches this amount
HELP      = Minimum number of frames
HELP      = Burst capacity. At most this amount of frames in a burst
HELP      = Maximum number of frames
HELP      = At most this amount of frames per second over time (better to pick a power-of-two for this number)
HELP      = Number of frames per second
HELP      = Drop the frame if it is less than this amount of milliseconds since last frame with this MAC address was seen
HELP      = Number of milliseconds

CMD_VAR   =
CMD_VAR   =
CMD_VAR   =
CMD_VAR   = has_fill_level_min
CMD_VAR   = fill_level_min
CMD_VAR   = has_fill_level_max
CMD_VAR   = fill_level_max
CMD_VAR   = has_rate
CMD_VAR   = rate
CMD_VAR   = has_drop_age
CMD_VAR   = drop_age

CODE_BEGIN
    PSEC_RC(psec_icli_rate_limit_config_set(session_id, has_fill_level_min, fill_level_min, has_fill_level_max, fill_level_max, has_rate, rate, has_drop_age, drop_age));
CODE_END
CMD_END

!==============================================================================

CMD_BEGIN
COMMAND   = debug show port-security rate-limit statistics
PROPERTY  = ICLI_CMD_PROP_GREP
PRIVILEGE = ICLI_PRIVILEGE_15
CMD_MODE  = ICLI_CMD_MODE_EXEC

HELP      = ##ICLI_HELP_DEBUG
HELP      = ##ICLI_HELP_SHOW
HELP      = ##PSEC_HELP
HELP      = ##PSEC_RATE_LIMIT_HELP
HELP      = Show statistics

CODE_BEGIN
    PSEC_RC(psec_icli_rate_limit_statistics_show(session_id));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN
COMMAND   = debug clear port-security rate-limit statistics
PRIVILEGE = ICLI_PRIVILEGE_15
CMD_MODE  = ICLI_CMD_MODE_EXEC

HELP      = ##ICLI_HELP_DEBUG
HELP      = ##ICLI_HELP_CLEAR
HELP      = ##PSEC_HELP
HELP      = ##PSEC_RATE_LIMIT_HELP
HELP      = Clear statistics

CODE_BEGIN
    PSEC_RC(psec_icli_rate_limit_statistics_clear(session_id));
CODE_END
CMD_END

