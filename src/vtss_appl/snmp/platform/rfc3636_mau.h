/*

 Copyright (c) 2006-2017 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.

*/
/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.old-api.conf
 */

#ifndef RFC3636_MAU_H
#define RFC3636_MAU_H

#define RFC3636_SUPPORTED_MAU                               1
#define RFC3636_SUPPORTED_rpMAU                             0
#define RFC3636_SUPPORTED_ifMAU                             1
#define RFC3636_SUPPORTED_BROAD_MAU                 0
#define RFC3636_SUPPORTED_ifMAU_AUTONEG         1
/*
 * function declarations
 */
#if RFC3636_SUPPORTED_MAU
void            init_snmpDot3MauMgt(void);
FindVarMethod   var_snmpDot3MauMgt;
#if RFC3636_SUPPORTED_rpMAU
FindVarMethod   var_rpMauTable;
FindVarMethod   var_rpJackTable;
#endif      /*RFC3636_SUPPORTED_rpMAU*/
#if RFC3636_SUPPORTED_ifMAU
FindVarMethod   var_ifMauTable;
FindVarMethod   var_ifJackTable;
#endif      /*RFC3636_SUPPORTED_ifMAU*/
#if RFC3636_SUPPORTED_BROAD_MAU
FindVarMethod   var_broadMauBasicTable;
#endif      /*RFC3636_SUPPORTED_BROAD_MAU*/
#if RFC3636_SUPPORTED_ifMAU_AUTONEG
FindVarMethod   var_ifMauAutoNegTable;
#endif      /*RFC3636_SUPPORTED_ifMAU_AUTONEG*/

#if RFC3636_SUPPORTED_rpMAU
WriteMethod     write_rpMauStatus;
#endif      /*RFC3636_SUPPORTED_rpMAU*/
#if RFC3636_SUPPORTED_ifMAU
#if 0 /* Not support in E-Stax34 */
WriteMethod     write_ifMauStatus;
#endif
WriteMethod     write_ifMauDefaultType;
#endif      /*RFC3636_SUPPORTED_ifMAU*/
#if RFC3636_SUPPORTED_ifMAU_AUTONEG
WriteMethod     write_ifMauAutoNegAdminStatus;
WriteMethod     write_ifMauAutoNegCapAdvertisedBits;
WriteMethod     write_ifMauAutoNegRestart;
#if 0 /* Not support in E-Stax34 */
WriteMethod     write_ifMauAutoNegCapAdvertisedBits;
WriteMethod     write_ifMauAutoNegRemoteFaultAdvertised;
#endif
#endif      /*RFC3636_SUPPORTED_ifMAU_AUTONEG*/

#endif /* RFC3636_SUPPORTED_MAU */

#endif                          /* RFC3636_MAU_H */

