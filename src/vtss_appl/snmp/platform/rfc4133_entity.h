/*

 Copyright (c) 2006-2017 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.

*/
/*
 * Note: this file originally auto-generated by mib2c using
 *        : mib2c.old-api.conf
 */

#ifndef RFC4133_ENTITY_H
#define RFC4133_ENTITY_H

#define RFC4133_SUPPORTED_ENTITY                1
#define RFC4133_SUPPORTED_PHYSICAL              1
#define RFC4133_SUPPORTED_LOGICAL               0
#define RFC4133_SUPPORTED_MAPPING               0
#define RFC4133_SUPPORTED_PHYSICAL_WRITE        0
#define RFC4133_SUPPORTED_TRAPS                 1

/*
 * function declarations
 */
#if RFC4133_SUPPORTED_ENTITY
void            init_entityMIB(void);
FindVarMethod   var_entityMIB;
void            init_entityMIBObjects(void);
FindVarMethod   var_entityMIBObjects;

#if RFC4133_SUPPORTED_PHYSICAL
FindVarMethod   var_entPhysicalTable;
#endif /*RFC4133_SUPPORTED_PHYSICAL*/

#if RFC4133_SUPPORTED_LOGICAL
FindVarMethod   var_entLogicalTable;
#endif /*RFC4133_SUPPORTED_LOGICAL*/

#if RFC4133_SUPPORTED_MAPPING
FindVarMethod   var_entLPMappingTable;
FindVarMethod   var_entAliasMappingTable;
FindVarMethod   var_entPhysicalContainsTable;
#endif /*RFC4133_SUPPORTED_MAPPING*/

#if RFC4133_SUPPORTED_PHYSICAL_WRITE
WriteMethod     write_entPhysicalSerialNum;
WriteMethod     write_entPhysicalAlias;
WriteMethod     write_entPhysicalAssetID;
WriteMethod     write_entPhysicalUris;
#endif /*RFC4133_SUPPORTED_PHYSICAL*/

mesa_rc entConfigChange(vtss_isid_t isid);
#if RFC4133_SUPPORTED_TRAPS
void            init_entityMIBTraps(void);
FindVarMethod   var_entityMIBTraps;
#endif /*RFC4133_SUPPORTED_TRAPS*/

#endif /* RFC4133_SUPPORTED_ENTITY */

#endif                          /* ENTITYMIB_H */

