<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
 Copyright (c) 2006-2024 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.
-->

<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <title>PTP Statistics</title>
 <link href="lib/normal.css" rel="stylesheet" type="text/css">
 <script type="text/javascript" src="lib/mootools-core.js"></script>
 <script type="text/javascript" src="lib/config.js"></script>
 <script type="text/javascript" src="lib/ajax.js"></script>
 <script type="text/javascript" src="lib/spom.js"></script>
 <script type="text/javascript" src="lib/dynforms.js"></script>
 <script type="text/javascript">

var ptp_as_statis_tbody_id =
Array(
    "portData",
    "cmldsPortData"
);
var timerID;

// Help page macic
var help_page = "/help/help_ptp_as_statistics.htm";

function addRow(index, frag, values)
{
    var tr = CreateStyledElement("tr", index % 2 ? "config_odd" : "config_even");
    var x;

    for(var i = 0; i < values.length; i++) {
        if(i === 0)  {
          x =  addTextCell(tr, poag2portid(values[0]), "cr");
          x.size = 1;
        } else { 
            x = addTextCell(tr, values[i], "cr");
            x.size = 1;
        }
    }
    frag.appendChild(tr);       // Add row to fragment
}

function cmldsDisplay()
{
    // instance id 4 in the drop down menu is used for cmlds
    if (id == 4) {
        document.getElementById("instanceStats").style.visibility = "hidden";
        document.getElementById("instanceStats").style.height = "0px";
        document.getElementById("instanceStats").style.overflow = "hidden";
        document.getElementById("cmldsStats").style.visibility = "visible";
        document.getElementById("cmldsStats").style.height = "auto";
        document.getElementById("cmldsStats").style.overflow = "visible";
    } else {
        document.getElementById("instanceStats").style.visibility = "visible";
        document.getElementById("instanceStats").style.height = "auto";
        document.getElementById("instanceStats").style.overflow = "visible";
        document.getElementById("cmldsStats").style.visibility = "hidden";
        document.getElementById("cmldsStats").style.height = "0px";
        document.getElementById("cmldsStats").style.overflow = "hidden";
    }
}

function processUpdate(req)
{
    var page_data = req.responseText.split("$");
    // create holder for accumulated tbody elements and text nodes

    var frag = document.createDocumentFragment();
    if (id == 4) {
        var tbody = document.getElementById(ptp_as_statis_tbody_id[1]);
    } else {
        var tbody = document.getElementById(ptp_as_statis_tbody_id[0]);
    }
    cmldsDisplay();
    var rows = 0;
    data = page_data[1].split("#");
    for(var i = 0; i < data.length; i++) {
        if(data[i]) {
            var pval = data[i].split("/");
            addRow(rows++, frag, pval);
        }
    }
    if (rows == 0) {
        var tr = CreateStyledElement("tr", "notice");
        addTextCell(tr, "Selected instance is not enabled", "cl", 17);
        frag.appendChild(tr);
    }
    clearChildNodes(tbody);
    if (!tbody.appendChild(frag)) { // Add Frag to table body
        alert("This browser doesn't support dynamic tables.");
    }
    var autorefresh = document.getElementById('autorefresh');
    if(autorefresh.checked) {
        if(timerID) {
            clearTimeout(timerID);
        }
        timerID = setTimeout('requestUpdate()', settingsRefreshInterval());
    }
    document.getElementById("update").style.visibility = "hidden";
}

function requestUpdate() {
    document.getElementById("update").style.visibility = "visible";
    if(SpomNavigationLoading()) {
        return;                 // Bail out, navigation will trigger update
    }
    var inst_id = $("instanceselect");
    // The server has already made the user IDs one-based
    id = inst_id.options[inst_id.selectedIndex].value;
    // id 4 is used for CMLDS.
    if (id < 4) {
        loadXMLDoc(SpomAddSidArg("/stat/ptp_as_statistics?id=" + id), processUpdate, 'portData');
    } else {
        loadXMLDoc(SpomAddSidArg("/stat/ptp_as_statistics?id=" + id), processUpdate, 'cmldsPortData');
    }
    SpomUpdateDisplaySid("display_sid");
    SpomUpdateFormSid("submit_sid");
}

function SpomSidSelectorUpdate(sid)
{
    SpomSetCurrentSid(sid);     // Save current SID
    requestUpdate();            // Update page to reflect selector
}

function requestClear() {
    document.getElementById("update").style.visibility = "visible";
    var inst_id = $("instanceselect");
    // The server has already made the user IDs one-based
    id = inst_id.options[inst_id.selectedIndex].value;
    // id 4 is used for CMLDS.
    if (id < 4) {
        loadXMLDoc(SpomAddSidArg("/stat/ptp_as_statistics?clear=1&id=" + id), processUpdate, 'portData');
    } else {
        loadXMLDoc(SpomAddSidArg("/stat/ptp_as_statistics?clear=1&id=" + id), processUpdate, 'cmldsPortData');
    }
}

function InstanceSelect(sel)
{
    selectedInstance = sel.options[sel.selectedIndex].value; 
    requestUpdate();
}

function chkRefresh(fld)
{
    if(!fld.checked) {
        if(timerID) {
            clearTimeout(timerID);
        }
        timerID = null;
    } else {
        requestUpdate();
    }
}

</script>
</head>

<body class="content" onload="requestUpdate();">

<h1>PTP Clock Instance Specific Statistics <span id="display_sid"></span><span>&nbsp;</span><span id="id"></span></h1>

<div class="refreshbar">
 <form action="#">
 <select id="instanceselect" onchange="InstanceSelect(this);">
   <option value="0">Clock Instance 0</option>
   <option value="1">Clock Instance 1</option>
   <option value="2">Clock Instance 2</option>
   <option value="3">Clock Instance 3</option>
   <option value="4">CMLDS</option>
  </select>
  <label for="autorefresh">Auto-refresh</label>
  <input type="checkbox" name="autorefresh" id="autorefresh" onclick="chkRefresh(this);">
  <input type="button" value="Refresh" onclick="requestUpdate(); this.blur();">
  <input type="button" value="Clear"   onclick="requestClear();  this.blur();">
  <img id="update" alt="" src="images/updating.gif">
 </form>
</div>

<div id="instanceStats" style="visibility:visible;height:auto;overflow:visible;">
<table id="portStatistics" summary="Statistics" class="config">
 <thead>
  <tr class="config_header">
   <th rowspan="2">Port</th>
   <th colspan="2">SyncCount</th>
   <th colspan="2">FollowUpCount</th>
   <th colspan="2">PdelayRequestCount</th>
   <th colspan="2">PdelayResponseCount</th>
   <th colspan="2">PdelayResponseFollowUpCount</th>
   <th colspan="2">DelayRequestCount</th>
   <th colspan="2">DelayResponseCount</th>
   <th colspan="2">AnnounceCount</th>
   <th rowspan="2">PTPPacketDiscardCount</th>
   <th rowspan="2">syncReceiptTimeoutCount</th>
   <th rowspan="2">announceReceiptTimeoutCount</th>
   <th rowspan="2">pdelayAllowedLostResponsesExceededCount</th>
  </tr>
  <tr class="config_header">
   <th>Rx</th>
   <th>TX</th>
   <th>Rx</th>
   <th>TX</th>
   <th>Rx</th>
   <th>TX</th>
   <th>Rx</th>
   <th>TX</th>
   <th>Rx</th>
   <th>TX</th>
   <th>Rx</th>
   <th>TX</th>
   <th>Rx</th>
   <th>TX</th>
   <th>Rx</th>
   <th>TX</th>
  </tr>
 </thead>
 <tbody id="portData">
 </tbody>
</table>
</div>

<div id="cmldsStats" style="visibility:hidden;height:0px;overflow:hidden;">
<h1>802.1AS Common Mean Link Delay Service Statistics </h1>
<table id="cmldsPortStatistics" summary="802.1AS CMLDS Statistics" class="config">
 <thead>
  <tr class="config_header">
   <th rowspan="2">Port</th>
   <th colspan="2">PdelayRequestCount</th>
   <th colspan="2">PdelayResponseCount</th>
   <th colspan="2">PdelayResponseFollowUpCount</th>
   <th rowspan="2">PTPPacketDiscardCount</th>
   <th rowspan="2">pdelayAllowedLostResponsesExceededCount</th>
  </tr>
  <tr class="config_header">
   <th>Rx</th>
   <th>TX</th>
   <th>Rx</th>
   <th>TX</th>
   <th>Rx</th>
   <th>TX</th>
  </tr>
 </thead>
 <tbody id="cmldsPortData">
 </tbody>
</table>
</div>


</body>
</html>


<!--
    local variables:
    mode: java
    c-basic-offset: 4
    tab-width: 8
    c-comment-only-line-offset: 0
    end:
-->
