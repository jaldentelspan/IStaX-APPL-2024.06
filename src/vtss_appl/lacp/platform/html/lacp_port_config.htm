<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--
 Copyright (c) 2006-2023 Microsemi Corporation "Microsemi". All Rights Reserved.

 Unpublished rights reserved under the copyright laws of the United States of
 America, other countries and international treaties. Permission to use, copy,
 store and modify, the software and its source code is granted but only in
 connection with products utilizing the Microsemi switch and PHY products.
 Permission is also granted for you to integrate into other products, disclose,
 transmit and distribute the software only in an absolute machine readable
 format (e.g. HEX file) and only in or with products utilizing the Microsemi
 switch and PHY products.  The source code of the software may not be
 disclosed, transmitted or distributed without the prior written permission of
 Microsemi.

 This copyright notice must appear in any copy, modification, disclosure,
 transmission or distribution of the software.  Microsemi retains all
 ownership, copyright, trade secret and proprietary rights in the software and
 its source code, including all modifications thereto.

 THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
 WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
 ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
 WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
 NON-INFRINGEMENT.
-->

<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
 <title>LACP Port Configuration</title>
 <link href="lib/normal.css" rel="stylesheet" type="text/css">
 <script type="text/javascript" src="lib/mootools-core.js"></script>
 <script type="text/javascript" src="lib/HeaderControl.js"></script>
 <script type="text/javascript" src="lib/config.js"></script>
 <script type="text/javascript" src="lib/ajax.js"></script>
 <script type="text/javascript" src="lib/spom.js"></script>
 <script type="text/javascript" src="lib/dynforms.js"></script>
 <script type="text/javascript" src="lib/validate.js"></script>
 <script type="text/javascript">

// Help page
var help_page = "/help/help_lacp_port_config.htm";

var timeoutT = Array("Fast", "Slow");
var timeoutV = Array(1, 0);

function addRow(index, frag, values)
{
    var portno = parseInt(values[0]);
    var enable = parseInt(values[1]);
    var timeout = parseInt(values[2]);
    var prio = parseInt(values[3]);

    var tr = CreateStyledElement("tr", index % 2 ? "config_odd" : "config_even");

    addTextCell(tr, portno, "cr");
    addTextCell(tr, enable ? "Yes" : "No", "cr");
    addSelectCell(tr, timeoutT, timeoutV, timeout, "cr", "timeout_" + portno);

    var prio_in = addInputCell(tr, prio, "cr", "prio_" + portno, 5);
    prio_in.setAttribute("prio", 5); // 0 - 65535
    	
    frag.appendChild(tr);       // Add row to fragment
}

function addSystemPriority(frag, value_pri) {
    //system priority
    var tr = document.createElement("tr");
    addLabelTextCell(tr, "System Priority", "param_label", "system_priority");
    addInputCell(tr, value_pri, "cl", "system_priority", 5, 5);
    frag.appendChild(tr);
}

function processUpdate(req, ref)
{
    if(redirectOnError(req, "/stack_error.htm"))
        return;

    var conf = req.responseText.split("#");
    var portconfig = conf[0].split("|");

    /* create LACP system configuration */
    // create holder for accumulated tbody elements and text nodes
    var frag = document.createDocumentFragment();
    addSystemPriority(frag, conf[1]);

    var tbody = document.getElementById("systemData");
    clearChildNodes(tbody);
    if (!tbody.appendChild(frag)) { // Add Frag to table body
        alert("This browser doesn't support dynamic tables.");
    }
    
    /* create LACP port configuration */
    // create holder for accumulated tbody elements and text nodes
    for(var i = 0; i < portconfig.length; i++) {
        if(portconfig[i]) {
            var pval = portconfig[i].split("/");
            addRow(i, frag, pval);
        }
    }
	
    var tbody = document.getElementById(ref);
    clearChildNodes(tbody);
    if (!tbody.appendChild(frag)) { // Add Frag to table body
        alert("This browser doesn't support dynamic tables.");
    }
    var cBar = new HeaderControlBar([{text: "*", className: "cr"}, {text: ""}, {name: "timeout_"}, {name: "prio_"}]);
    cBar.construct('portCtrl', 'config_odd');
}

function requestUpdate() {
    if(SpomNavigationLoading())
        return;                 // Bail out, navigation will trigger update

    loadXMLDoc(SpomAddSidArg("/config/lacp_ports"), processUpdate, 'portData');
    SpomUpdateDisplaySid("display_sid");
    SpomUpdateFormSid("submit_sid");
}

function SpomSidSelectorUpdate(sid)
{
    SpomSetCurrentSid(sid);     // Save current SID
    requestUpdate();            // Update page to reflect selector
}

function resetForm(form)
{
    form.reset();
}

function checkForm(form)
{
    // Check all keys, which are written by the user in clear text.
    for (var i = configPortMin; i <= configNormalPortMax; i++) {
        if(!isWithinRange("prio_" + i, 1, 65535, "'Prio'")) {
            return false;   // Disallow submit
        }
    }
    return true;         
}

</script>
</head>


<body class="content" onload="requestUpdate();">

<form method="POST" action="/config/lacp_ports" onsubmit="return checkForm(this);">

<h1>LACP System Configuration</h1>

<table id="systemConfig" summary="LACP System Configuration" class="config">
 <tbody id="systemData">
 </tbody>
</table>

<h1>LACP Port Configuration <span id="display_sid"></span></h1>

<table id="portConfig" summary="LACP Port Configuration" class="config">
 <thead>
  <tr class="config_header">
   <th>Port</th>
   <th>LACP</th>
   <th>Timeout</th>	
   <th>Prio</th>
  </tr>
 </thead>
 <tbody id="portCtrl">
 </tbody>
 <tbody id="portData">
 </tbody>
</table>
<p>
<input type="hidden" id="submit_sid" name="sid">
<input type="submit" value="Save">
<input type="button" value="Reset" onclick="resetForm(this.form);">
</p>

</form>

</body>
</html>

<!--
    local variables:
    mode: java
    c-basic-offset: 4
    tab-width: 8
    c-comment-only-line-offset: 0
    end:
-->
