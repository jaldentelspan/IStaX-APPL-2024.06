#
# Copyright (c) 2006-2024 Microsemi Corporation "Microsemi". All Rights Reserved.
#
# Unpublished rights reserved under the copyright laws of the United States of
# America, other countries and international treaties. Permission to use, copy,
# store and modify, the software and its source code is granted but only in
# connection with products utilizing the Microsemi switch and PHY products.
# Permission is also granted for you to integrate into other products, disclose,
# transmit and distribute the software only in an absolute machine readable
# format (e.g. HEX file) and only in or with products utilizing the Microsemi
# switch and PHY products.  The source code of the software may not be
# disclosed, transmitted or distributed without the prior written permission of
# Microsemi.
#
# This copyright notice must appear in any copy, modification, disclosure,
# transmission or distribution of the software.  Microsemi retains all
# ownership, copyright, trade secret and proprietary rights in the software and
# its source code, including all modifications thereto.
#
# THIS SOFTWARE HAS BEEN PROVIDED "AS IS". MICROSEMI HEREBY DISCLAIMS ALL
# WARRANTIES OF ANY KIND WITH RESPECT TO THE SOFTWARE, WHETHER SUCH WARRANTIES
# ARE EXPRESS, IMPLIED, STATUTORY OR OTHERWISE INCLUDING, WITHOUT LIMITATION,
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR USE OR PURPOSE AND
# NON-INFRINGEMENT.
#

MODULE_IF_FLAG = defined(VTSS_SW_OPTION_TOD)

INCLUDE_BEGIN
#include "tod_icli_functions.h"
#include "icli_porting_util.h"
#include "vtss_tod_api.h"
INCLUDE_END

ICLI_HELP_TOD = Time Of Day management

FUNCTION_BEGIN
BOOL tod_multi_domain_check(u32 session_id, icli_runtime_ask_t ask, icli_runtime_t *runtime)
{
    switch (ask) {
        case ICLI_ASK_PRESENT:
            if (fast_cap(MESA_CAP_TS_DOMAIN_CNT) > 1) {
                runtime->present = true;
            } else {
                runtime->present = false;
            }
            return TRUE;
        default:
            break;
    }
    return FALSE;
}
FUNCTION_END

EXPORT_BEGIN
EXPORT_END


!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug tod phy ts [ enable | disable ]

DOC_CMD_DESC    = 
DOC_CMD_DEFAULT = 
DOC_CMD_USAGE   = 
DOC_CMD_EXAMPLE = 

FUNC_NAME = 
FUNC_REUSE = 

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = 

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! debug
CMD_VAR = 
RUNTIME = tod_icli_runtime_phy_timestamping_present
HELP    = ##ICLI_HELP_DEBUG
BYWORD  = 

! tod
CMD_VAR = 
RUNTIME = 
HELP    = ##ICLI_HELP_TOD
BYWORD  = 

! phy
CMD_VAR = 
RUNTIME = 
HELP    = PHY
BYWORD  = 

! ts
CMD_VAR = 
RUNTIME = 
HELP    = Time stamping
BYWORD  = 

! enable
CMD_VAR = has_enable
RUNTIME = 
HELP    = Enable PHY time stamping function
BYWORD  = enable : Option

! disable
CMD_VAR = has_disable
RUNTIME = 
HELP    = Disable PHY time stamping function
BYWORD  = disable : Option

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(tod_icli_debug_phy_ts(session_id, has_enable, has_disable, plist));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug tod monitor { enable | disable }

DOC_CMD_DESC    = 
DOC_CMD_DEFAULT = 
DOC_CMD_USAGE   = 
DOC_CMD_EXAMPLE = 

FUNC_NAME = 
FUNC_REUSE = 

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = 

CMD_MODE = ICLI_CMD_MODE_INTERFACE_PORT_LIST
MODE_VAR = plist

! debug
CMD_VAR = 
RUNTIME = tod_icli_runtime_phy_timestamping_present 
HELP    = ##ICLI_HELP_DEBUG
BYWORD  = 

! tod
CMD_VAR = 
RUNTIME = 
HELP    = ##ICLI_HELP_TOD
BYWORD  = 

! monitor
CMD_VAR = 
RUNTIME = 
HELP    = Time-of-day monitor
BYWORD  = 

! enable
CMD_VAR = has_enable
RUNTIME = 
HELP    = Enable monitor
BYWORD  = enable : Option

! disable
CMD_VAR = has_disable
RUNTIME = 
HELP    = Disable monitor
BYWORD  = disable : Option

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
ICLI_RC(tod_icli_debug_tod_monitor(session_id, has_enable, has_disable, plist));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug tod freq-adjust <-65535-65535>

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: tod
! 3: freq-adjust
! 4: <-65535-65535>

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = v_minus_65535_to_65535

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =

HELP =
HELP =
HELP =
HELP =

BYWORD =
BYWORD =
BYWORD =
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    int64_t adj = v_minus_65535_to_65535;
    adj = (adj << 16);
    vtss_tod_set_adjtimer(0, adj);
CODE_END

CMD_END


!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug tod show status { [ interface <port_type_list> ] }

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: tod
! 3: show
! 4: status
! 5: interface
! 6: <port_type_list>

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = has_interface
CMD_VAR = v_port_type_list

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =

HELP =
HELP =
HELP =
HELP =
HELP = Optional interface list.
HELP =

BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD = interface : Option
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    ICLI_RC(tod_icli_debug_status_show(session_id, has_interface, v_port_type_list));
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug tod show clock [ domain <0-2> ]

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: tod
! 3: show
! 4: clock
! 5: domain
! 6: <0-2>

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = has_domain
CMD_VAR = v_0_to_2

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME = tod_multi_domain_check
RUNTIME =

HELP =
HELP =
HELP =
HELP = Time of day running in chip.
HELP = clock domain in chip supporting multiple domains.
HELP = clock domain number.

BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD = domain : Option
BYWORD =

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    uint32_t clk_domain = has_domain ? v_0_to_2 : 0;
    mesa_timestamp_t ts = {};
    uint64_t tc;
    char str[100] = {};

    vtss_tod_gettimeofday(clk_domain, &ts, &tc);
    vtss_tod_timestamp_to_string(&ts, sizeof(str), str);
    ICLI_PRINTF("clock domain %d : %s\n", clk_domain, str);
CODE_END

CMD_END

!==============================================================================

CMD_BEGIN

IF_FLAG =

COMMAND = debug tod adj-clk [ domain <0-2> ] <0-65535> <0-4294967295> <0-1000000000> [ neg ]

DOC_CMD_DESC    =
DOC_CMD_DEFAULT =
DOC_CMD_USAGE   =
DOC_CMD_EXAMPLE =

FUNC_NAME =
FUNC_REUSE =

PRIVILEGE = ICLI_PRIVILEGE_15
PROPERTY  = ICLI_CMD_PROP_GREP

CMD_MODE = ICLI_CMD_MODE_EXEC
MODE_VAR =

! 1: debug
! 2: tod
! 3: adj-clk
! 4: domain
! 5: <0-2>
! 6: <0-65535>
! 7: <0-4294967295>
! 8: <0-1000000000>
! 9: neg

CMD_VAR =
CMD_VAR =
CMD_VAR =
CMD_VAR = has_domain
CMD_VAR = clk_domain
CMD_VAR = sec_msb
CMD_VAR = sec_lsb
CMD_VAR = nano_sec
CMD_VAR = has_neg

RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME = tod_multi_domain_check
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =
RUNTIME =

HELP =
HELP =
HELP = Adjust time of day in chip.
HELP = clock domain
HELP = clock domain number in chip.
HELP = Adjust seconds MSB [0..65535]
HELP = Adjust seconds LSB [0..4294967295]
HELP = Adjust nanoseconds [0..1000000000]
HELP = Adjust time negatively.

BYWORD =
BYWORD =
BYWORD =
BYWORD = domain : Option
BYWORD =
BYWORD =
BYWORD =
BYWORD =
BYWORD = neg : Option

VARIABLE_BEGIN
VARIABLE_END

CODE_BEGIN
    uint32_t domain = has_domain ? clk_domain : 0;
    mesa_timestamp_t  ts;
    ts.sec_msb = sec_msb;
    ts.seconds = sec_lsb;
    ts.nanoseconds = nano_sec;

    vtss_tod_settimeofday_delta(domain, &ts, has_neg ? TRUE : FALSE);
CODE_END

CMD_END
